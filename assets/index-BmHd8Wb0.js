var Gi=Object.defineProperty;var Yi=(s,t,e)=>t in s?Gi(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var Et=(s,t,e)=>Yi(s,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function e(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(r){if(r.ep)return;r.ep=!0;const i=e(r);fetch(r.href,i)}})();const tr=(s,t)=>(s%t+t)%t,$i=(s,t,e)=>t+s*(e-t),Hi=(s,t)=>{const e=s*Math.cos(t),n=s*Math.sin(t);return[e,n]},Rr=(s,t)=>t===0?s:Rr(t,s%t),ds=(s,t)=>{const[e,n]=t===void 0?[0,s]:[s,t];return Math.floor(Math.random()*(n-e))+e},Ge=s=>s[ds(s.length)],Zi=(s,t)=>{const e=s.length,n=Array(e);t=(t%e+e)%e;for(let r=0;r<e;r++){const i=s[r],a=(r+t)%e;n[a]=i}return n},Jn=(s,t,e,{skip:n=[]}={})=>{let r=[];for(let i=t;i<e;i++)r.push(i);return n=new Set([n].flat(1/0)),r=r.filter(i=>Rr(i,s)===1&&!n.has(i)),Ge(r)},er=(s,t,e=0)=>{if(s>t)throw new Error(`More pulses (${s}) than steps (${t})!`);const n=Array(t);let r=0;for(let i=1;i<=t;i++){const a=Math.floor(i*s/t),o=a-r;r=a;const c=i==t?0:i;n[c]=o}return Zi(n,e)},xr="15.1.22",nr=(s,t,e)=>({endTime:t,insertTime:e,type:"exponentialRampToValue",value:s}),sr=(s,t,e)=>({endTime:t,insertTime:e,type:"linearRampToValue",value:s}),ns=(s,t)=>({startTime:t,type:"setValue",value:s}),Nr=(s,t,e)=>({duration:e,startTime:t,type:"setValueCurve",values:s}),Or=(s,t,{startTime:e,target:n,timeConstant:r})=>n+(t-n)*Math.exp((e-s)/r),be=s=>s.type==="exponentialRampToValue",yn=s=>s.type==="linearRampToValue",ee=s=>be(s)||yn(s),ps=s=>s.type==="setValue",Yt=s=>s.type==="setValueCurve",vn=(s,t,e,n)=>{const r=s[t];return r===void 0?n:ee(r)||ps(r)?r.value:Yt(r)?r.values[r.values.length-1]:Or(e,vn(s,t-1,r.startTime,n),r)},rr=(s,t,e,n,r)=>e===void 0?[n.insertTime,r]:ee(e)?[e.endTime,e.value]:ps(e)?[e.startTime,e.value]:Yt(e)?[e.startTime+e.duration,e.values[e.values.length-1]]:[e.startTime,vn(s,t-1,e.startTime,r)],ss=s=>s.type==="cancelAndHold",rs=s=>s.type==="cancelScheduledValues",te=s=>ss(s)||rs(s)?s.cancelTime:be(s)||yn(s)?s.endTime:s.startTime,ir=(s,t,e,{endTime:n,value:r})=>e===r?r:0<e&&0<r||e<0&&r<0?e*(r/e)**((s-t)/(n-t)):0,or=(s,t,e,{endTime:n,value:r})=>e+(s-t)/(n-t)*(r-e),Xi=(s,t)=>{const e=Math.floor(t),n=Math.ceil(t);return e===n?s[e]:(1-(t-e))*s[e]+(1-(n-t))*s[n]},Qi=(s,{duration:t,startTime:e,values:n})=>{const r=(s-e)/t*(n.length-1);return Xi(n,r)},un=s=>s.type==="setTarget";class Ji{constructor(t){this._automationEvents=[],this._currenTime=0,this._defaultValue=t}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(t){const e=te(t);if(ss(t)||rs(t)){const n=this._automationEvents.findIndex(i=>rs(t)&&Yt(i)?i.startTime+i.duration>=e:te(i)>=e),r=this._automationEvents[n];if(n!==-1&&(this._automationEvents=this._automationEvents.slice(0,n)),ss(t)){const i=this._automationEvents[this._automationEvents.length-1];if(r!==void 0&&ee(r)){if(i!==void 0&&un(i))throw new Error("The internal list is malformed.");const a=i===void 0?r.insertTime:Yt(i)?i.startTime+i.duration:te(i),o=i===void 0?this._defaultValue:Yt(i)?i.values[i.values.length-1]:i.value,c=be(r)?ir(e,a,o,r):or(e,a,o,r),l=be(r)?nr(c,e,this._currenTime):sr(c,e,this._currenTime);this._automationEvents.push(l)}if(i!==void 0&&un(i)&&this._automationEvents.push(ns(this.getValue(e),e)),i!==void 0&&Yt(i)&&i.startTime+i.duration>e){const a=e-i.startTime,o=(i.values.length-1)/i.duration,c=Math.max(2,1+Math.ceil(a*o)),l=a/(c-1)*o,u=i.values.slice(0,c);if(l<1)for(let h=1;h<c;h+=1){const p=l*h%1;u[h]=i.values[h-1]*(1-p)+i.values[h]*p}this._automationEvents[this._automationEvents.length-1]=Nr(u,i.startTime,a)}}}else{const n=this._automationEvents.findIndex(a=>te(a)>e),r=n===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[n-1];if(r!==void 0&&Yt(r)&&te(r)+r.duration>e)return!1;const i=be(t)?nr(t.value,t.endTime,this._currenTime):yn(t)?sr(t.value,e,this._currenTime):t;if(n===-1)this._automationEvents.push(i);else{if(Yt(t)&&e+t.duration>te(this._automationEvents[n]))return!1;this._automationEvents.splice(n,0,i)}}return!0}flush(t){const e=this._automationEvents.findIndex(n=>te(n)>t);if(e>1){const n=this._automationEvents.slice(e-1),r=n[0];un(r)&&n.unshift(ns(vn(this._automationEvents,e-2,r.startTime,this._defaultValue),r.startTime)),this._automationEvents=n}}getValue(t){if(this._automationEvents.length===0)return this._defaultValue;const e=this._automationEvents.findIndex(a=>te(a)>t),n=this._automationEvents[e],r=(e===-1?this._automationEvents.length:e)-1,i=this._automationEvents[r];if(i!==void 0&&un(i)&&(n===void 0||!ee(n)||n.insertTime>t))return Or(t,vn(this._automationEvents,r-1,i.startTime,this._defaultValue),i);if(i!==void 0&&ps(i)&&(n===void 0||!ee(n)))return i.value;if(i!==void 0&&Yt(i)&&(n===void 0||!ee(n)||i.startTime+i.duration>t))return t<i.startTime+i.duration?Qi(t,i):i.values[i.values.length-1];if(i!==void 0&&ee(i)&&(n===void 0||!ee(n)))return i.value;if(n!==void 0&&be(n)){const[a,o]=rr(this._automationEvents,r,i,n,this._defaultValue);return ir(t,a,o,n)}if(n!==void 0&&yn(n)){const[a,o]=rr(this._automationEvents,r,i,n,this._defaultValue);return or(t,a,o,n)}return this._defaultValue}}const Ki=s=>({cancelTime:s,type:"cancelAndHold"}),to=s=>({cancelTime:s,type:"cancelScheduledValues"}),eo=(s,t)=>({endTime:t,type:"exponentialRampToValue",value:s}),no=(s,t)=>({endTime:t,type:"linearRampToValue",value:s}),so=(s,t,e)=>({startTime:t,target:s,timeConstant:e,type:"setTarget"}),ro=()=>new DOMException("","AbortError"),io=s=>(t,e,[n,r,i],a)=>{s(t[r],[e,n,i],o=>o[0]===e&&o[1]===n,a)},oo=s=>(t,e,n)=>{const r=[];for(let i=0;i<n.numberOfInputs;i+=1)r.push(new Set);s.set(t,{activeInputs:r,outputs:new Set,passiveInputs:new WeakMap,renderer:e})},ao=s=>(t,e)=>{s.set(t,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:e})},Se=new WeakSet,Er=new WeakMap,fs=new WeakMap,Mr=new WeakMap,ms=new WeakMap,On=new WeakMap,Ir=new WeakMap,is=new WeakMap,os=new WeakMap,as=new WeakMap,Dr={construct(){return Dr}},co=s=>{try{const t=new Proxy(s,Dr);new t}catch{return!1}return!0},ar=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,cr=(s,t)=>{const e=[];let n=s.replace(/^[\s]+/,""),r=n.match(ar);for(;r!==null;){const i=r[1].slice(1,-1),a=r[0].replace(/([\s]+)?;?$/,"").replace(i,new URL(i,t).toString());e.push(a),n=n.slice(r[0].length).replace(/^[\s]+/,""),r=n.match(ar)}return[e.join(";"),n]},lr=s=>{if(s!==void 0&&!Array.isArray(s))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},ur=s=>{if(!co(s))throw new TypeError("The given value for processorCtor should be a constructor.");if(s.prototype===null||typeof s.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},lo=(s,t,e,n,r,i,a,o,c,l,u,h,p)=>{let f=0;return(d,m,_={credentials:"omit"})=>{const y=u.get(d);if(y!==void 0&&y.has(m))return Promise.resolve();const b=l.get(d);if(b!==void 0){const g=b.get(m);if(g!==void 0)return g}const C=i(d),S=C.audioWorklet===void 0?r(m).then(([g,T])=>{const[w,v]=cr(g,T),x=`${w};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${v}
})})(window,'_AWGS')`;return e(x)}).then(()=>{const g=p._AWGS.pop();if(g===void 0)throw new SyntaxError;n(C.currentTime,C.sampleRate,()=>g(class{},void 0,(T,w)=>{if(T.trim()==="")throw t();const v=os.get(C);if(v!==void 0){if(v.has(T))throw t();ur(w),lr(w.parameterDescriptors),v.set(T,w)}else ur(w),lr(w.parameterDescriptors),os.set(C,new Map([[T,w]]))},C.sampleRate,void 0,void 0))}):Promise.all([r(m),Promise.resolve(s(h,h))]).then(([[g,T],w])=>{const v=f+1;f=v;const[x,R]=cr(g,T),O=`${x};((AudioWorkletProcessor,registerProcessor)=>{${R}
})(${w?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${w?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${w?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${v}',class extends AudioWorkletProcessor{process(){return !1}})`,V=new Blob([O],{type:"application/javascript; charset=utf-8"}),M=URL.createObjectURL(V);return C.audioWorklet.addModule(M,_).then(()=>{if(o(C))return C;const I=a(C);return I.audioWorklet.addModule(M,_).then(()=>I)}).then(I=>{if(c===null)throw new SyntaxError;try{new c(I,`__sac${v}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(M))});return b===void 0?l.set(d,new Map([[m,S]])):b.set(m,S),S.then(()=>{const g=u.get(d);g===void 0?u.set(d,new Set([m])):g.add(m)}).finally(()=>{const g=l.get(d);g!==void 0&&g.delete(m)}),S}},Wt=(s,t)=>{const e=s.get(t);if(e===void 0)throw new Error("A value with the given key could not be found.");return e},En=(s,t)=>{const e=Array.from(s).filter(t);if(e.length>1)throw Error("More than one element was found.");if(e.length===0)throw Error("No element was found.");const[n]=e;return s.delete(n),n},Vr=(s,t,e,n)=>{const r=Wt(s,t),i=En(r,a=>a[0]===e&&a[1]===n);return r.size===0&&s.delete(t),i},Xe=s=>Wt(Ir,s),ke=s=>{if(Se.has(s))throw new Error("The AudioNode is already stored.");Se.add(s),Xe(s).forEach(t=>t(!0))},Pr=s=>"port"in s,Qe=s=>{if(!Se.has(s))throw new Error("The AudioNode is not stored.");Se.delete(s),Xe(s).forEach(t=>t(!1))},cs=(s,t)=>{!Pr(s)&&t.every(e=>e.size===0)&&Qe(s)},uo=(s,t,e,n,r,i,a,o,c,l,u,h,p)=>{const f=new WeakMap;return(d,m,_,y,b)=>{const{activeInputs:C,passiveInputs:S}=i(m),{outputs:g}=i(d),T=o(d),w=v=>{const x=c(m),R=c(d);if(v){const k=Vr(S,d,_,y);s(C,d,k,!1),!b&&!h(d)&&e(R,x,_,y),p(m)&&ke(m)}else{const k=n(C,d,_,y);t(S,y,k,!1),!b&&!h(d)&&r(R,x,_,y);const A=a(m);if(A===0)u(m)&&cs(m,C);else{const E=f.get(m);E!==void 0&&clearTimeout(E),f.set(m,setTimeout(()=>{u(m)&&cs(m,C)},A*1e3))}}};return l(g,[m,_,y],v=>v[0]===m&&v[1]===_&&v[2]===y,!0)?(T.add(w),u(d)?s(C,d,[_,y,w],!0):t(S,y,[d,_,w],!0),!0):!1}},ho=s=>(t,e,[n,r,i],a)=>{const o=t.get(n);o===void 0?t.set(n,new Set([[r,e,i]])):s(o,[r,e,i],c=>c[0]===r&&c[1]===e,a)},po=s=>(t,e)=>{const n=s(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});e.connect(n).connect(t.destination);const r=()=>{e.removeEventListener("ended",r),e.disconnect(n),n.disconnect()};e.addEventListener("ended",r)},fo=s=>(t,e)=>{s(t).add(e)},mo={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},_o=(s,t,e,n,r,i)=>class extends s{constructor(o,c){const l=r(o),u={...mo,...c},h=n(l,u),p=i(l)?t():null;super(o,!1,h,p),this._nativeAnalyserNode=h}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(o){this._nativeAnalyserNode.fftSize=o}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(o){const c=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=o,!(o>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=c,e()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(o){const c=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=o,!(this._nativeAnalyserNode.maxDecibels>o))throw this._nativeAnalyserNode.minDecibels=c,e()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(o){this._nativeAnalyserNode.smoothingTimeConstant=o}getByteFrequencyData(o){this._nativeAnalyserNode.getByteFrequencyData(o)}getByteTimeDomainData(o){this._nativeAnalyserNode.getByteTimeDomainData(o)}getFloatFrequencyData(o){this._nativeAnalyserNode.getFloatFrequencyData(o)}getFloatTimeDomainData(o){this._nativeAnalyserNode.getFloatTimeDomainData(o)}},gt=(s,t)=>s.context===t,go=(s,t,e)=>()=>{const n=new WeakMap,r=async(i,a)=>{let o=t(i);if(!gt(o,a)){const l={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,fftSize:o.fftSize,maxDecibels:o.maxDecibels,minDecibels:o.minDecibels,smoothingTimeConstant:o.smoothingTimeConstant};o=s(a,l)}return n.set(a,o),await e(i,a,o),o};return{render(i,a){const o=n.get(a);return o!==void 0?Promise.resolve(o):r(i,a)}}},Tn=s=>{try{s.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},Ut=()=>new DOMException("","IndexSizeError"),_s=s=>{s.getChannelData=(t=>e=>{try{return t.call(s,e)}catch(n){throw n.code===12?Ut():n}})(s.getChannelData)},yo={numberOfChannels:1},vo=(s,t,e,n,r,i,a,o)=>{let c=null;return class Fr{constructor(u){if(r===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:h,numberOfChannels:p,sampleRate:f}={...yo,...u};c===null&&(c=new r(1,1,44100));const d=n!==null&&t(i,i)?new n({length:h,numberOfChannels:p,sampleRate:f}):c.createBuffer(p,h,f);if(d.numberOfChannels===0)throw e();return typeof d.copyFromChannel!="function"?(a(d),_s(d)):t(Tn,()=>Tn(d))||o(d),s.add(d),d}static[Symbol.hasInstance](u){return u!==null&&typeof u=="object"&&Object.getPrototypeOf(u)===Fr.prototype||s.has(u)}}},bt=-34028234663852886e22,vt=-bt,$t=s=>Se.has(s),To={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},wo=(s,t,e,n,r,i,a,o)=>class extends s{constructor(l,u){const h=i(l),p={...To,...u},f=r(h,p),d=a(h),m=d?t():null;super(l,!1,f,m),this._audioBufferSourceNodeRenderer=m,this._isBufferNullified=!1,this._isBufferSet=p.buffer!==null,this._nativeAudioBufferSourceNode=f,this._onended=null,this._playbackRate=e(this,d,f.playbackRate,vt,bt)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(l){if(this._nativeAudioBufferSourceNode.buffer=l,l!==null){if(this._isBufferSet)throw n();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(l){this._nativeAudioBufferSourceNode.loop=l}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(l){this._nativeAudioBufferSourceNode.loopEnd=l}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(l){this._nativeAudioBufferSourceNode.loopStart=l}get onended(){return this._onended}set onended(l){const u=typeof l=="function"?o(this,l):null;this._nativeAudioBufferSourceNode.onended=u;const h=this._nativeAudioBufferSourceNode.onended;this._onended=h!==null&&h===u?l:h}get playbackRate(){return this._playbackRate}start(l=0,u=0,h){if(this._nativeAudioBufferSourceNode.start(l,u,h),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=h===void 0?[l,u]:[l,u,h]),this.context.state!=="closed"){ke(this);const p=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",p),$t(this)&&Qe(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",p)}}stop(l=0){this._nativeAudioBufferSourceNode.stop(l),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=l)}},bo=(s,t,e,n,r)=>()=>{const i=new WeakMap;let a=null,o=null;const c=async(l,u)=>{let h=e(l);const p=gt(h,u);if(!p){const f={buffer:h.buffer,channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,loop:h.loop,loopEnd:h.loopEnd,loopStart:h.loopStart,playbackRate:h.playbackRate.value};h=t(u,f),a!==null&&h.start(...a),o!==null&&h.stop(o)}return i.set(u,h),p?await s(u,l.playbackRate,h.playbackRate):await n(u,l.playbackRate,h.playbackRate),await r(l,u,h),h};return{set start(l){a=l},set stop(l){o=l},render(l,u){const h=i.get(u);return h!==void 0?Promise.resolve(h):c(l,u)}}},Co=s=>"playbackRate"in s,Ao=s=>"frequency"in s&&"gain"in s,So=s=>"offset"in s,ko=s=>!("frequency"in s)&&"gain"in s,Ro=s=>"detune"in s&&"frequency"in s&&!("gain"in s),xo=s=>"pan"in s,Tt=s=>Wt(Er,s),Je=s=>Wt(Mr,s),ls=(s,t)=>{const{activeInputs:e}=Tt(s);e.forEach(r=>r.forEach(([i])=>{t.includes(s)||ls(i,[...t,s])}));const n=Co(s)?[s.playbackRate]:Pr(s)?Array.from(s.parameters.values()):Ao(s)?[s.Q,s.detune,s.frequency,s.gain]:So(s)?[s.offset]:ko(s)?[s.gain]:Ro(s)?[s.detune,s.frequency]:xo(s)?[s.pan]:[];for(const r of n){const i=Je(r);i!==void 0&&i.activeInputs.forEach(([a])=>ls(a,t))}$t(s)&&Qe(s)},Wr=s=>{ls(s.destination,[])},No=s=>s===void 0||typeof s=="number"||typeof s=="string"&&(s==="balanced"||s==="interactive"||s==="playback"),Oo=(s,t,e,n,r,i,a,o,c)=>class extends s{constructor(u={}){if(c===null)throw new Error("Missing the native AudioContext constructor.");let h;try{h=new c(u)}catch(d){throw d.code===12&&d.message==="sampleRate is not in range"?e():d}if(h===null)throw n();if(!No(u.latencyHint))throw new TypeError(`The provided value '${u.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(u.sampleRate!==void 0&&h.sampleRate!==u.sampleRate)throw e();super(h,2);const{latencyHint:p}=u,{sampleRate:f}=h;if(this._baseLatency=typeof h.baseLatency=="number"?h.baseLatency:p==="balanced"?512/f:p==="interactive"||p===void 0?256/f:p==="playback"?1024/f:Math.max(2,Math.min(128,Math.round(p*f/128)))*128/f,this._nativeAudioContext=h,c.name==="webkitAudioContext"?(this._nativeGainNode=h.createGain(),this._nativeOscillatorNode=h.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(h.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,h.state==="running"){this._state="suspended";const d=()=>{this._state==="suspended"&&(this._state=null),h.removeEventListener("statechange",d)};h.addEventListener("statechange",d)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw t()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),Wr(this)}))}createMediaElementSource(u){return new r(this,{mediaElement:u})}createMediaStreamDestination(){return new i(this)}createMediaStreamSource(u){return new a(this,{mediaStream:u})}createMediaStreamTrackSource(u){return new o(this,{mediaStreamTrack:u})}resume(){return this._state==="suspended"?new Promise((u,h)=>{const p=()=>{this._nativeAudioContext.removeEventListener("statechange",p),this._nativeAudioContext.state==="running"?u():this.resume().then(u,h)};this._nativeAudioContext.addEventListener("statechange",p)}):this._nativeAudioContext.resume().catch(u=>{throw u===void 0||u.code===15?t():u})}suspend(){return this._nativeAudioContext.suspend().catch(u=>{throw u===void 0?t():u})}},Eo=(s,t,e,n,r,i,a,o)=>class extends s{constructor(l,u){const h=i(l),p=a(h),f=r(h,u,p),d=p?t(o):null;super(l,!1,f,d),this._isNodeOfNativeOfflineAudioContext=p,this._nativeAudioDestinationNode=f}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();if(l>this._nativeAudioDestinationNode.maxChannelCount)throw e();this._nativeAudioDestinationNode.channelCount=l}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();this._nativeAudioDestinationNode.channelCountMode=l}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},Mo=s=>{const t=new WeakMap,e=async(n,r)=>{const i=r.destination;return t.set(r,i),await s(n,r,i),i};return{render(n,r){const i=t.get(r);return i!==void 0?Promise.resolve(i):e(n,r)}}},Io=(s,t,e,n,r,i,a,o)=>(c,l)=>{const u=l.listener,h=()=>{const g=new Float32Array(1),T=t(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),w=a(l);let v=!1,x=[0,0,-1,0,1,0],R=[0,0,0];const k=()=>{if(v)return;v=!0;const V=n(l,256,9,0);V.onaudioprocess=({inputBuffer:M})=>{const I=[i(M,g,0),i(M,g,1),i(M,g,2),i(M,g,3),i(M,g,4),i(M,g,5)];I.some((P,q)=>P!==x[q])&&(u.setOrientation(...I),x=I);const j=[i(M,g,6),i(M,g,7),i(M,g,8)];j.some((P,q)=>P!==R[q])&&(u.setPosition(...j),R=j)},T.connect(V)},A=V=>M=>{M!==x[V]&&(x[V]=M,u.setOrientation(...x))},E=V=>M=>{M!==R[V]&&(R[V]=M,u.setPosition(...R))},O=(V,M,I)=>{const j=e(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:M});j.connect(T,0,V),j.start(),Object.defineProperty(j.offset,"defaultValue",{get(){return M}});const P=s({context:c},w,j.offset,vt,bt);return o(P,"value",q=>()=>q.call(P),q=>W=>{try{q.call(P,W)}catch(H){if(H.code!==9)throw H}k(),w&&I(W)}),P.cancelAndHoldAtTime=(q=>w?()=>{throw r()}:(...W)=>{const H=q.apply(P,W);return k(),H})(P.cancelAndHoldAtTime),P.cancelScheduledValues=(q=>w?()=>{throw r()}:(...W)=>{const H=q.apply(P,W);return k(),H})(P.cancelScheduledValues),P.exponentialRampToValueAtTime=(q=>w?()=>{throw r()}:(...W)=>{const H=q.apply(P,W);return k(),H})(P.exponentialRampToValueAtTime),P.linearRampToValueAtTime=(q=>w?()=>{throw r()}:(...W)=>{const H=q.apply(P,W);return k(),H})(P.linearRampToValueAtTime),P.setTargetAtTime=(q=>w?()=>{throw r()}:(...W)=>{const H=q.apply(P,W);return k(),H})(P.setTargetAtTime),P.setValueAtTime=(q=>w?()=>{throw r()}:(...W)=>{const H=q.apply(P,W);return k(),H})(P.setValueAtTime),P.setValueCurveAtTime=(q=>w?()=>{throw r()}:(...W)=>{const H=q.apply(P,W);return k(),H})(P.setValueCurveAtTime),P};return{forwardX:O(0,0,A(0)),forwardY:O(1,0,A(1)),forwardZ:O(2,-1,A(2)),positionX:O(6,0,E(0)),positionY:O(7,0,E(1)),positionZ:O(8,0,E(2)),upX:O(3,0,A(3)),upY:O(4,1,A(4)),upZ:O(5,0,A(5))}},{forwardX:p,forwardY:f,forwardZ:d,positionX:m,positionY:_,positionZ:y,upX:b,upY:C,upZ:S}=u.forwardX===void 0?h():u;return{get forwardX(){return p},get forwardY(){return f},get forwardZ(){return d},get positionX(){return m},get positionY(){return _},get positionZ(){return y},get upX(){return b},get upY(){return C},get upZ(){return S}}},wn=s=>"context"in s,Ke=s=>wn(s[0]),_e=(s,t,e,n)=>{for(const r of s)if(e(r)){if(n)return!1;throw Error("The set contains at least one similar element.")}return s.add(t),!0},hr=(s,t,[e,n],r)=>{_e(s,[t,e,n],i=>i[0]===t&&i[1]===e,r)},dr=(s,[t,e,n],r)=>{const i=s.get(t);i===void 0?s.set(t,new Set([[e,n]])):_e(i,[e,n],a=>a[0]===e,r)},Ie=s=>"inputs"in s,bn=(s,t,e,n)=>{if(Ie(t)){const r=t.inputs[n];return s.connect(r,e,0),[r,e,0]}return s.connect(t,e,n),[t,e,n]},qr=(s,t,e)=>{for(const n of s)if(n[0]===t&&n[1]===e)return s.delete(n),n;return null},Do=(s,t,e)=>En(s,n=>n[0]===t&&n[1]===e),Lr=(s,t)=>{if(!Xe(s).delete(t))throw new Error("Missing the expected event listener.")},Br=(s,t,e)=>{const n=Wt(s,t),r=En(n,i=>i[0]===e);return n.size===0&&s.delete(t),r},Cn=(s,t,e,n)=>{Ie(t)?s.disconnect(t.inputs[n],e,0):s.disconnect(t,e,n)},Q=s=>Wt(fs,s),Ye=s=>Wt(ms,s),fe=s=>is.has(s),_n=s=>!Se.has(s),pr=(s,t)=>new Promise(e=>{if(t!==null)e(!0);else{const n=s.createScriptProcessor(256,1,1),r=s.createGain(),i=s.createBuffer(1,2,44100),a=i.getChannelData(0);a[0]=1,a[1]=1;const o=s.createBufferSource();o.buffer=i,o.loop=!0,o.connect(n).connect(s.destination),o.connect(r),o.disconnect(r),n.onaudioprocess=c=>{const l=c.inputBuffer.getChannelData(0);Array.prototype.some.call(l,u=>u===1)?e(!0):e(!1),o.stop(),n.onaudioprocess=null,o.disconnect(n),n.disconnect(s.destination)},o.start()}}),Kn=(s,t)=>{const e=new Map;for(const n of s)for(const r of n){const i=e.get(r);e.set(r,i===void 0?1:i+1)}e.forEach((n,r)=>t(r,n))},An=s=>"context"in s,Vo=s=>{const t=new Map;s.connect=(e=>(n,r=0,i=0)=>{const a=An(n)?e(n,r,i):e(n,r),o=t.get(n);return o===void 0?t.set(n,[{input:i,output:r}]):o.every(c=>c.input!==i||c.output!==r)&&o.push({input:i,output:r}),a})(s.connect.bind(s)),s.disconnect=(e=>(n,r,i)=>{if(e.apply(s),n===void 0)t.clear();else if(typeof n=="number")for(const[a,o]of t){const c=o.filter(l=>l.output!==n);c.length===0?t.delete(a):t.set(a,c)}else if(t.has(n))if(r===void 0)t.delete(n);else{const a=t.get(n);if(a!==void 0){const o=a.filter(c=>c.output!==r&&(c.input!==i||i===void 0));o.length===0?t.delete(n):t.set(n,o)}}for(const[a,o]of t)o.forEach(c=>{An(a)?s.connect(a,c.output,c.input):s.connect(a,c.output)})})(s.disconnect)},Po=(s,t,e,n)=>{const{activeInputs:r,passiveInputs:i}=Je(t),{outputs:a}=Tt(s),o=Xe(s),c=l=>{const u=Q(s),h=Ye(t);if(l){const p=Br(i,s,e);hr(r,s,p,!1),!n&&!fe(s)&&u.connect(h,e)}else{const p=Do(r,s,e);dr(i,p,!1),!n&&!fe(s)&&u.disconnect(h,e)}};return _e(a,[t,e],l=>l[0]===t&&l[1]===e,!0)?(o.add(c),$t(s)?hr(r,s,[e,c],!0):dr(i,[s,e,c],!0),!0):!1},Fo=(s,t,e,n)=>{const{activeInputs:r,passiveInputs:i}=Tt(t),a=qr(r[n],s,e);return a===null?[Vr(i,s,e,n)[2],!1]:[a[2],!0]},Wo=(s,t,e)=>{const{activeInputs:n,passiveInputs:r}=Je(t),i=qr(n,s,e);return i===null?[Br(r,s,e)[1],!1]:[i[2],!0]},gs=(s,t,e,n,r)=>{const[i,a]=Fo(s,e,n,r);if(i!==null&&(Lr(s,i),a&&!t&&!fe(s)&&Cn(Q(s),Q(e),n,r)),$t(e)){const{activeInputs:o}=Tt(e);cs(e,o)}},ys=(s,t,e,n)=>{const[r,i]=Wo(s,e,n);r!==null&&(Lr(s,r),i&&!t&&!fe(s)&&Q(s).disconnect(Ye(e),n))},qo=(s,t)=>{const e=Tt(s),n=[];for(const r of e.outputs)Ke(r)?gs(s,t,...r):ys(s,t,...r),n.push(r[0]);return e.outputs.clear(),n},Lo=(s,t,e)=>{const n=Tt(s),r=[];for(const i of n.outputs)i[1]===e&&(Ke(i)?gs(s,t,...i):ys(s,t,...i),r.push(i[0]),n.outputs.delete(i));return r},Bo=(s,t,e,n,r)=>{const i=Tt(s);return Array.from(i.outputs).filter(a=>a[0]===e&&(n===void 0||a[1]===n)&&(r===void 0||a[2]===r)).map(a=>(Ke(a)?gs(s,t,...a):ys(s,t,...a),i.outputs.delete(a),a[0]))},jo=(s,t,e,n,r,i,a,o,c,l,u,h,p,f,d,m)=>class extends l{constructor(y,b,C,S){super(C),this._context=y,this._nativeAudioNode=C;const g=u(y);h(g)&&e(pr,()=>pr(g,m))!==!0&&Vo(C),fs.set(this,C),Ir.set(this,new Set),y.state!=="closed"&&b&&ke(this),s(this,S,C)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(y){this._nativeAudioNode.channelCount=y}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(y){this._nativeAudioNode.channelCountMode=y}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(y){this._nativeAudioNode.channelInterpretation=y}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(y,b=0,C=0){if(b<0||b>=this._nativeAudioNode.numberOfOutputs)throw r();const S=u(this._context),g=d(S);if(p(y)||f(y))throw i();if(wn(y)){const v=Q(y);try{const R=bn(this._nativeAudioNode,v,b,C),k=_n(this);(g||k)&&this._nativeAudioNode.disconnect(...R),this.context.state!=="closed"&&!k&&_n(y)&&ke(y)}catch(R){throw R.code===12?i():R}if(t(this,y,b,C,g)){const R=c([this],y);Kn(R,n(g))}return y}const T=Ye(y);if(T.name==="playbackRate"&&T.maxValue===1024)throw a();try{this._nativeAudioNode.connect(T,b),(g||_n(this))&&this._nativeAudioNode.disconnect(T,b)}catch(v){throw v.code===12?i():v}if(Po(this,y,b,g)){const v=c([this],y);Kn(v,n(g))}}disconnect(y,b,C){let S;const g=u(this._context),T=d(g);if(y===void 0)S=qo(this,T);else if(typeof y=="number"){if(y<0||y>=this.numberOfOutputs)throw r();S=Lo(this,T,y)}else{if(b!==void 0&&(b<0||b>=this.numberOfOutputs)||wn(y)&&C!==void 0&&(C<0||C>=y.numberOfInputs))throw r();if(S=Bo(this,T,y,b,C),S.length===0)throw i()}for(const w of S){const v=c([this],w);Kn(v,o)}}},Uo=(s,t,e,n,r,i,a,o,c,l,u,h,p)=>(f,d,m,_=null,y=null)=>{const b=m.value,C=new Ji(b),S=d?n(C):null,g={get defaultValue(){return b},get maxValue(){return _===null?m.maxValue:_},get minValue(){return y===null?m.minValue:y},get value(){return m.value},set value(T){m.value=T,g.setValueAtTime(T,f.context.currentTime)},cancelAndHoldAtTime(T){if(typeof m.cancelAndHoldAtTime=="function")S===null&&C.flush(f.context.currentTime),C.add(r(T)),m.cancelAndHoldAtTime(T);else{const w=Array.from(C).pop();S===null&&C.flush(f.context.currentTime),C.add(r(T));const v=Array.from(C).pop();m.cancelScheduledValues(T),w!==v&&v!==void 0&&(v.type==="exponentialRampToValue"?m.exponentialRampToValueAtTime(v.value,v.endTime):v.type==="linearRampToValue"?m.linearRampToValueAtTime(v.value,v.endTime):v.type==="setValue"?m.setValueAtTime(v.value,v.startTime):v.type==="setValueCurve"&&m.setValueCurveAtTime(v.values,v.startTime,v.duration))}return g},cancelScheduledValues(T){return S===null&&C.flush(f.context.currentTime),C.add(i(T)),m.cancelScheduledValues(T),g},exponentialRampToValueAtTime(T,w){if(T===0)throw new RangeError;if(!Number.isFinite(w)||w<0)throw new RangeError;const v=f.context.currentTime;return S===null&&C.flush(v),Array.from(C).length===0&&(C.add(l(b,v)),m.setValueAtTime(b,v)),C.add(a(T,w)),m.exponentialRampToValueAtTime(T,w),g},linearRampToValueAtTime(T,w){const v=f.context.currentTime;return S===null&&C.flush(v),Array.from(C).length===0&&(C.add(l(b,v)),m.setValueAtTime(b,v)),C.add(o(T,w)),m.linearRampToValueAtTime(T,w),g},setTargetAtTime(T,w,v){return S===null&&C.flush(f.context.currentTime),C.add(c(T,w,v)),m.setTargetAtTime(T,w,v),g},setValueAtTime(T,w){return S===null&&C.flush(f.context.currentTime),C.add(l(T,w)),m.setValueAtTime(T,w),g},setValueCurveAtTime(T,w,v){const x=T instanceof Float32Array?T:new Float32Array(T);if(h!==null&&h.name==="webkitAudioContext"){const R=w+v,k=f.context.sampleRate,A=Math.ceil(w*k),E=Math.floor(R*k),O=E-A,V=new Float32Array(O);for(let I=0;I<O;I+=1){const j=(x.length-1)/v*((A+I)/k-w),P=Math.floor(j),q=Math.ceil(j);V[I]=P===q?x[P]:(1-(j-P))*x[P]+(1-(q-j))*x[q]}S===null&&C.flush(f.context.currentTime),C.add(u(V,w,v)),m.setValueCurveAtTime(V,w,v);const M=E/k;M<R&&p(g,V[V.length-1],M),p(g,x[x.length-1],R)}else S===null&&C.flush(f.context.currentTime),C.add(u(x,w,v)),m.setValueCurveAtTime(x,w,v);return g}};return e.set(g,m),t.set(g,f),s(g,S),g},zo=s=>({replay(t){for(const e of s)if(e.type==="exponentialRampToValue"){const{endTime:n,value:r}=e;t.exponentialRampToValueAtTime(r,n)}else if(e.type==="linearRampToValue"){const{endTime:n,value:r}=e;t.linearRampToValueAtTime(r,n)}else if(e.type==="setTarget"){const{startTime:n,target:r,timeConstant:i}=e;t.setTargetAtTime(r,n,i)}else if(e.type==="setValue"){const{startTime:n,value:r}=e;t.setValueAtTime(r,n)}else if(e.type==="setValueCurve"){const{duration:n,startTime:r,values:i}=e;t.setValueCurveAtTime(i,r,n)}else throw new Error("Can't apply an unknown automation.")}});class jr{constructor(t){this._map=new Map(t)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(t,e=null){return this._map.forEach((n,r)=>t.call(e,n,r,this))}get(t){return this._map.get(t)}has(t){return this._map.has(t)}keys(){return this._map.keys()}values(){return this._map.values()}}const Go={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},Yo=(s,t,e,n,r,i,a,o,c,l,u,h,p,f)=>class extends t{constructor(m,_,y){var b;const C=o(m),S=c(C),g=u({...Go,...y});p(g);const T=os.get(C),w=T==null?void 0:T.get(_),v=S||C.state!=="closed"?C:(b=a(C))!==null&&b!==void 0?b:C,x=r(v,S?null:m.baseLatency,l,_,w,g),R=S?n(_,g,w):null;super(m,!0,x,R);const k=[];x.parameters.forEach((E,O)=>{const V=e(this,S,E);k.push([O,V])}),this._nativeAudioWorkletNode=x,this._onprocessorerror=null,this._parameters=new jr(k),S&&s(C,this);const{activeInputs:A}=i(this);h(x,A)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(m){const _=typeof m=="function"?f(this,m):null;this._nativeAudioWorkletNode.onprocessorerror=_;const y=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=y!==null&&y===_?m:y}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function Sn(s,t,e,n,r){if(typeof s.copyFromChannel=="function")t[e].byteLength===0&&(t[e]=new Float32Array(128)),s.copyFromChannel(t[e],n,r);else{const i=s.getChannelData(n);if(t[e].byteLength===0)t[e]=i.slice(r,r+128);else{const a=new Float32Array(i.buffer,r*Float32Array.BYTES_PER_ELEMENT,128);t[e].set(a)}}}const Ur=(s,t,e,n,r)=>{typeof s.copyToChannel=="function"?t[e].byteLength!==0&&s.copyToChannel(t[e],n,r):t[e].byteLength!==0&&s.getChannelData(n).set(t[e],r)},kn=(s,t)=>{const e=[];for(let n=0;n<s;n+=1){const r=[],i=typeof t=="number"?t:t[n];for(let a=0;a<i;a+=1)r.push(new Float32Array(128));e.push(r)}return e},$o=(s,t)=>{const e=Wt(as,s),n=Q(t);return Wt(e,n)},Ho=async(s,t,e,n,r,i,a)=>{const o=t===null?Math.ceil(s.context.length/128)*128:t.length,c=n.channelCount*n.numberOfInputs,l=r.reduce((_,y)=>_+y,0),u=l===0?null:e.createBuffer(l,o,e.sampleRate);if(i===void 0)throw new Error("Missing the processor constructor.");const h=Tt(s),p=await $o(e,s),f=kn(n.numberOfInputs,n.channelCount),d=kn(n.numberOfOutputs,r),m=Array.from(s.parameters.keys()).reduce((_,y)=>({..._,[y]:new Float32Array(128)}),{});for(let _=0;_<o;_+=128){if(n.numberOfInputs>0&&t!==null)for(let y=0;y<n.numberOfInputs;y+=1)for(let b=0;b<n.channelCount;b+=1)Sn(t,f[y],b,b,_);i.parameterDescriptors!==void 0&&t!==null&&i.parameterDescriptors.forEach(({name:y},b)=>{Sn(t,m,y,c+b,_)});for(let y=0;y<n.numberOfInputs;y+=1)for(let b=0;b<r[y];b+=1)d[y][b].byteLength===0&&(d[y][b]=new Float32Array(128));try{const y=f.map((C,S)=>h.activeInputs[S].size===0?[]:C),b=a(_/e.sampleRate,e.sampleRate,()=>p.process(y,d,m));if(u!==null)for(let C=0,S=0;C<n.numberOfOutputs;C+=1){for(let g=0;g<r[C];g+=1)Ur(u,d[C],g,S+g,_);S+=r[C]}if(!b)break}catch(y){s.dispatchEvent(new ErrorEvent("processorerror",{colno:y.colno,filename:y.filename,lineno:y.lineno,message:y.message}));break}}return u},Zo=(s,t,e,n,r,i,a,o,c,l,u,h,p,f,d,m)=>(_,y,b)=>{const C=new WeakMap;let S=null;const g=async(T,w)=>{let v=u(T),x=null;const R=gt(v,w),k=Array.isArray(y.outputChannelCount)?y.outputChannelCount:Array.from(y.outputChannelCount);if(h===null){const A=k.reduce((M,I)=>M+I,0),E=r(w,{channelCount:Math.max(1,A),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,A)}),O=[];for(let M=0;M<T.numberOfOutputs;M+=1)O.push(n(w,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:k[M]}));const V=a(w,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1});V.connect=t.bind(null,O),V.disconnect=c.bind(null,O),x=[E,O,V]}else R||(v=new h(w,_));if(C.set(w,x===null?v:x[2]),x!==null){if(S===null){if(b===void 0)throw new Error("Missing the processor constructor.");if(p===null)throw new Error("Missing the native OfflineAudioContext constructor.");const I=T.channelCount*T.numberOfInputs,j=b.parameterDescriptors===void 0?0:b.parameterDescriptors.length,P=I+j;S=Ho(T,P===0?null:await(async()=>{const W=new p(P,Math.ceil(T.context.length/128)*128,w.sampleRate),H=[],At=[];for(let J=0;J<y.numberOfInputs;J+=1)H.push(a(W,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1})),At.push(r(W,{channelCount:y.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:y.channelCount}));const St=await Promise.all(Array.from(T.parameters.values()).map(async J=>{const yt=i(W,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:J.value});return await f(W,J,yt.offset),yt})),z=n(W,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,I+j)});for(let J=0;J<y.numberOfInputs;J+=1){H[J].connect(At[J]);for(let yt=0;yt<y.channelCount;yt+=1)At[J].connect(z,yt,J*y.channelCount+yt)}for(const[J,yt]of St.entries())yt.connect(z,0,I+J),yt.start(0);return z.connect(W.destination),await Promise.all(H.map(J=>d(T,W,J))),m(W)})(),w,y,k,b,l)}const A=await S,E=e(w,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[O,V,M]=x;A!==null&&(E.buffer=A,E.start(0)),E.connect(O);for(let I=0,j=0;I<T.numberOfOutputs;I+=1){const P=V[I];for(let q=0;q<k[I];q+=1)O.connect(P,j+q,q);j+=k[I]}return M}if(R)for(const[A,E]of T.parameters.entries())await s(w,E,v.parameters.get(A));else for(const[A,E]of T.parameters.entries())await f(w,E,v.parameters.get(A));return await d(T,w,v),v};return{render(T,w){o(w,T);const v=C.get(w);return v!==void 0?Promise.resolve(v):g(T,w)}}},Xo=(s,t,e,n,r,i,a,o,c,l,u,h,p,f,d,m,_,y,b,C)=>class extends d{constructor(g,T){super(g,T),this._nativeContext=g,this._audioWorklet=s===void 0?void 0:{addModule:(w,v)=>s(this,w,v)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new t(this)}createBiquadFilter(){return new r(this)}createBuffer(g,T,w){return new e({length:T,numberOfChannels:g,sampleRate:w})}createBufferSource(){return new n(this)}createChannelMerger(g=6){return new i(this,{numberOfInputs:g})}createChannelSplitter(g=6){return new a(this,{numberOfOutputs:g})}createConstantSource(){return new o(this)}createConvolver(){return new c(this)}createDelay(g=1){return new u(this,{maxDelayTime:g})}createDynamicsCompressor(){return new h(this)}createGain(){return new p(this)}createIIRFilter(g,T){return new f(this,{feedback:T,feedforward:g})}createOscillator(){return new m(this)}createPanner(){return new _(this)}createPeriodicWave(g,T,w={disableNormalization:!1}){return new y(this,{...w,imag:T,real:g})}createStereoPanner(){return new b(this)}createWaveShaper(){return new C(this)}decodeAudioData(g,T,w){return l(this._nativeContext,g).then(v=>(typeof T=="function"&&T(v),v),v=>{throw typeof w=="function"&&w(v),v})}},Qo={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},Jo=(s,t,e,n,r,i,a,o)=>class extends s{constructor(l,u){const h=i(l),p={...Qo,...u},f=r(h,p),d=a(h),m=d?e():null;super(l,!1,f,m),this._Q=t(this,d,f.Q,vt,bt),this._detune=t(this,d,f.detune,1200*Math.log2(vt),-1200*Math.log2(vt)),this._frequency=t(this,d,f.frequency,l.sampleRate/2,0),this._gain=t(this,d,f.gain,40*Math.log10(vt),bt),this._nativeBiquadFilterNode=f,o(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(l){this._nativeBiquadFilterNode.type=l}getFrequencyResponse(l,u,h){try{this._nativeBiquadFilterNode.getFrequencyResponse(l,u,h)}catch(p){throw p.code===11?n():p}if(l.length!==u.length||u.length!==h.length)throw n()}},Ko=(s,t,e,n,r)=>()=>{const i=new WeakMap,a=async(o,c)=>{let l=e(o);const u=gt(l,c);if(!u){const h={Q:l.Q.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,detune:l.detune.value,frequency:l.frequency.value,gain:l.gain.value,type:l.type};l=t(c,h)}return i.set(c,l),u?(await s(c,o.Q,l.Q),await s(c,o.detune,l.detune),await s(c,o.frequency,l.frequency),await s(c,o.gain,l.gain)):(await n(c,o.Q,l.Q),await n(c,o.detune,l.detune),await n(c,o.frequency,l.frequency),await n(c,o.gain,l.gain)),await r(o,c,l),l};return{render(o,c){const l=i.get(c);return l!==void 0?Promise.resolve(l):a(o,c)}}},ta=(s,t)=>(e,n)=>{const r=t.get(e);if(r!==void 0)return r;const i=s.get(e);if(i!==void 0)return i;try{const a=n();return a instanceof Promise?(s.set(e,a),a.catch(()=>!1).then(o=>(s.delete(e),t.set(e,o),o))):(t.set(e,a),a)}catch{return t.set(e,!1),!1}},ea={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},na=(s,t,e,n,r)=>class extends s{constructor(a,o){const c=n(a),l={...ea,...o},u=e(c,l),h=r(c)?t():null;super(a,!1,u,h)}},sa=(s,t,e)=>()=>{const n=new WeakMap,r=async(i,a)=>{let o=t(i);if(!gt(o,a)){const l={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,numberOfInputs:o.numberOfInputs};o=s(a,l)}return n.set(a,o),await e(i,a,o),o};return{render(i,a){const o=n.get(a);return o!==void 0?Promise.resolve(o):r(i,a)}}},ra={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},ia=(s,t,e,n,r,i)=>class extends s{constructor(o,c){const l=n(o),u=i({...ra,...c}),h=e(l,u),p=r(l)?t():null;super(o,!1,h,p)}},oa=(s,t,e)=>()=>{const n=new WeakMap,r=async(i,a)=>{let o=t(i);if(!gt(o,a)){const l={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,numberOfOutputs:o.numberOfOutputs};o=s(a,l)}return n.set(a,o),await e(i,a,o),o};return{render(i,a){const o=n.get(a);return o!==void 0?Promise.resolve(o):r(i,a)}}},aa=s=>(t,e,n)=>s(e,t,n),ca=s=>(t,e,n=0,r=0)=>{const i=t[n];if(i===void 0)throw s();return An(e)?i.connect(e,0,r):i.connect(e,0)},la=s=>(t,e)=>{const n=s(t,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),r=t.createBuffer(1,2,44100);return n.buffer=r,n.loop=!0,n.connect(e),n.start(),()=>{n.stop(),n.disconnect(e)}},ua={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},ha=(s,t,e,n,r,i,a)=>class extends s{constructor(c,l){const u=r(c),h={...ua,...l},p=n(u,h),f=i(u),d=f?e():null;super(c,!1,p,d),this._constantSourceNodeRenderer=d,this._nativeConstantSourceNode=p,this._offset=t(this,f,p.offset,vt,bt),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?a(this,c):null;this._nativeConstantSourceNode.onended=l;const u=this._nativeConstantSourceNode.onended;this._onended=u!==null&&u===l?c:u}start(c=0){if(this._nativeConstantSourceNode.start(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=c),this.context.state!=="closed"){ke(this);const l=()=>{this._nativeConstantSourceNode.removeEventListener("ended",l),$t(this)&&Qe(this)};this._nativeConstantSourceNode.addEventListener("ended",l)}}stop(c=0){this._nativeConstantSourceNode.stop(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=c)}},da=(s,t,e,n,r)=>()=>{const i=new WeakMap;let a=null,o=null;const c=async(l,u)=>{let h=e(l);const p=gt(h,u);if(!p){const f={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,offset:h.offset.value};h=t(u,f),a!==null&&h.start(a),o!==null&&h.stop(o)}return i.set(u,h),p?await s(u,l.offset,h.offset):await n(u,l.offset,h.offset),await r(l,u,h),h};return{set start(l){a=l},set stop(l){o=l},render(l,u){const h=i.get(u);return h!==void 0?Promise.resolve(h):c(l,u)}}},pa=s=>t=>(s[0]=t,s[0]),fa={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},ma=(s,t,e,n,r,i)=>class extends s{constructor(o,c){const l=n(o),u={...fa,...c},h=e(l,u),f=r(l)?t():null;super(o,!1,h,f),this._isBufferNullified=!1,this._nativeConvolverNode=h,u.buffer!==null&&i(this,u.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(o){if(this._nativeConvolverNode.buffer=o,o===null&&this._nativeConvolverNode.buffer!==null){const c=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=c.createBuffer(1,1,c.sampleRate),this._isBufferNullified=!0,i(this,0)}else this._isBufferNullified=!1,i(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(o){this._nativeConvolverNode.normalize=o}},_a=(s,t,e)=>()=>{const n=new WeakMap,r=async(i,a)=>{let o=t(i);if(!gt(o,a)){const l={buffer:o.buffer,channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,disableNormalization:!o.normalize};o=s(a,l)}return n.set(a,o),Ie(o)?await e(i,a,o.inputs[0]):await e(i,a,o),o};return{render(i,a){const o=n.get(a);return o!==void 0?Promise.resolve(o):r(i,a)}}},ga=(s,t)=>(e,n,r)=>{if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new t(e,n,r)}catch(i){throw i.name==="SyntaxError"?s():i}},ya=()=>new DOMException("","DataCloneError"),fr=s=>{const{port1:t,port2:e}=new MessageChannel;return new Promise(n=>{const r=()=>{e.onmessage=null,t.close(),e.close(),n()};e.onmessage=()=>r();try{t.postMessage(s,[s])}catch{}finally{r()}})},va=(s,t,e,n,r,i,a,o,c,l,u)=>(h,p)=>{const f=a(h)?h:i(h);if(r.has(p)){const d=e();return Promise.reject(d)}try{r.add(p)}catch{}return t(c,()=>c(f))?f.decodeAudioData(p).then(d=>(fr(p).catch(()=>{}),t(o,()=>o(d))||u(d),s.add(d),d)):new Promise((d,m)=>{const _=async()=>{try{await fr(p)}catch{}},y=b=>{m(b),_()};try{f.decodeAudioData(p,b=>{typeof b.copyFromChannel!="function"&&(l(b),_s(b)),s.add(b),_().then(()=>d(b))},b=>{y(b===null?n():b)})}catch(b){y(b)}})},Ta=(s,t,e,n,r,i,a,o)=>(c,l)=>{const u=t.get(c);if(u===void 0)throw new Error("Missing the expected cycle count.");const h=i(c.context),p=o(h);if(u===l){if(t.delete(c),!p&&a(c)){const f=n(c),{outputs:d}=e(c);for(const m of d)if(Ke(m)){const _=n(m[0]);s(f,_,m[1],m[2])}else{const _=r(m[0]);f.connect(_,m[1])}}}else t.set(c,u-l)},wa={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},ba=(s,t,e,n,r,i,a)=>class extends s{constructor(c,l){const u=r(c),h={...wa,...l},p=n(u,h),f=i(u),d=f?e(h.maxDelayTime):null;super(c,!1,p,d),this._delayTime=t(this,f,p.delayTime),a(this,h.maxDelayTime)}get delayTime(){return this._delayTime}},Ca=(s,t,e,n,r)=>i=>{const a=new WeakMap,o=async(c,l)=>{let u=e(c);const h=gt(u,l);if(!h){const p={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,delayTime:u.delayTime.value,maxDelayTime:i};u=t(l,p)}return a.set(l,u),h?await s(l,c.delayTime,u.delayTime):await n(l,c.delayTime,u.delayTime),await r(c,l,u),u};return{render(c,l){const u=a.get(l);return u!==void 0?Promise.resolve(u):o(c,l)}}},Aa=s=>(t,e,n,r)=>s(t[r],i=>i[0]===e&&i[1]===n),Sa=s=>(t,e)=>{s(t).delete(e)},ka=s=>"delayTime"in s,Ra=(s,t,e)=>function n(r,i){const a=wn(i)?i:e(s,i);if(ka(a))return[];if(r[0]===a)return[r];if(r.includes(a))return[];const{outputs:o}=t(a);return Array.from(o).map(c=>n([...r,a],c[0])).reduce((c,l)=>c.concat(l),[])},hn=(s,t,e)=>{const n=t[e];if(n===void 0)throw s();return n},xa=s=>(t,e=void 0,n=void 0,r=0)=>e===void 0?t.forEach(i=>i.disconnect()):typeof e=="number"?hn(s,t,e).disconnect():An(e)?n===void 0?t.forEach(i=>i.disconnect(e)):r===void 0?hn(s,t,n).disconnect(e,0):hn(s,t,n).disconnect(e,0,r):n===void 0?t.forEach(i=>i.disconnect(e)):hn(s,t,n).disconnect(e,0),Na={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},Oa=(s,t,e,n,r,i,a,o)=>class extends s{constructor(l,u){const h=i(l),p={...Na,...u},f=n(h,p),d=a(h),m=d?e():null;super(l,!1,f,m),this._attack=t(this,d,f.attack),this._knee=t(this,d,f.knee),this._nativeDynamicsCompressorNode=f,this._ratio=t(this,d,f.ratio),this._release=t(this,d,f.release),this._threshold=t(this,d,f.threshold),o(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(l){const u=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=l,l>2)throw this._nativeDynamicsCompressorNode.channelCount=u,r()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(l){const u=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=l,l==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=u,r()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},Ea=(s,t,e,n,r)=>()=>{const i=new WeakMap,a=async(o,c)=>{let l=e(o);const u=gt(l,c);if(!u){const h={attack:l.attack.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,knee:l.knee.value,ratio:l.ratio.value,release:l.release.value,threshold:l.threshold.value};l=t(c,h)}return i.set(c,l),u?(await s(c,o.attack,l.attack),await s(c,o.knee,l.knee),await s(c,o.ratio,l.ratio),await s(c,o.release,l.release),await s(c,o.threshold,l.threshold)):(await n(c,o.attack,l.attack),await n(c,o.knee,l.knee),await n(c,o.ratio,l.ratio),await n(c,o.release,l.release),await n(c,o.threshold,l.threshold)),await r(o,c,l),l};return{render(o,c){const l=i.get(c);return l!==void 0?Promise.resolve(l):a(o,c)}}},Ma=()=>new DOMException("","EncodingError"),Ia=s=>t=>new Promise((e,n)=>{if(s===null){n(new SyntaxError);return}const r=s.document.head;if(r===null)n(new SyntaxError);else{const i=s.document.createElement("script"),a=new Blob([t],{type:"application/javascript"}),o=URL.createObjectURL(a),c=s.onerror,l=()=>{s.onerror=c,URL.revokeObjectURL(o)};s.onerror=(u,h,p,f,d)=>{if(h===o||h===s.location.href&&p===1&&f===1)return l(),n(d),!1;if(c!==null)return c(u,h,p,f,d)},i.onerror=()=>{l(),n(new SyntaxError)},i.onload=()=>{l(),e()},i.src=o,i.type="module",r.appendChild(i)}}),Da=s=>class{constructor(e){this._nativeEventTarget=e,this._listeners=new WeakMap}addEventListener(e,n,r){if(n!==null){let i=this._listeners.get(n);i===void 0&&(i=s(this,n),typeof n=="function"&&this._listeners.set(n,i)),this._nativeEventTarget.addEventListener(e,i,r)}}dispatchEvent(e){return this._nativeEventTarget.dispatchEvent(e)}removeEventListener(e,n,r){const i=n===null?void 0:this._listeners.get(n);this._nativeEventTarget.removeEventListener(e,i===void 0?null:i,r)}},Va=s=>(t,e,n)=>{Object.defineProperties(s,{currentFrame:{configurable:!0,get(){return Math.round(t*e)}},currentTime:{configurable:!0,get(){return t}}});try{return n()}finally{s!==null&&(delete s.currentFrame,delete s.currentTime)}},Pa=s=>async t=>{try{const e=await fetch(t);if(e.ok)return[await e.text(),e.url]}catch{}throw s()},Fa={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},Wa=(s,t,e,n,r,i)=>class extends s{constructor(o,c){const l=r(o),u={...Fa,...c},h=n(l,u),p=i(l),f=p?e():null;super(o,!1,h,f),this._gain=t(this,p,h.gain,vt,bt)}get gain(){return this._gain}},qa=(s,t,e,n,r)=>()=>{const i=new WeakMap,a=async(o,c)=>{let l=e(o);const u=gt(l,c);if(!u){const h={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,gain:l.gain.value};l=t(c,h)}return i.set(c,l),u?await s(c,o.gain,l.gain):await n(c,o.gain,l.gain),await r(o,c,l),l};return{render(o,c){const l=i.get(c);return l!==void 0?Promise.resolve(l):a(o,c)}}},La=(s,t)=>e=>t(s,e),Ba=s=>t=>{const e=s(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return e.renderer},ja=s=>t=>{var e;return(e=s.get(t))!==null&&e!==void 0?e:0},Ua=s=>t=>{const e=s(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return e.renderer},za=s=>t=>s.get(t),dt=()=>new DOMException("","InvalidStateError"),Ga=s=>t=>{const e=s.get(t);if(e===void 0)throw dt();return e},Ya=(s,t)=>e=>{let n=s.get(e);if(n!==void 0)return n;if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");return n=new t(1,1,44100),s.set(e,n),n},$a=s=>t=>{const e=s.get(t);if(e===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return e},Mn=()=>new DOMException("","InvalidAccessError"),Ha=s=>{s.getFrequencyResponse=(t=>(e,n,r)=>{if(e.length!==n.length||n.length!==r.length)throw Mn();return t.call(s,e,n,r)})(s.getFrequencyResponse)},Za={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},Xa=(s,t,e,n,r,i)=>class extends s{constructor(o,c){const l=n(o),u=r(l),h={...Za,...c},p=t(l,u?null:o.baseLatency,h),f=u?e(h.feedback,h.feedforward):null;super(o,!1,p,f),Ha(p),this._nativeIIRFilterNode=p,i(this,1)}getFrequencyResponse(o,c,l){return this._nativeIIRFilterNode.getFrequencyResponse(o,c,l)}},zr=(s,t,e,n,r,i,a,o,c,l,u)=>{const h=l.length;let p=o;for(let f=0;f<h;f+=1){let d=e[0]*l[f];for(let m=1;m<r;m+=1){const _=p-m&c-1;d+=e[m]*i[_],d-=s[m]*a[_]}for(let m=r;m<n;m+=1)d+=e[m]*i[p-m&c-1];for(let m=r;m<t;m+=1)d-=s[m]*a[p-m&c-1];i[p]=l[f],a[p]=d,p=p+1&c-1,u[f]=d}return p},Qa=(s,t,e,n)=>{const r=e instanceof Float64Array?e:new Float64Array(e),i=n instanceof Float64Array?n:new Float64Array(n),a=r.length,o=i.length,c=Math.min(a,o);if(r[0]!==1){for(let d=0;d<a;d+=1)i[d]/=r[0];for(let d=1;d<o;d+=1)r[d]/=r[0]}const l=32,u=new Float32Array(l),h=new Float32Array(l),p=t.createBuffer(s.numberOfChannels,s.length,s.sampleRate),f=s.numberOfChannels;for(let d=0;d<f;d+=1){const m=s.getChannelData(d),_=p.getChannelData(d);u.fill(0),h.fill(0),zr(r,a,i,o,c,u,h,0,l,m,_)}return p},Ja=(s,t,e,n,r)=>(i,a)=>{const o=new WeakMap;let c=null;const l=async(u,h)=>{let p=null,f=t(u);const d=gt(f,h);if(h.createIIRFilter===void 0?p=s(h,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):d||(f=h.createIIRFilter(a,i)),o.set(h,p===null?f:p),p!==null){if(c===null){if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");const _=new e(u.context.destination.channelCount,u.context.length,h.sampleRate);c=(async()=>{await n(u,_,_.destination);const y=await r(_);return Qa(y,h,i,a)})()}const m=await c;return p.buffer=m,p.start(0),p}return await n(u,h,f),f};return{render(u,h){const p=o.get(h);return p!==void 0?Promise.resolve(p):l(u,h)}}},Ka=(s,t,e,n,r,i)=>a=>(o,c)=>{const l=s.get(o);if(l===void 0){if(!a&&i(o)){const u=n(o),{outputs:h}=e(o);for(const p of h)if(Ke(p)){const f=n(p[0]);t(u,f,p[1],p[2])}else{const f=r(p[0]);u.disconnect(f,p[1])}}s.set(o,c)}else s.set(o,l+c)},tc=(s,t)=>e=>{const n=s.get(e);return t(n)||t(e)},ec=(s,t)=>e=>s.has(e)||t(e),nc=(s,t)=>e=>s.has(e)||t(e),sc=(s,t)=>e=>{const n=s.get(e);return t(n)||t(e)},rc=s=>t=>s!==null&&t instanceof s,ic=s=>t=>s!==null&&typeof s.AudioNode=="function"&&t instanceof s.AudioNode,oc=s=>t=>s!==null&&typeof s.AudioParam=="function"&&t instanceof s.AudioParam,ac=(s,t)=>e=>s(e)||t(e),cc=s=>t=>s!==null&&t instanceof s,lc=s=>s!==null&&s.isSecureContext,uc=(s,t,e,n)=>class extends s{constructor(i,a){const o=e(i),c=t(o,a);if(n(o))throw TypeError();super(i,!0,c,null),this._nativeMediaElementAudioSourceNode=c}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},hc={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},dc=(s,t,e,n)=>class extends s{constructor(i,a){const o=e(i);if(n(o))throw new TypeError;const c={...hc,...a},l=t(o,c);super(i,!1,l,null),this._nativeMediaStreamAudioDestinationNode=l}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},pc=(s,t,e,n)=>class extends s{constructor(i,a){const o=e(i),c=t(o,a);if(n(o))throw new TypeError;super(i,!0,c,null),this._nativeMediaStreamAudioSourceNode=c}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},fc=(s,t,e)=>class extends s{constructor(r,i){const a=e(r),o=t(a,i);super(r,!0,o,null)}},mc=(s,t,e,n,r,i)=>class extends e{constructor(o,c){super(o),this._nativeContext=o,On.set(this,o),n(o)&&r.set(o,new Set),this._destination=new s(this,c),this._listener=t(this,o),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(o){const c=typeof o=="function"?i(this,o):null;this._nativeContext.onstatechange=c;const l=this._nativeContext.onstatechange;this._onstatechange=l!==null&&l===c?o:l}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},$e=s=>{const t=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const e=s.decodeAudioData(t.buffer,()=>{});return e===void 0?!1:(e.catch(()=>{}),!0)}catch{}return!1},_c=(s,t)=>(e,n,r)=>{const i=new Set;return e.connect=(a=>(o,c=0,l=0)=>{const u=i.size===0;if(t(o))return a.call(e,o,c,l),s(i,[o,c,l],h=>h[0]===o&&h[1]===c&&h[2]===l,!0),u&&n(),o;a.call(e,o,c),s(i,[o,c],h=>h[0]===o&&h[1]===c,!0),u&&n()})(e.connect),e.disconnect=(a=>(o,c,l)=>{const u=i.size>0;if(o===void 0)a.apply(e),i.clear();else if(typeof o=="number"){a.call(e,o);for(const p of i)p[1]===o&&i.delete(p)}else{t(o)?a.call(e,o,c,l):a.call(e,o,c);for(const p of i)p[0]===o&&(c===void 0||p[1]===c)&&(l===void 0||p[2]===l)&&i.delete(p)}const h=i.size===0;u&&h&&r()})(e.disconnect),e},tt=(s,t,e)=>{const n=t[e];n!==void 0&&n!==s[e]&&(s[e]=n)},ht=(s,t)=>{tt(s,t,"channelCount"),tt(s,t,"channelCountMode"),tt(s,t,"channelInterpretation")},mr=s=>typeof s.getFloatTimeDomainData=="function",gc=s=>{s.getFloatTimeDomainData=t=>{const e=new Uint8Array(t.length);s.getByteTimeDomainData(e);const n=Math.max(e.length,s.fftSize);for(let r=0;r<n;r+=1)t[r]=(e[r]-128)*.0078125;return t}},yc=(s,t)=>(e,n)=>{const r=e.createAnalyser();if(ht(r,n),!(n.maxDecibels>n.minDecibels))throw t();return tt(r,n,"fftSize"),tt(r,n,"maxDecibels"),tt(r,n,"minDecibels"),tt(r,n,"smoothingTimeConstant"),s(mr,()=>mr(r))||gc(r),r},vc=s=>s===null?null:s.hasOwnProperty("AudioBuffer")?s.AudioBuffer:null,rt=(s,t,e)=>{const n=t[e];n!==void 0&&n!==s[e].value&&(s[e].value=n)},Tc=s=>{s.start=(t=>{let e=!1;return(n=0,r=0,i)=>{if(e)throw dt();t.call(s,n,r,i),e=!0}})(s.start)},vs=s=>{s.start=(t=>(e=0,n=0,r)=>{if(typeof r=="number"&&r<0||n<0||e<0)throw new RangeError("The parameters can't be negative.");t.call(s,e,n,r)})(s.start)},Ts=s=>{s.stop=(t=>(e=0)=>{if(e<0)throw new RangeError("The parameter can't be negative.");t.call(s,e)})(s.stop)},wc=(s,t,e,n,r,i,a,o,c,l,u)=>(h,p)=>{const f=h.createBufferSource();return ht(f,p),rt(f,p,"playbackRate"),tt(f,p,"buffer"),tt(f,p,"loop"),tt(f,p,"loopEnd"),tt(f,p,"loopStart"),t(e,()=>e(h))||Tc(f),t(n,()=>n(h))||c(f),t(r,()=>r(h))||l(f,h),t(i,()=>i(h))||vs(f),t(a,()=>a(h))||u(f,h),t(o,()=>o(h))||Ts(f),s(h,f),f},bc=s=>s===null?null:s.hasOwnProperty("AudioContext")?s.AudioContext:s.hasOwnProperty("webkitAudioContext")?s.webkitAudioContext:null,Cc=(s,t)=>(e,n,r)=>{const i=e.destination;if(i.channelCount!==n)try{i.channelCount=n}catch{}r&&i.channelCountMode!=="explicit"&&(i.channelCountMode="explicit"),i.maxChannelCount===0&&Object.defineProperty(i,"maxChannelCount",{value:n});const a=s(e,{channelCount:n,channelCountMode:i.channelCountMode,channelInterpretation:i.channelInterpretation,gain:1});return t(a,"channelCount",o=>()=>o.call(a),o=>c=>{o.call(a,c);try{i.channelCount=c}catch(l){if(c>i.maxChannelCount)throw l}}),t(a,"channelCountMode",o=>()=>o.call(a),o=>c=>{o.call(a,c),i.channelCountMode=c}),t(a,"channelInterpretation",o=>()=>o.call(a),o=>c=>{o.call(a,c),i.channelInterpretation=c}),Object.defineProperty(a,"maxChannelCount",{get:()=>i.maxChannelCount}),a.connect(i),a},Ac=s=>s===null?null:s.hasOwnProperty("AudioWorkletNode")?s.AudioWorkletNode:null,Sc=s=>{const{port1:t}=new MessageChannel;try{t.postMessage(s)}finally{t.close()}},kc=(s,t,e,n,r)=>(i,a,o,c,l,u)=>{if(o!==null)try{const h=new o(i,c,u),p=new Map;let f=null;if(Object.defineProperties(h,{channelCount:{get:()=>u.channelCount,set:()=>{throw s()}},channelCountMode:{get:()=>"explicit",set:()=>{throw s()}},onprocessorerror:{get:()=>f,set:d=>{typeof f=="function"&&h.removeEventListener("processorerror",f),f=typeof d=="function"?d:null,typeof f=="function"&&h.addEventListener("processorerror",f)}}}),h.addEventListener=(d=>(...m)=>{if(m[0]==="processorerror"){const _=typeof m[1]=="function"?m[1]:typeof m[1]=="object"&&m[1]!==null&&typeof m[1].handleEvent=="function"?m[1].handleEvent:null;if(_!==null){const y=p.get(m[1]);y!==void 0?m[1]=y:(m[1]=b=>{b.type==="error"?(Object.defineProperties(b,{type:{value:"processorerror"}}),_(b)):_(new ErrorEvent(m[0],{...b}))},p.set(_,m[1]))}}return d.call(h,"error",m[1],m[2]),d.call(h,...m)})(h.addEventListener),h.removeEventListener=(d=>(...m)=>{if(m[0]==="processorerror"){const _=p.get(m[1]);_!==void 0&&(p.delete(m[1]),m[1]=_)}return d.call(h,"error",m[1],m[2]),d.call(h,m[0],m[1],m[2])})(h.removeEventListener),u.numberOfOutputs!==0){const d=e(i,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return h.connect(d).connect(i.destination),r(h,()=>d.disconnect(),()=>d.connect(i.destination))}return h}catch(h){throw h.code===11?n():h}if(l===void 0)throw n();return Sc(u),t(i,a,l,u)},Gr=(s,t)=>s===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(s*t))))),Rc=s=>new Promise((t,e)=>{const{port1:n,port2:r}=new MessageChannel;n.onmessage=({data:i})=>{n.close(),r.close(),t(i)},n.onmessageerror=({data:i})=>{n.close(),r.close(),e(i)},r.postMessage(s)}),xc=async(s,t)=>{const e=await Rc(t);return new s(e)},Nc=(s,t,e,n)=>{let r=as.get(s);r===void 0&&(r=new WeakMap,as.set(s,r));const i=xc(e,n);return r.set(t,i),i},Oc=(s,t,e,n,r,i,a,o,c,l,u,h,p)=>(f,d,m,_)=>{if(_.numberOfInputs===0&&_.numberOfOutputs===0)throw c();const y=Array.isArray(_.outputChannelCount)?_.outputChannelCount:Array.from(_.outputChannelCount);if(y.some(N=>N<1))throw c();if(y.length!==_.numberOfOutputs)throw t();if(_.channelCountMode!=="explicit")throw c();const b=_.channelCount*_.numberOfInputs,C=y.reduce((N,F)=>N+F,0),S=m.parameterDescriptors===void 0?0:m.parameterDescriptors.length;if(b+S>6||C>6)throw c();const g=new MessageChannel,T=[],w=[];for(let N=0;N<_.numberOfInputs;N+=1)T.push(a(f,{channelCount:_.channelCount,channelCountMode:_.channelCountMode,channelInterpretation:_.channelInterpretation,gain:1})),w.push(r(f,{channelCount:_.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:_.channelCount}));const v=[];if(m.parameterDescriptors!==void 0)for(const{defaultValue:N,maxValue:F,minValue:ut,name:et}of m.parameterDescriptors){const Y=i(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:_.parameterData[et]!==void 0?_.parameterData[et]:N===void 0?0:N});Object.defineProperties(Y.offset,{defaultValue:{get:()=>N===void 0?0:N},maxValue:{get:()=>F===void 0?vt:F},minValue:{get:()=>ut===void 0?bt:ut}}),v.push(Y)}const x=n(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,b+S)}),R=Gr(d,f.sampleRate),k=o(f,R,b+S,Math.max(1,C)),A=r(f,{channelCount:Math.max(1,C),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,C)}),E=[];for(let N=0;N<_.numberOfOutputs;N+=1)E.push(n(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:y[N]}));for(let N=0;N<_.numberOfInputs;N+=1){T[N].connect(w[N]);for(let F=0;F<_.channelCount;F+=1)w[N].connect(x,F,N*_.channelCount+F)}const O=new jr(m.parameterDescriptors===void 0?[]:m.parameterDescriptors.map(({name:N},F)=>{const ut=v[F];return ut.connect(x,0,b+F),ut.start(0),[N,ut.offset]}));x.connect(k);let V=_.channelInterpretation,M=null;const I=_.numberOfOutputs===0?[k]:E,j={get bufferSize(){return R},get channelCount(){return _.channelCount},set channelCount(N){throw e()},get channelCountMode(){return _.channelCountMode},set channelCountMode(N){throw e()},get channelInterpretation(){return V},set channelInterpretation(N){for(const F of T)F.channelInterpretation=N;V=N},get context(){return k.context},get inputs(){return T},get numberOfInputs(){return _.numberOfInputs},get numberOfOutputs(){return _.numberOfOutputs},get onprocessorerror(){return M},set onprocessorerror(N){typeof M=="function"&&j.removeEventListener("processorerror",M),M=typeof N=="function"?N:null,typeof M=="function"&&j.addEventListener("processorerror",M)},get parameters(){return O},get port(){return g.port2},addEventListener(...N){return k.addEventListener(N[0],N[1],N[2])},connect:s.bind(null,I),disconnect:l.bind(null,I),dispatchEvent(...N){return k.dispatchEvent(N[0])},removeEventListener(...N){return k.removeEventListener(N[0],N[1],N[2])}},P=new Map;g.port1.addEventListener=(N=>(...F)=>{if(F[0]==="message"){const ut=typeof F[1]=="function"?F[1]:typeof F[1]=="object"&&F[1]!==null&&typeof F[1].handleEvent=="function"?F[1].handleEvent:null;if(ut!==null){const et=P.get(F[1]);et!==void 0?F[1]=et:(F[1]=Y=>{u(f.currentTime,f.sampleRate,()=>ut(Y))},P.set(ut,F[1]))}}return N.call(g.port1,F[0],F[1],F[2])})(g.port1.addEventListener),g.port1.removeEventListener=(N=>(...F)=>{if(F[0]==="message"){const ut=P.get(F[1]);ut!==void 0&&(P.delete(F[1]),F[1]=ut)}return N.call(g.port1,F[0],F[1],F[2])})(g.port1.removeEventListener);let q=null;Object.defineProperty(g.port1,"onmessage",{get:()=>q,set:N=>{typeof q=="function"&&g.port1.removeEventListener("message",q),q=typeof N=="function"?N:null,typeof q=="function"&&(g.port1.addEventListener("message",q),g.port1.start())}}),m.prototype.port=g.port1;let W=null;Nc(f,j,m,_).then(N=>W=N);const At=kn(_.numberOfInputs,_.channelCount),St=kn(_.numberOfOutputs,y),z=m.parameterDescriptors===void 0?[]:m.parameterDescriptors.reduce((N,{name:F})=>({...N,[F]:new Float32Array(128)}),{});let J=!0;const yt=()=>{_.numberOfOutputs>0&&k.disconnect(A);for(let N=0,F=0;N<_.numberOfOutputs;N+=1){const ut=E[N];for(let et=0;et<y[N];et+=1)A.disconnect(ut,F+et,et);F+=y[N]}},D=new Map;k.onaudioprocess=({inputBuffer:N,outputBuffer:F})=>{if(W!==null){const ut=h(j);for(let et=0;et<R;et+=128){for(let Y=0;Y<_.numberOfInputs;Y+=1)for(let st=0;st<_.channelCount;st+=1)Sn(N,At[Y],st,st,et);m.parameterDescriptors!==void 0&&m.parameterDescriptors.forEach(({name:Y},st)=>{Sn(N,z,Y,b+st,et)});for(let Y=0;Y<_.numberOfInputs;Y+=1)for(let st=0;st<y[Y];st+=1)St[Y][st].byteLength===0&&(St[Y][st]=new Float32Array(128));try{const Y=At.map((Ot,Kt)=>{if(ut[Kt].size>0)return D.set(Kt,R/128),Ot;const Qn=D.get(Kt);return Qn===void 0?[]:(Ot.every(Ui=>Ui.every(zi=>zi===0))&&(Qn===1?D.delete(Kt):D.set(Kt,Qn-1)),Ot)});J=u(f.currentTime+et/f.sampleRate,f.sampleRate,()=>W.process(Y,St,z));for(let Ot=0,Kt=0;Ot<_.numberOfOutputs;Ot+=1){for(let Le=0;Le<y[Ot];Le+=1)Ur(F,St[Ot],Le,Kt+Le,et);Kt+=y[Ot]}}catch(Y){J=!1,j.dispatchEvent(new ErrorEvent("processorerror",{colno:Y.colno,filename:Y.filename,lineno:Y.lineno,message:Y.message}))}if(!J){for(let Y=0;Y<_.numberOfInputs;Y+=1){T[Y].disconnect(w[Y]);for(let st=0;st<_.channelCount;st+=1)w[et].disconnect(x,st,Y*_.channelCount+st)}if(m.parameterDescriptors!==void 0){const Y=m.parameterDescriptors.length;for(let st=0;st<Y;st+=1){const Ot=v[st];Ot.disconnect(x,0,b+st),Ot.stop()}}x.disconnect(k),k.onaudioprocess=null,ce?yt():Te();break}}}};let ce=!1;const le=a(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),ve=()=>k.connect(le).connect(f.destination),Te=()=>{k.disconnect(le),le.disconnect()},Bi=()=>{if(J){Te(),_.numberOfOutputs>0&&k.connect(A);for(let N=0,F=0;N<_.numberOfOutputs;N+=1){const ut=E[N];for(let et=0;et<y[N];et+=1)A.connect(ut,F+et,et);F+=y[N]}}ce=!0},ji=()=>{J&&(ve(),yt()),ce=!1};return ve(),p(j,Bi,ji)},Yr=(s,t)=>{const e=s.createBiquadFilter();return ht(e,t),rt(e,t,"Q"),rt(e,t,"detune"),rt(e,t,"frequency"),rt(e,t,"gain"),tt(e,t,"type"),e},Ec=(s,t)=>(e,n)=>{const r=e.createChannelMerger(n.numberOfInputs);return s!==null&&s.name==="webkitAudioContext"&&t(e,r),ht(r,n),r},Mc=s=>{const t=s.numberOfOutputs;Object.defineProperty(s,"channelCount",{get:()=>t,set:e=>{if(e!==t)throw dt()}}),Object.defineProperty(s,"channelCountMode",{get:()=>"explicit",set:e=>{if(e!=="explicit")throw dt()}}),Object.defineProperty(s,"channelInterpretation",{get:()=>"discrete",set:e=>{if(e!=="discrete")throw dt()}})},tn=(s,t)=>{const e=s.createChannelSplitter(t.numberOfOutputs);return ht(e,t),Mc(e),e},Ic=(s,t,e,n,r)=>(i,a)=>{if(i.createConstantSource===void 0)return e(i,a);const o=i.createConstantSource();return ht(o,a),rt(o,a,"offset"),t(n,()=>n(i))||vs(o),t(r,()=>r(i))||Ts(o),s(i,o),o},De=(s,t)=>(s.connect=t.connect.bind(t),s.disconnect=t.disconnect.bind(t),s),Dc=(s,t,e,n)=>(r,{offset:i,...a})=>{const o=r.createBuffer(1,2,44100),c=t(r,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),l=e(r,{...a,gain:i}),u=o.getChannelData(0);u[0]=1,u[1]=1,c.buffer=o,c.loop=!0;const h={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(d){l.channelCount=d},get channelCountMode(){return l.channelCountMode},set channelCountMode(d){l.channelCountMode=d},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(d){l.channelInterpretation=d},get context(){return l.context},get inputs(){return[]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get offset(){return l.gain},get onended(){return c.onended},set onended(d){c.onended=d},addEventListener(...d){return c.addEventListener(d[0],d[1],d[2])},dispatchEvent(...d){return c.dispatchEvent(d[0])},removeEventListener(...d){return c.removeEventListener(d[0],d[1],d[2])},start(d=0){c.start.call(c,d)},stop(d=0){c.stop.call(c,d)}},p=()=>c.connect(l),f=()=>c.disconnect(l);return s(r,c),n(De(h,l),p,f)},Vc=(s,t)=>(e,n)=>{const r=e.createConvolver();if(ht(r,n),n.disableNormalization===r.normalize&&(r.normalize=!n.disableNormalization),tt(r,n,"buffer"),n.channelCount>2||(t(r,"channelCount",i=>()=>i.call(r),i=>a=>{if(a>2)throw s();return i.call(r,a)}),n.channelCountMode==="max"))throw s();return t(r,"channelCountMode",i=>()=>i.call(r),i=>a=>{if(a==="max")throw s();return i.call(r,a)}),r},$r=(s,t)=>{const e=s.createDelay(t.maxDelayTime);return ht(e,t),rt(e,t,"delayTime"),e},Pc=s=>(t,e)=>{const n=t.createDynamicsCompressor();if(ht(n,e),e.channelCount>2||e.channelCountMode==="max")throw s();return rt(n,e,"attack"),rt(n,e,"knee"),rt(n,e,"ratio"),rt(n,e,"release"),rt(n,e,"threshold"),n},Ct=(s,t)=>{const e=s.createGain();return ht(e,t),rt(e,t,"gain"),e},Fc=s=>(t,e,n)=>{if(t.createIIRFilter===void 0)return s(t,e,n);const r=t.createIIRFilter(n.feedforward,n.feedback);return ht(r,n),r};function Wc(s,t){const e=t[0]*t[0]+t[1]*t[1];return[(s[0]*t[0]+s[1]*t[1])/e,(s[1]*t[0]-s[0]*t[1])/e]}function qc(s,t){return[s[0]*t[0]-s[1]*t[1],s[0]*t[1]+s[1]*t[0]]}function _r(s,t){let e=[0,0];for(let n=s.length-1;n>=0;n-=1)e=qc(e,t),e[0]+=s[n];return e}const Lc=(s,t,e,n)=>(r,i,{channelCount:a,channelCountMode:o,channelInterpretation:c,feedback:l,feedforward:u})=>{const h=Gr(i,r.sampleRate),p=l instanceof Float64Array?l:new Float64Array(l),f=u instanceof Float64Array?u:new Float64Array(u),d=p.length,m=f.length,_=Math.min(d,m);if(d===0||d>20)throw n();if(p[0]===0)throw t();if(m===0||m>20)throw n();if(f[0]===0)throw t();if(p[0]!==1){for(let v=0;v<m;v+=1)f[v]/=p[0];for(let v=1;v<d;v+=1)p[v]/=p[0]}const y=e(r,h,a,a);y.channelCount=a,y.channelCountMode=o,y.channelInterpretation=c;const b=32,C=[],S=[],g=[];for(let v=0;v<a;v+=1){C.push(0);const x=new Float32Array(b),R=new Float32Array(b);x.fill(0),R.fill(0),S.push(x),g.push(R)}y.onaudioprocess=v=>{const x=v.inputBuffer,R=v.outputBuffer,k=x.numberOfChannels;for(let A=0;A<k;A+=1){const E=x.getChannelData(A),O=R.getChannelData(A);C[A]=zr(p,d,f,m,_,S[A],g[A],C[A],b,E,O)}};const T=r.sampleRate/2;return De({get bufferSize(){return h},get channelCount(){return y.channelCount},set channelCount(v){y.channelCount=v},get channelCountMode(){return y.channelCountMode},set channelCountMode(v){y.channelCountMode=v},get channelInterpretation(){return y.channelInterpretation},set channelInterpretation(v){y.channelInterpretation=v},get context(){return y.context},get inputs(){return[y]},get numberOfInputs(){return y.numberOfInputs},get numberOfOutputs(){return y.numberOfOutputs},addEventListener(...v){return y.addEventListener(v[0],v[1],v[2])},dispatchEvent(...v){return y.dispatchEvent(v[0])},getFrequencyResponse(v,x,R){if(v.length!==x.length||x.length!==R.length)throw s();const k=v.length;for(let A=0;A<k;A+=1){const E=-Math.PI*(v[A]/T),O=[Math.cos(E),Math.sin(E)],V=_r(f,O),M=_r(p,O),I=Wc(V,M);x[A]=Math.sqrt(I[0]*I[0]+I[1]*I[1]),R[A]=Math.atan2(I[1],I[0])}},removeEventListener(...v){return y.removeEventListener(v[0],v[1],v[2])}},y)},Bc=(s,t)=>s.createMediaElementSource(t.mediaElement),jc=(s,t)=>{const e=s.createMediaStreamDestination();return ht(e,t),e.numberOfOutputs===1&&Object.defineProperty(e,"numberOfOutputs",{get:()=>0}),e},Uc=(s,{mediaStream:t})=>{const e=t.getAudioTracks();e.sort((i,a)=>i.id<a.id?-1:i.id>a.id?1:0);const n=e.slice(0,1),r=s.createMediaStreamSource(new MediaStream(n));return Object.defineProperty(r,"mediaStream",{value:t}),r},zc=(s,t)=>(e,{mediaStreamTrack:n})=>{if(typeof e.createMediaStreamTrackSource=="function")return e.createMediaStreamTrackSource(n);const r=new MediaStream([n]),i=e.createMediaStreamSource(r);if(n.kind!=="audio")throw s();if(t(e))throw new TypeError;return i},Gc=s=>s===null?null:s.hasOwnProperty("OfflineAudioContext")?s.OfflineAudioContext:s.hasOwnProperty("webkitOfflineAudioContext")?s.webkitOfflineAudioContext:null,Yc=(s,t,e,n,r,i)=>(a,o)=>{const c=a.createOscillator();return ht(c,o),rt(c,o,"detune"),rt(c,o,"frequency"),o.periodicWave!==void 0?c.setPeriodicWave(o.periodicWave):tt(c,o,"type"),t(e,()=>e(a))||vs(c),t(n,()=>n(a))||i(c,a),t(r,()=>r(a))||Ts(c),s(a,c),c},$c=s=>(t,e)=>{const n=t.createPanner();return n.orientationX===void 0?s(t,e):(ht(n,e),rt(n,e,"orientationX"),rt(n,e,"orientationY"),rt(n,e,"orientationZ"),rt(n,e,"positionX"),rt(n,e,"positionY"),rt(n,e,"positionZ"),tt(n,e,"coneInnerAngle"),tt(n,e,"coneOuterAngle"),tt(n,e,"coneOuterGain"),tt(n,e,"distanceModel"),tt(n,e,"maxDistance"),tt(n,e,"panningModel"),tt(n,e,"refDistance"),tt(n,e,"rolloffFactor"),n)},Hc=(s,t,e,n,r,i,a,o,c,l)=>(u,{coneInnerAngle:h,coneOuterAngle:p,coneOuterGain:f,distanceModel:d,maxDistance:m,orientationX:_,orientationY:y,orientationZ:b,panningModel:C,positionX:S,positionY:g,positionZ:T,refDistance:w,rolloffFactor:v,...x})=>{const R=u.createPanner();if(x.channelCount>2||x.channelCountMode==="max")throw a();ht(R,x);const k={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},A=e(u,{...k,channelInterpretation:"speakers",numberOfInputs:6}),E=n(u,{...x,gain:1}),O=n(u,{...k,gain:1}),V=n(u,{...k,gain:0}),M=n(u,{...k,gain:0}),I=n(u,{...k,gain:0}),j=n(u,{...k,gain:0}),P=n(u,{...k,gain:0}),q=r(u,256,6,1),W=i(u,{...k,curve:new Float32Array([1,1]),oversample:"none"});let H=[_,y,b],At=[S,g,T];const St=new Float32Array(1);q.onaudioprocess=({inputBuffer:D})=>{const ce=[c(D,St,0),c(D,St,1),c(D,St,2)];ce.some((ve,Te)=>ve!==H[Te])&&(R.setOrientation(...ce),H=ce);const le=[c(D,St,3),c(D,St,4),c(D,St,5)];le.some((ve,Te)=>ve!==At[Te])&&(R.setPosition(...le),At=le)},Object.defineProperty(V.gain,"defaultValue",{get:()=>0}),Object.defineProperty(M.gain,"defaultValue",{get:()=>0}),Object.defineProperty(I.gain,"defaultValue",{get:()=>0}),Object.defineProperty(j.gain,"defaultValue",{get:()=>0}),Object.defineProperty(P.gain,"defaultValue",{get:()=>0});const z={get bufferSize(){},get channelCount(){return R.channelCount},set channelCount(D){if(D>2)throw a();E.channelCount=D,R.channelCount=D},get channelCountMode(){return R.channelCountMode},set channelCountMode(D){if(D==="max")throw a();E.channelCountMode=D,R.channelCountMode=D},get channelInterpretation(){return R.channelInterpretation},set channelInterpretation(D){E.channelInterpretation=D,R.channelInterpretation=D},get coneInnerAngle(){return R.coneInnerAngle},set coneInnerAngle(D){R.coneInnerAngle=D},get coneOuterAngle(){return R.coneOuterAngle},set coneOuterAngle(D){R.coneOuterAngle=D},get coneOuterGain(){return R.coneOuterGain},set coneOuterGain(D){if(D<0||D>1)throw t();R.coneOuterGain=D},get context(){return R.context},get distanceModel(){return R.distanceModel},set distanceModel(D){R.distanceModel=D},get inputs(){return[E]},get maxDistance(){return R.maxDistance},set maxDistance(D){if(D<0)throw new RangeError;R.maxDistance=D},get numberOfInputs(){return R.numberOfInputs},get numberOfOutputs(){return R.numberOfOutputs},get orientationX(){return O.gain},get orientationY(){return V.gain},get orientationZ(){return M.gain},get panningModel(){return R.panningModel},set panningModel(D){R.panningModel=D},get positionX(){return I.gain},get positionY(){return j.gain},get positionZ(){return P.gain},get refDistance(){return R.refDistance},set refDistance(D){if(D<0)throw new RangeError;R.refDistance=D},get rolloffFactor(){return R.rolloffFactor},set rolloffFactor(D){if(D<0)throw new RangeError;R.rolloffFactor=D},addEventListener(...D){return E.addEventListener(D[0],D[1],D[2])},dispatchEvent(...D){return E.dispatchEvent(D[0])},removeEventListener(...D){return E.removeEventListener(D[0],D[1],D[2])}};h!==z.coneInnerAngle&&(z.coneInnerAngle=h),p!==z.coneOuterAngle&&(z.coneOuterAngle=p),f!==z.coneOuterGain&&(z.coneOuterGain=f),d!==z.distanceModel&&(z.distanceModel=d),m!==z.maxDistance&&(z.maxDistance=m),_!==z.orientationX.value&&(z.orientationX.value=_),y!==z.orientationY.value&&(z.orientationY.value=y),b!==z.orientationZ.value&&(z.orientationZ.value=b),C!==z.panningModel&&(z.panningModel=C),S!==z.positionX.value&&(z.positionX.value=S),g!==z.positionY.value&&(z.positionY.value=g),T!==z.positionZ.value&&(z.positionZ.value=T),w!==z.refDistance&&(z.refDistance=w),v!==z.rolloffFactor&&(z.rolloffFactor=v),(H[0]!==1||H[1]!==0||H[2]!==0)&&R.setOrientation(...H),(At[0]!==0||At[1]!==0||At[2]!==0)&&R.setPosition(...At);const J=()=>{E.connect(R),s(E,W,0,0),W.connect(O).connect(A,0,0),W.connect(V).connect(A,0,1),W.connect(M).connect(A,0,2),W.connect(I).connect(A,0,3),W.connect(j).connect(A,0,4),W.connect(P).connect(A,0,5),A.connect(q).connect(u.destination)},yt=()=>{E.disconnect(R),o(E,W,0,0),W.disconnect(O),O.disconnect(A),W.disconnect(V),V.disconnect(A),W.disconnect(M),M.disconnect(A),W.disconnect(I),I.disconnect(A),W.disconnect(j),j.disconnect(A),W.disconnect(P),P.disconnect(A),A.disconnect(q),q.disconnect(u.destination)};return l(De(z,R),J,yt)},Zc=s=>(t,{disableNormalization:e,imag:n,real:r})=>{const i=n instanceof Float32Array?n:new Float32Array(n),a=r instanceof Float32Array?r:new Float32Array(r),o=t.createPeriodicWave(a,i,{disableNormalization:e});if(Array.from(n).length<2)throw s();return o},en=(s,t,e,n)=>s.createScriptProcessor(t,e,n),Xc=(s,t)=>(e,n)=>{const r=n.channelCountMode;if(r==="clamped-max")throw t();if(e.createStereoPanner===void 0)return s(e,n);const i=e.createStereoPanner();return ht(i,n),rt(i,n,"pan"),Object.defineProperty(i,"channelCountMode",{get:()=>r,set:a=>{if(a!==r)throw t()}}),i},Qc=(s,t,e,n,r,i)=>{const o=new Float32Array([1,1]),c=Math.PI/2,l={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},u={...l,oversample:"none"},h=(d,m,_,y)=>{const b=new Float32Array(16385),C=new Float32Array(16385);for(let x=0;x<16385;x+=1){const R=x/16384*c;b[x]=Math.cos(R),C[x]=Math.sin(R)}const S=e(d,{...l,gain:0}),g=n(d,{...u,curve:b}),T=n(d,{...u,curve:o}),w=e(d,{...l,gain:0}),v=n(d,{...u,curve:C});return{connectGraph(){m.connect(S),m.connect(T.inputs===void 0?T:T.inputs[0]),m.connect(w),T.connect(_),_.connect(g.inputs===void 0?g:g.inputs[0]),_.connect(v.inputs===void 0?v:v.inputs[0]),g.connect(S.gain),v.connect(w.gain),S.connect(y,0,0),w.connect(y,0,1)},disconnectGraph(){m.disconnect(S),m.disconnect(T.inputs===void 0?T:T.inputs[0]),m.disconnect(w),T.disconnect(_),_.disconnect(g.inputs===void 0?g:g.inputs[0]),_.disconnect(v.inputs===void 0?v:v.inputs[0]),g.disconnect(S.gain),v.disconnect(w.gain),S.disconnect(y,0,0),w.disconnect(y,0,1)}}},p=(d,m,_,y)=>{const b=new Float32Array(16385),C=new Float32Array(16385),S=new Float32Array(16385),g=new Float32Array(16385),T=Math.floor(16385/2);for(let I=0;I<16385;I+=1)if(I>T){const j=(I-T)/(16384-T)*c;b[I]=Math.cos(j),C[I]=Math.sin(j),S[I]=0,g[I]=1}else{const j=I/(16384-T)*c;b[I]=1,C[I]=0,S[I]=Math.cos(j),g[I]=Math.sin(j)}const w=t(d,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),v=e(d,{...l,gain:0}),x=n(d,{...u,curve:b}),R=e(d,{...l,gain:0}),k=n(d,{...u,curve:C}),A=n(d,{...u,curve:o}),E=e(d,{...l,gain:0}),O=n(d,{...u,curve:S}),V=e(d,{...l,gain:0}),M=n(d,{...u,curve:g});return{connectGraph(){m.connect(w),m.connect(A.inputs===void 0?A:A.inputs[0]),w.connect(v,0),w.connect(R,0),w.connect(E,1),w.connect(V,1),A.connect(_),_.connect(x.inputs===void 0?x:x.inputs[0]),_.connect(k.inputs===void 0?k:k.inputs[0]),_.connect(O.inputs===void 0?O:O.inputs[0]),_.connect(M.inputs===void 0?M:M.inputs[0]),x.connect(v.gain),k.connect(R.gain),O.connect(E.gain),M.connect(V.gain),v.connect(y,0,0),E.connect(y,0,0),R.connect(y,0,1),V.connect(y,0,1)},disconnectGraph(){m.disconnect(w),m.disconnect(A.inputs===void 0?A:A.inputs[0]),w.disconnect(v,0),w.disconnect(R,0),w.disconnect(E,1),w.disconnect(V,1),A.disconnect(_),_.disconnect(x.inputs===void 0?x:x.inputs[0]),_.disconnect(k.inputs===void 0?k:k.inputs[0]),_.disconnect(O.inputs===void 0?O:O.inputs[0]),_.disconnect(M.inputs===void 0?M:M.inputs[0]),x.disconnect(v.gain),k.disconnect(R.gain),O.disconnect(E.gain),M.disconnect(V.gain),v.disconnect(y,0,0),E.disconnect(y,0,0),R.disconnect(y,0,1),V.disconnect(y,0,1)}}},f=(d,m,_,y,b)=>{if(m===1)return h(d,_,y,b);if(m===2)return p(d,_,y,b);throw r()};return(d,{channelCount:m,channelCountMode:_,pan:y,...b})=>{if(_==="max")throw r();const C=s(d,{...b,channelCount:1,channelCountMode:_,numberOfInputs:2}),S=e(d,{...b,channelCount:m,channelCountMode:_,gain:1}),g=e(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:y});let{connectGraph:T,disconnectGraph:w}=f(d,m,S,g,C);Object.defineProperty(g.gain,"defaultValue",{get:()=>0}),Object.defineProperty(g.gain,"maxValue",{get:()=>1}),Object.defineProperty(g.gain,"minValue",{get:()=>-1});const v={get bufferSize(){},get channelCount(){return S.channelCount},set channelCount(A){S.channelCount!==A&&(x&&w(),{connectGraph:T,disconnectGraph:w}=f(d,A,S,g,C),x&&T()),S.channelCount=A},get channelCountMode(){return S.channelCountMode},set channelCountMode(A){if(A==="clamped-max"||A==="max")throw r();S.channelCountMode=A},get channelInterpretation(){return S.channelInterpretation},set channelInterpretation(A){S.channelInterpretation=A},get context(){return S.context},get inputs(){return[S]},get numberOfInputs(){return S.numberOfInputs},get numberOfOutputs(){return S.numberOfOutputs},get pan(){return g.gain},addEventListener(...A){return S.addEventListener(A[0],A[1],A[2])},dispatchEvent(...A){return S.dispatchEvent(A[0])},removeEventListener(...A){return S.removeEventListener(A[0],A[1],A[2])}};let x=!1;const R=()=>{T(),x=!0},k=()=>{w(),x=!1};return i(De(v,C),R,k)}},Jc=(s,t,e,n,r,i,a)=>(o,c)=>{const l=o.createWaveShaper();if(i!==null&&i.name==="webkitAudioContext"&&o.createGain().gain.automationRate===void 0)return e(o,c);ht(l,c);const u=c.curve===null||c.curve instanceof Float32Array?c.curve:new Float32Array(c.curve);if(u!==null&&u.length<2)throw t();tt(l,{curve:u},"curve"),tt(l,c,"oversample");let h=null,p=!1;return a(l,"curve",m=>()=>m.call(l),m=>_=>(m.call(l,_),p&&(n(_)&&h===null?h=s(o,l):!n(_)&&h!==null&&(h(),h=null)),_)),r(l,()=>{p=!0,n(l.curve)&&(h=s(o,l))},()=>{p=!1,h!==null&&(h(),h=null)})},Kc=(s,t,e,n,r)=>(i,{curve:a,oversample:o,...c})=>{const l=i.createWaveShaper(),u=i.createWaveShaper();ht(l,c),ht(u,c);const h=e(i,{...c,gain:1}),p=e(i,{...c,gain:-1}),f=e(i,{...c,gain:1}),d=e(i,{...c,gain:-1});let m=null,_=!1,y=null;const b={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(g){h.channelCount=g,p.channelCount=g,l.channelCount=g,f.channelCount=g,u.channelCount=g,d.channelCount=g},get channelCountMode(){return l.channelCountMode},set channelCountMode(g){h.channelCountMode=g,p.channelCountMode=g,l.channelCountMode=g,f.channelCountMode=g,u.channelCountMode=g,d.channelCountMode=g},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(g){h.channelInterpretation=g,p.channelInterpretation=g,l.channelInterpretation=g,f.channelInterpretation=g,u.channelInterpretation=g,d.channelInterpretation=g},get context(){return l.context},get curve(){return y},set curve(g){if(g!==null&&g.length<2)throw t();if(g===null)l.curve=g,u.curve=g;else{const T=g.length,w=new Float32Array(T+2-T%2),v=new Float32Array(T+2-T%2);w[0]=g[0],v[0]=-g[T-1];const x=Math.ceil((T+1)/2),R=(T+1)/2-1;for(let k=1;k<x;k+=1){const A=k/x*R,E=Math.floor(A),O=Math.ceil(A);w[k]=E===O?g[E]:(1-(A-E))*g[E]+(1-(O-A))*g[O],v[k]=E===O?-g[T-1-E]:-((1-(A-E))*g[T-1-E])-(1-(O-A))*g[T-1-O]}w[x]=T%2===1?g[x-1]:(g[x-2]+g[x-1])/2,l.curve=w,u.curve=v}y=g,_&&(n(y)&&m===null?m=s(i,h):m!==null&&(m(),m=null))},get inputs(){return[h]},get numberOfInputs(){return l.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get oversample(){return l.oversample},set oversample(g){l.oversample=g,u.oversample=g},addEventListener(...g){return h.addEventListener(g[0],g[1],g[2])},dispatchEvent(...g){return h.dispatchEvent(g[0])},removeEventListener(...g){return h.removeEventListener(g[0],g[1],g[2])}};a!==null&&(b.curve=a instanceof Float32Array?a:new Float32Array(a)),o!==b.oversample&&(b.oversample=o);const C=()=>{h.connect(l).connect(f),h.connect(p).connect(u).connect(d).connect(f),_=!0,n(y)&&(m=s(i,h))},S=()=>{h.disconnect(l),l.disconnect(f),h.disconnect(p),p.disconnect(u),u.disconnect(d),d.disconnect(f),_=!1,m!==null&&(m(),m=null)};return r(De(b,f),C,S)},wt=()=>new DOMException("","NotSupportedError"),tl={numberOfChannels:1},el=(s,t,e,n,r)=>class extends s{constructor(a,o,c){let l;if(typeof a=="number"&&o!==void 0&&c!==void 0)l={length:o,numberOfChannels:a,sampleRate:c};else if(typeof a=="object")l=a;else throw new Error("The given parameters are not valid.");const{length:u,numberOfChannels:h,sampleRate:p}={...tl,...l},f=n(h,u,p);t($e,()=>$e(f))||f.addEventListener("statechange",(()=>{let d=0;const m=_=>{this._state==="running"&&(d>0?(f.removeEventListener("statechange",m),_.stopImmediatePropagation(),this._waitForThePromiseToSettle(_)):d+=1)};return m})()),super(f,h),this._length=u,this._nativeOfflineAudioContext=f,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(e()):(this._state="running",r(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,Wr(this)}))}_waitForThePromiseToSettle(a){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(a):setTimeout(()=>this._waitForThePromiseToSettle(a))}},nl={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},sl=(s,t,e,n,r,i,a)=>class extends s{constructor(c,l){const u=r(c),h={...nl,...l},p=e(u,h),f=i(u),d=f?n():null,m=c.sampleRate/2;super(c,!1,p,d),this._detune=t(this,f,p.detune,153600,-153600),this._frequency=t(this,f,p.frequency,m,-m),this._nativeOscillatorNode=p,this._onended=null,this._oscillatorNodeRenderer=d,this._oscillatorNodeRenderer!==null&&h.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=h.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?a(this,c):null;this._nativeOscillatorNode.onended=l;const u=this._nativeOscillatorNode.onended;this._onended=u!==null&&u===l?c:u}get type(){return this._nativeOscillatorNode.type}set type(c){this._nativeOscillatorNode.type=c,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(c){this._nativeOscillatorNode.setPeriodicWave(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=c)}start(c=0){if(this._nativeOscillatorNode.start(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=c),this.context.state!=="closed"){ke(this);const l=()=>{this._nativeOscillatorNode.removeEventListener("ended",l),$t(this)&&Qe(this)};this._nativeOscillatorNode.addEventListener("ended",l)}}stop(c=0){this._nativeOscillatorNode.stop(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=c)}},rl=(s,t,e,n,r)=>()=>{const i=new WeakMap;let a=null,o=null,c=null;const l=async(u,h)=>{let p=e(u);const f=gt(p,h);if(!f){const d={channelCount:p.channelCount,channelCountMode:p.channelCountMode,channelInterpretation:p.channelInterpretation,detune:p.detune.value,frequency:p.frequency.value,periodicWave:a===null?void 0:a,type:p.type};p=t(h,d),o!==null&&p.start(o),c!==null&&p.stop(c)}return i.set(h,p),f?(await s(h,u.detune,p.detune),await s(h,u.frequency,p.frequency)):(await n(h,u.detune,p.detune),await n(h,u.frequency,p.frequency)),await r(u,h,p),p};return{set periodicWave(u){a=u},set start(u){o=u},set stop(u){c=u},render(u,h){const p=i.get(h);return p!==void 0?Promise.resolve(p):l(u,h)}}},il={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},ol=(s,t,e,n,r,i,a)=>class extends s{constructor(c,l){const u=r(c),h={...il,...l},p=e(u,h),f=i(u),d=f?n():null;super(c,!1,p,d),this._nativePannerNode=p,this._orientationX=t(this,f,p.orientationX,vt,bt),this._orientationY=t(this,f,p.orientationY,vt,bt),this._orientationZ=t(this,f,p.orientationZ,vt,bt),this._positionX=t(this,f,p.positionX,vt,bt),this._positionY=t(this,f,p.positionY,vt,bt),this._positionZ=t(this,f,p.positionZ,vt,bt),a(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(c){this._nativePannerNode.coneInnerAngle=c}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(c){this._nativePannerNode.coneOuterAngle=c}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(c){this._nativePannerNode.coneOuterGain=c}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(c){this._nativePannerNode.distanceModel=c}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(c){this._nativePannerNode.maxDistance=c}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(c){this._nativePannerNode.panningModel=c}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(c){this._nativePannerNode.refDistance=c}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(c){this._nativePannerNode.rolloffFactor=c}},al=(s,t,e,n,r,i,a,o,c,l)=>()=>{const u=new WeakMap;let h=null;const p=async(f,d)=>{let m=null,_=i(f);const y={channelCount:_.channelCount,channelCountMode:_.channelCountMode,channelInterpretation:_.channelInterpretation},b={...y,coneInnerAngle:_.coneInnerAngle,coneOuterAngle:_.coneOuterAngle,coneOuterGain:_.coneOuterGain,distanceModel:_.distanceModel,maxDistance:_.maxDistance,panningModel:_.panningModel,refDistance:_.refDistance,rolloffFactor:_.rolloffFactor},C=gt(_,d);if("bufferSize"in _)m=n(d,{...y,gain:1});else if(!C){const S={...b,orientationX:_.orientationX.value,orientationY:_.orientationY.value,orientationZ:_.orientationZ.value,positionX:_.positionX.value,positionY:_.positionY.value,positionZ:_.positionZ.value};_=r(d,S)}if(u.set(d,m===null?_:m),m!==null){if(h===null){if(a===null)throw new Error("Missing the native OfflineAudioContext constructor.");const k=new a(6,f.context.length,d.sampleRate),A=t(k,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});A.connect(k.destination),h=(async()=>{const E=await Promise.all([f.orientationX,f.orientationY,f.orientationZ,f.positionX,f.positionY,f.positionZ].map(async(O,V)=>{const M=e(k,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:V===0?1:0});return await o(k,O,M.offset),M}));for(let O=0;O<6;O+=1)E[O].connect(A,0,O),E[O].start(0);return l(k)})()}const S=await h,g=n(d,{...y,gain:1});await c(f,d,g);const T=[];for(let k=0;k<S.numberOfChannels;k+=1)T.push(S.getChannelData(k));let w=[T[0][0],T[1][0],T[2][0]],v=[T[3][0],T[4][0],T[5][0]],x=n(d,{...y,gain:1}),R=r(d,{...b,orientationX:w[0],orientationY:w[1],orientationZ:w[2],positionX:v[0],positionY:v[1],positionZ:v[2]});g.connect(x).connect(R.inputs[0]),R.connect(m);for(let k=128;k<S.length;k+=128){const A=[T[0][k],T[1][k],T[2][k]],E=[T[3][k],T[4][k],T[5][k]];if(A.some((O,V)=>O!==w[V])||E.some((O,V)=>O!==v[V])){w=A,v=E;const O=k/d.sampleRate;x.gain.setValueAtTime(0,O),x=n(d,{...y,gain:0}),R=r(d,{...b,orientationX:w[0],orientationY:w[1],orientationZ:w[2],positionX:v[0],positionY:v[1],positionZ:v[2]}),x.gain.setValueAtTime(1,O),g.connect(x).connect(R.inputs[0]),R.connect(m)}}return m}return C?(await s(d,f.orientationX,_.orientationX),await s(d,f.orientationY,_.orientationY),await s(d,f.orientationZ,_.orientationZ),await s(d,f.positionX,_.positionX),await s(d,f.positionY,_.positionY),await s(d,f.positionZ,_.positionZ)):(await o(d,f.orientationX,_.orientationX),await o(d,f.orientationY,_.orientationY),await o(d,f.orientationZ,_.orientationZ),await o(d,f.positionX,_.positionX),await o(d,f.positionY,_.positionY),await o(d,f.positionZ,_.positionZ)),Ie(_)?await c(f,d,_.inputs[0]):await c(f,d,_),_};return{render(f,d){const m=u.get(d);return m!==void 0?Promise.resolve(m):p(f,d)}}},cl={disableNormalization:!1},ll=(s,t,e,n)=>class Hr{constructor(i,a){const o=t(i),c=n({...cl,...a}),l=s(o,c);return e.add(l),l}static[Symbol.hasInstance](i){return i!==null&&typeof i=="object"&&Object.getPrototypeOf(i)===Hr.prototype||e.has(i)}},ul=(s,t)=>(e,n,r)=>(s(n).replay(r),t(n,e,r)),hl=(s,t,e)=>async(n,r,i)=>{const a=s(n);await Promise.all(a.activeInputs.map((o,c)=>Array.from(o).map(async([l,u])=>{const p=await t(l).render(l,r),f=n.context.destination;!e(l)&&(n!==f||!e(n))&&p.connect(i,u,c)})).reduce((o,c)=>[...o,...c],[]))},dl=(s,t,e)=>async(n,r,i)=>{const a=t(n);await Promise.all(Array.from(a.activeInputs).map(async([o,c])=>{const u=await s(o).render(o,r);e(o)||u.connect(i,c)}))},pl=(s,t,e,n)=>r=>s($e,()=>$e(r))?Promise.resolve(s(n,n)).then(i=>{if(!i){const a=e(r,512,0,1);r.oncomplete=()=>{a.onaudioprocess=null,a.disconnect()},a.onaudioprocess=()=>r.currentTime,a.connect(r.destination)}return r.startRendering()}):new Promise(i=>{const a=t(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});r.oncomplete=o=>{a.disconnect(),i(o.renderedBuffer)},a.connect(r.destination),r.startRendering()}),fl=s=>(t,e)=>{s.set(t,e)},ml=s=>(t,e)=>s.set(t,e),_l=(s,t,e,n,r,i,a,o)=>(c,l)=>e(c).render(c,l).then(()=>Promise.all(Array.from(n(l)).map(u=>e(u).render(u,l)))).then(()=>r(l)).then(u=>(typeof u.copyFromChannel!="function"?(a(u),_s(u)):t(i,()=>i(u))||o(u),s.add(u),u)),gl={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},yl=(s,t,e,n,r,i)=>class extends s{constructor(o,c){const l=r(o),u={...gl,...c},h=e(l,u),p=i(l),f=p?n():null;super(o,!1,h,f),this._pan=t(this,p,h.pan)}get pan(){return this._pan}},vl=(s,t,e,n,r)=>()=>{const i=new WeakMap,a=async(o,c)=>{let l=e(o);const u=gt(l,c);if(!u){const h={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,pan:l.pan.value};l=t(c,h)}return i.set(c,l),u?await s(c,o.pan,l.pan):await n(c,o.pan,l.pan),Ie(l)?await r(o,c,l.inputs[0]):await r(o,c,l),l};return{render(o,c){const l=i.get(c);return l!==void 0?Promise.resolve(l):a(o,c)}}},Tl=s=>()=>{if(s===null)return!1;try{new s({length:1,sampleRate:44100})}catch{return!1}return!0},wl=(s,t)=>async()=>{if(s===null)return!0;if(t===null)return!1;const e=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),n=new t(1,128,44100),r=URL.createObjectURL(e);let i=!1,a=!1;try{await n.audioWorklet.addModule(r);const o=new s(n,"a",{numberOfOutputs:0}),c=n.createOscillator();o.port.onmessage=()=>i=!0,o.onprocessorerror=()=>a=!0,c.connect(o),c.start(0),await n.startRendering(),await new Promise(l=>setTimeout(l))}catch{}finally{URL.revokeObjectURL(r)}return i&&!a},bl=(s,t)=>()=>{if(t===null)return Promise.resolve(!1);const e=new t(1,1,44100),n=s(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(r=>{e.oncomplete=()=>{n.disconnect(),r(e.currentTime!==0)},e.startRendering()})},Cl=()=>new DOMException("","UnknownError"),Al={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},Sl=(s,t,e,n,r,i,a)=>class extends s{constructor(c,l){const u=r(c),h={...Al,...l},p=e(u,h),d=i(u)?n():null;super(c,!0,p,d),this._isCurveNullified=!1,this._nativeWaveShaperNode=p,a(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(c){if(c===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(c.length<2)throw t();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=c}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(c){this._nativeWaveShaperNode.oversample=c}},kl=(s,t,e)=>()=>{const n=new WeakMap,r=async(i,a)=>{let o=t(i);if(!gt(o,a)){const l={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,curve:o.curve,oversample:o.oversample};o=s(a,l)}return n.set(a,o),Ie(o)?await e(i,a,o.inputs[0]):await e(i,a,o),o};return{render(i,a){const o=n.get(a);return o!==void 0?Promise.resolve(o):r(i,a)}}},Rl=()=>typeof window>"u"?null:window,xl=(s,t)=>e=>{e.copyFromChannel=(n,r,i=0)=>{const a=s(i),o=s(r);if(o>=e.numberOfChannels)throw t();const c=e.length,l=e.getChannelData(o),u=n.length;for(let h=a<0?-a:0;h+a<c&&h<u;h+=1)n[h]=l[h+a]},e.copyToChannel=(n,r,i=0)=>{const a=s(i),o=s(r);if(o>=e.numberOfChannels)throw t();const c=e.length,l=e.getChannelData(o),u=n.length;for(let h=a<0?-a:0;h+a<c&&h<u;h+=1)l[h+a]=n[h]}},Nl=s=>t=>{t.copyFromChannel=(e=>(n,r,i=0)=>{const a=s(i),o=s(r);if(a<t.length)return e.call(t,n,o,a)})(t.copyFromChannel),t.copyToChannel=(e=>(n,r,i=0)=>{const a=s(i),o=s(r);if(a<t.length)return e.call(t,n,o,a)})(t.copyToChannel)},Ol=s=>(t,e)=>{const n=e.createBuffer(1,1,44100);t.buffer===null&&(t.buffer=n),s(t,"buffer",r=>()=>{const i=r.call(t);return i===n?null:i},r=>i=>r.call(t,i===null?n:i))},El=(s,t)=>(e,n)=>{n.channelCount=1,n.channelCountMode="explicit",Object.defineProperty(n,"channelCount",{get:()=>1,set:()=>{throw s()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:()=>{throw s()}});const r=e.createBufferSource();t(n,()=>{const o=n.numberOfInputs;for(let c=0;c<o;c+=1)r.connect(n,0,c)},()=>r.disconnect(n))},Zr=(s,t,e)=>s.copyFromChannel===void 0?s.getChannelData(e)[0]:(s.copyFromChannel(t,e),t[0]),Xr=s=>{if(s===null)return!1;const t=s.length;return t%2!==0?s[Math.floor(t/2)]!==0:s[t/2-1]+s[t/2]!==0},nn=(s,t,e,n)=>{let r=s;for(;!r.hasOwnProperty(t);)r=Object.getPrototypeOf(r);const{get:i,set:a}=Object.getOwnPropertyDescriptor(r,t);Object.defineProperty(s,t,{get:e(i),set:n(a)})},Ml=s=>({...s,outputChannelCount:s.outputChannelCount!==void 0?s.outputChannelCount:s.numberOfInputs===1&&s.numberOfOutputs===1?[s.channelCount]:Array.from({length:s.numberOfOutputs},()=>1)}),Il=s=>({...s,channelCount:s.numberOfOutputs}),Dl=s=>{const{imag:t,real:e}=s;return t===void 0?e===void 0?{...s,imag:[0,0],real:[0,0]}:{...s,imag:Array.from(e,()=>0),real:e}:e===void 0?{...s,imag:t,real:Array.from(t,()=>0)}:{...s,imag:t,real:e}},Qr=(s,t,e)=>{try{s.setValueAtTime(t,e)}catch(n){if(n.code!==9)throw n;Qr(s,t,e+1e-7)}},Vl=s=>{const t=s.createBufferSource();t.start();try{t.start()}catch{return!0}return!1},Pl=s=>{const t=s.createBufferSource(),e=s.createBuffer(1,1,44100);t.buffer=e;try{t.start(0,1)}catch{return!1}return!0},Fl=s=>{const t=s.createBufferSource();t.start();try{t.stop()}catch{return!1}return!0},ws=s=>{const t=s.createOscillator();try{t.start(-1)}catch(e){return e instanceof RangeError}return!1},Jr=s=>{const t=s.createBuffer(1,1,44100),e=s.createBufferSource();e.buffer=t,e.start(),e.stop();try{return e.stop(),!0}catch{return!1}},bs=s=>{const t=s.createOscillator();try{t.stop(-1)}catch(e){return e instanceof RangeError}return!1},Wl=s=>{const{port1:t,port2:e}=new MessageChannel;try{t.postMessage(s)}finally{t.close(),e.close()}},ql=s=>{s.start=(t=>(e=0,n=0,r)=>{const i=s.buffer,a=i===null?n:Math.min(i.duration,n);i!==null&&a>i.duration-.5/s.context.sampleRate?t.call(s,e,0,0):t.call(s,e,a,r)})(s.start)},Kr=(s,t)=>{const e=t.createGain();s.connect(e);const n=(r=>()=>{r.call(s,e),s.removeEventListener("ended",n)})(s.disconnect);s.addEventListener("ended",n),De(s,e),s.stop=(r=>{let i=!1;return(a=0)=>{if(i)try{r.call(s,a)}catch{e.gain.setValueAtTime(0,a)}else r.call(s,a),i=!0}})(s.stop)},Ve=(s,t)=>e=>{const n={value:s};return Object.defineProperties(e,{currentTarget:n,target:n}),typeof t=="function"?t.call(s,e):t.handleEvent.call(s,e)},Ll=io(_e),Bl=ho(_e),jl=Aa(En),ti=new WeakMap,Ul=ja(ti),qt=ta(new Map,new WeakMap),jt=Rl(),ei=yc(qt,Ut),Cs=Ba(Tt),mt=hl(Tt,Cs,fe),zl=go(ei,Q,mt),X=Ga(On),Xt=Gc(jt),Z=cc(Xt),ni=new WeakMap,si=Da(Ve),sn=bc(jt),As=rc(sn),Ss=ic(jt),ri=oc(jt),He=Ac(jt),at=jo(oo(Er),uo(Ll,Bl,bn,jl,Cn,Tt,Ul,Xe,Q,_e,$t,fe,_n),qt,Ka(is,Cn,Tt,Q,Ye,$t),Ut,Mn,wt,Ta(bn,is,Tt,Q,Ye,X,$t,Z),Ra(ni,Tt,Wt),si,X,As,Ss,ri,Z,He),Gl=_o(at,zl,Ut,ei,X,Z),ks=new WeakSet,gr=vc(jt),ii=pa(new Uint32Array(1)),Rs=xl(ii,Ut),xs=Nl(ii),oi=vo(ks,qt,wt,gr,Xt,Tl(gr),Rs,xs),In=po(Ct),ai=dl(Cs,Je,fe),zt=aa(ai),Pe=wc(In,qt,Vl,Pl,Fl,ws,Jr,bs,ql,Ol(nn),Kr),Gt=ul(Ua(Je),ai),Yl=bo(zt,Pe,Q,Gt,mt),Lt=Uo(ao(Mr),ni,ms,zo,Ki,to,eo,no,so,ns,Nr,sn,Qr),$l=wo(at,Yl,Lt,dt,Pe,X,Z,Ve),Hl=Eo(at,Mo,Ut,dt,Cc(Ct,nn),X,Z,mt),Zl=Ko(zt,Yr,Q,Gt,mt),ge=ml(ti),Xl=Jo(at,Lt,Zl,Mn,Yr,X,Z,ge),ie=_c(_e,Ss),Ql=El(dt,ie),oe=Ec(sn,Ql),Jl=sa(oe,Q,mt),Kl=na(at,Jl,oe,X,Z),tu=oa(tn,Q,mt),eu=ia(at,tu,tn,X,Z,Il),nu=Dc(In,Pe,Ct,ie),Fe=Ic(In,qt,nu,ws,bs),su=da(zt,Fe,Q,Gt,mt),ru=ha(at,Lt,su,Fe,X,Z,Ve),ci=Vc(wt,nn),iu=_a(ci,Q,mt),ou=ma(at,iu,ci,X,Z,ge),au=Ca(zt,$r,Q,Gt,mt),cu=ba(at,Lt,au,$r,X,Z,ge),li=Pc(wt),lu=Ea(zt,li,Q,Gt,mt),uu=Oa(at,Lt,lu,li,wt,X,Z,ge),hu=qa(zt,Ct,Q,Gt,mt),du=Wa(at,Lt,hu,Ct,X,Z),pu=Lc(Mn,dt,en,wt),Dn=pl(qt,Ct,en,bl(Ct,Xt)),fu=Ja(Pe,Q,Xt,mt,Dn),mu=Fc(pu),_u=Xa(at,mu,fu,X,Z,ge),gu=Io(Lt,oe,Fe,en,wt,Zr,Z,nn),ui=new WeakMap,yu=mc(Hl,gu,si,Z,ui,Ve),hi=Yc(In,qt,ws,Jr,bs,Kr),vu=rl(zt,hi,Q,Gt,mt),Tu=sl(at,Lt,hi,vu,X,Z,Ve),di=la(Pe),wu=Kc(di,dt,Ct,Xr,ie),Vn=Jc(di,dt,wu,Xr,ie,sn,nn),bu=Hc(bn,dt,oe,Ct,en,Vn,wt,Cn,Zr,ie),pi=$c(bu),Cu=al(zt,oe,Fe,Ct,pi,Q,Xt,Gt,mt,Dn),Au=ol(at,Lt,pi,Cu,X,Z,ge),Su=Zc(Ut),ku=ll(Su,X,new WeakSet,Dl),Ru=Qc(oe,tn,Ct,Vn,wt,ie),fi=Xc(Ru,wt),xu=vl(zt,fi,Q,Gt,mt),Nu=yl(at,Lt,fi,xu,X,Z),Ou=kl(Vn,Q,mt),Eu=Sl(at,dt,Vn,Ou,X,Z,ge),mi=lc(jt),Ns=Va(jt),_i=new WeakMap,Mu=Ya(_i,Xt),Iu=mi?lo(qt,wt,Ia(jt),Ns,Pa(ro),X,Mu,Z,He,new WeakMap,new WeakMap,wl(He,Xt),jt):void 0,Du=ac(As,Z),Vu=va(ks,qt,ya,Ma,new WeakSet,X,Du,Tn,$e,Rs,xs),gi=Xo(Iu,Gl,oi,$l,Xl,Kl,eu,ru,ou,Vu,cu,uu,du,_u,yu,Tu,Au,ku,Nu,Eu),Pu=uc(at,Bc,X,Z),Fu=dc(at,jc,X,Z),Wu=pc(at,Uc,X,Z),qu=zc(dt,Z),Lu=fc(at,qu,X),Bu=Oo(gi,dt,wt,Cl,Pu,Fu,Wu,Lu,sn),Os=$a(ui),ju=fo(Os),yi=ca(Ut),Uu=Sa(Os),vi=xa(Ut),Ti=new WeakMap,zu=La(Ti,Wt),Gu=Oc(yi,Ut,dt,oe,tn,Fe,Ct,en,wt,vi,Ns,zu,ie),Yu=kc(dt,Gu,Ct,wt,ie),$u=Zo(zt,yi,Pe,oe,tn,Fe,Ct,Uu,vi,Ns,Q,He,Xt,Gt,mt,Dn),Hu=za(_i),Zu=fl(Ti),yr=mi?Yo(ju,at,Lt,$u,Yu,Tt,Hu,X,Z,He,Ml,Zu,Wl,Ve):void 0,Xu=ga(wt,Xt),Qu=_l(ks,qt,Cs,Os,Dn,Tn,Rs,xs),Ju=el(gi,qt,dt,Xu,Qu),Ku=tc(On,As),th=ec(fs,Ss),eh=nc(ms,ri),nh=sc(On,Z);function It(s){return s===void 0}function G(s){return s!==void 0}function sh(s){return typeof s=="function"}function Ht(s){return typeof s=="number"}function de(s){return Object.prototype.toString.call(s)==="[object Object]"&&s.constructor===Object}function wi(s){return typeof s=="boolean"}function Ft(s){return Array.isArray(s)}function Zt(s){return typeof s=="string"}function dn(s){return Zt(s)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(s)}function B(s,t){if(!s)throw new Error(t)}function se(s,t,e=1/0){if(!(t<=s&&s<=e))throw new RangeError(`Value must be within [${t}, ${e}], got: ${s}`)}function bi(s){!s.isOffline&&s.state!=="running"&&Es('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let Ci=!1,vr=!1;function Tr(s){Ci=s}function rh(s){It(s)&&Ci&&!vr&&(vr=!0,Es("Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing"))}let Ai=console;function ih(...s){Ai.log(...s)}function Es(...s){Ai.warn(...s)}function oh(s){return new Bu(s)}function ah(s,t,e){return new Ju(s,t,e)}const kt=typeof self=="object"?self:null,ch=kt&&(kt.hasOwnProperty("AudioContext")||kt.hasOwnProperty("webkitAudioContext"));function lh(s,t,e){return B(G(yr),"AudioWorkletNode only works in a secure context (https or localhost)"),new(s instanceof(kt==null?void 0:kt.BaseAudioContext)?kt==null?void 0:kt.AudioWorkletNode:yr)(s,t,e)}function Bt(s,t,e,n){var r=arguments.length,i=r<3?t:n===null?n=Object.getOwnPropertyDescriptor(t,e):n,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(s,t,e,n);else for(var o=s.length-1;o>=0;o--)(a=s[o])&&(i=(r<3?a(i):r>3?a(t,e,i):a(t,e))||i);return r>3&&i&&Object.defineProperty(t,e,i),i}function lt(s,t,e,n){function r(i){return i instanceof e?i:new e(function(a){a(i)})}return new(e||(e=Promise))(function(i,a){function o(u){try{l(n.next(u))}catch(h){a(h)}}function c(u){try{l(n.throw(u))}catch(h){a(h)}}function l(u){u.done?i(u.value):r(u.value).then(o,c)}l((n=n.apply(s,t||[])).next())})}class uh{constructor(t,e,n,r){this._callback=t,this._type=e,this._minimumUpdateInterval=Math.max(128/(r||44100),.001),this.updateInterval=n,this._createClock()}_createWorker(){const t=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),e=URL.createObjectURL(t),n=new Worker(e);n.onmessage=this._callback.bind(this),this._worker=n}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&clearTimeout(this._timeout),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(t){var e;this._updateInterval=Math.max(t,this._minimumUpdateInterval),this._type==="worker"&&((e=this._worker)===null||e===void 0||e.postMessage(this._updateInterval*1e3))}get type(){return this._type}set type(t){this._disposeClock(),this._type=t,this._createClock()}dispose(){this._disposeClock()}}function me(s){return eh(s)}function ne(s){return th(s)}function gn(s){return nh(s)}function we(s){return Ku(s)}function hh(s){return s instanceof oi}function dh(s,t){return s==="value"||me(t)||ne(t)||hh(t)}function Ae(s,...t){if(!t.length)return s;const e=t.shift();if(de(s)&&de(e))for(const n in e)dh(n,e[n])?s[n]=e[n]:de(e[n])?(s[n]||Object.assign(s,{[n]:{}}),Ae(s[n],e[n])):Object.assign(s,{[n]:e[n]});return Ae(s,...t)}function ph(s,t){return s.length===t.length&&s.every((e,n)=>t[n]===e)}function L(s,t,e=[],n){const r={},i=Array.from(t);if(de(i[0])&&n&&!Reflect.has(i[0],n)&&(Object.keys(i[0]).some(o=>Reflect.has(s,o))||(Ae(r,{[n]:i[0]}),e.splice(e.indexOf(n),1),i.shift())),i.length===1&&de(i[0]))Ae(r,i[0]);else for(let a=0;a<e.length;a++)G(i[a])&&(r[e[a]]=i[a]);return Ae(s,r)}function fh(s){return s.constructor.getDefaults()}function pe(s,t){return It(s)?t:s}function wr(s,t){return t.forEach(e=>{Reflect.has(s,e)&&delete s[e]}),s}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2024 Yotam Mann
 */class Qt{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...t){(this.debug||kt&&this.toString()===kt.TONE_DEBUG_CLASS)&&ih(this,...t)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}Qt.version=xr;const Ms=1e-6;function Re(s,t){return s>t+Ms}function us(s,t){return Re(s,t)||Vt(s,t)}function Rn(s,t){return s+Ms<t}function Vt(s,t){return Math.abs(s-t)<Ms}function mh(s,t,e){return Math.max(Math.min(s,e),t)}class Dt extends Qt{constructor(){super(),this.name="Timeline",this._timeline=[];const t=L(Dt.getDefaults(),arguments,["memory"]);this.memory=t.memory,this.increasing=t.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(t){if(B(Reflect.has(t,"time"),"Timeline: events must have a time attribute"),t.time=t.time.valueOf(),this.increasing&&this.length){const e=this._timeline[this.length-1];B(us(t.time,e.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(t)}else{const e=this._search(t.time);this._timeline.splice(e+1,0,t)}if(this.length>this.memory){const e=this.length-this.memory;this._timeline.splice(0,e)}return this}remove(t){const e=this._timeline.indexOf(t);return e!==-1&&this._timeline.splice(e,1),this}get(t,e="time"){const n=this._search(t,e);return n!==-1?this._timeline[n]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(t,e="time"){const n=this._search(t,e);return n+1<this._timeline.length?this._timeline[n+1]:null}getBefore(t){const e=this._timeline.length;if(e>0&&this._timeline[e-1].time<t)return this._timeline[e-1];const n=this._search(t);return n-1>=0?this._timeline[n-1]:null}cancel(t){if(this._timeline.length>1){let e=this._search(t);if(e>=0)if(Vt(this._timeline[e].time,t)){for(let n=e;n>=0&&Vt(this._timeline[n].time,t);n--)e=n;this._timeline=this._timeline.slice(0,e)}else this._timeline=this._timeline.slice(0,e+1);else this._timeline=[]}else this._timeline.length===1&&us(this._timeline[0].time,t)&&(this._timeline=[]);return this}cancelBefore(t){const e=this._search(t);return e>=0&&(this._timeline=this._timeline.slice(e+1)),this}previousEvent(t){const e=this._timeline.indexOf(t);return e>0?this._timeline[e-1]:null}_search(t,e="time"){if(this._timeline.length===0)return-1;let n=0;const r=this._timeline.length;let i=r;if(r>0&&this._timeline[r-1][e]<=t)return r-1;for(;n<i;){let a=Math.floor(n+(i-n)/2);const o=this._timeline[a],c=this._timeline[a+1];if(Vt(o[e],t)){for(let l=a;l<this._timeline.length;l++){const u=this._timeline[l];if(Vt(u[e],t))a=l;else break}return a}else{if(Rn(o[e],t)&&Re(c[e],t))return a;Re(o[e],t)?i=a:n=a+1}}return-1}_iterate(t,e=0,n=this._timeline.length-1){this._timeline.slice(e,n+1).forEach(t)}forEach(t){return this._iterate(t),this}forEachBefore(t,e){const n=this._search(t);return n!==-1&&this._iterate(e,0,n),this}forEachAfter(t,e){const n=this._search(t);return this._iterate(e,n+1),this}forEachBetween(t,e,n){let r=this._search(t),i=this._search(e);return r!==-1&&i!==-1?(this._timeline[r].time!==t&&(r+=1),this._timeline[i].time===e&&(i-=1),this._iterate(n,r,i)):r===-1&&this._iterate(n,0,i),this}forEachFrom(t,e){let n=this._search(t);for(;n>=0&&this._timeline[n].time>=t;)n--;return this._iterate(e,n+1),this}forEachAtTime(t,e){const n=this._search(t);if(n!==-1&&Vt(this._timeline[n].time,t)){let r=n;for(let i=n;i>=0&&Vt(this._timeline[i].time,t);i--)r=i;this._iterate(i=>{e(i)},r,n)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const Si=[];function Pn(s){Si.push(s)}function _h(s){Si.forEach(t=>t(s))}const ki=[];function Fn(s){ki.push(s)}function gh(s){ki.forEach(t=>t(s))}class rn extends Qt{constructor(){super(...arguments),this.name="Emitter"}on(t,e){return t.split(/\W+/).forEach(r=>{It(this._events)&&(this._events={}),this._events.hasOwnProperty(r)||(this._events[r]=[]),this._events[r].push(e)}),this}once(t,e){const n=(...r)=>{e(...r),this.off(t,n)};return this.on(t,n),this}off(t,e){return t.split(/\W+/).forEach(r=>{if(It(this._events)&&(this._events={}),this._events.hasOwnProperty(r))if(It(e))this._events[r]=[];else{const i=this._events[r];for(let a=i.length-1;a>=0;a--)i[a]===e&&i.splice(a,1)}}),this}emit(t,...e){if(this._events&&this._events.hasOwnProperty(t)){const n=this._events[t].slice(0);for(let r=0,i=n.length;r<i;r++)n[r].apply(this,e)}return this}static mixin(t){["on","once","off","emit"].forEach(e=>{const n=Object.getOwnPropertyDescriptor(rn.prototype,e);Object.defineProperty(t.prototype,e,n)})}dispose(){return super.dispose(),this._events=void 0,this}}class Ri extends rn{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class on extends Ri{constructor(){var t,e;super(),this.name="Context",this._constants=new Map,this._timeouts=new Dt,this._timeoutIds=0,this._initialized=!1,this._closeStarted=!1,this.isOffline=!1,this._workletPromise=null;const n=L(on.getDefaults(),arguments,["context"]);n.context?(this._context=n.context,this._latencyHint=((t=arguments[0])===null||t===void 0?void 0:t.latencyHint)||""):(this._context=oh({latencyHint:n.latencyHint}),this._latencyHint=n.latencyHint),this._ticker=new uh(this.emit.bind(this,"tick"),n.clockSource,n.updateInterval,this._context.sampleRate),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this[!((e=arguments[0])===null||e===void 0)&&e.hasOwnProperty("updateInterval")?"_lookAhead":"lookAhead"]=n.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(_h(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(t,e,n){return this._context.createBuffer(t,e,n)}createChannelMerger(t){return this._context.createChannelMerger(t)}createChannelSplitter(t){return this._context.createChannelSplitter(t)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(t){return this._context.createDelay(t)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(t,e){return this._context.createIIRFilter(t,e)}createPanner(){return this._context.createPanner()}createPeriodicWave(t,e,n){return this._context.createPeriodicWave(t,e,n)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(t){return B(we(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(t)}createMediaElementSource(t){return B(we(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(t)}createMediaStreamDestination(){return B(we(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(t){return this._context.decodeAudioData(t)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(t){B(!this._initialized,"The listener cannot be set after initialization."),this._listener=t}get transport(){return this.initialize(),this._transport}set transport(t){B(!this._initialized,"The transport cannot be set after initialization."),this._transport=t}get draw(){return this.initialize(),this._draw}set draw(t){B(!this._initialized,"Draw cannot be set after initialization."),this._draw=t}get destination(){return this.initialize(),this._destination}set destination(t){B(!this._initialized,"The destination cannot be set after initialization."),this._destination=t}createAudioWorkletNode(t,e){return lh(this.rawContext,t,e)}addAudioWorkletModule(t){return lt(this,void 0,void 0,function*(){B(G(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletPromise||(this._workletPromise=this.rawContext.audioWorklet.addModule(t)),yield this._workletPromise})}workletsAreReady(){return lt(this,void 0,void 0,function*(){(yield this._workletPromise)?this._workletPromise:Promise.resolve()})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(t){this._ticker.updateInterval=t}get clockSource(){return this._ticker.type}set clockSource(t){this._ticker.type=t}get lookAhead(){return this._lookAhead}set lookAhead(t){this._lookAhead=t,this.updateInterval=t?t/2:.01}get latencyHint(){return this._latencyHint}get rawContext(){return this._context}now(){return this._context.currentTime+this._lookAhead}immediate(){return this._context.currentTime}resume(){return we(this._context)?this._context.resume():Promise.resolve()}close(){return lt(this,void 0,void 0,function*(){we(this._context)&&this.state!=="closed"&&!this._closeStarted&&(this._closeStarted=!0,yield this._context.close()),this._initialized&&gh(this)})}getConstant(t){if(this._constants.has(t))return this._constants.get(t);{const e=this._context.createBuffer(1,128,this._context.sampleRate),n=e.getChannelData(0);for(let i=0;i<n.length;i++)n[i]=t;const r=this._context.createBufferSource();return r.channelCount=1,r.channelCountMode="explicit",r.buffer=e,r.loop=!0,r.start(0),this._constants.set(t,r),r}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(t=>this._constants[t].disconnect()),this.close(),this}_timeoutLoop(){const t=this.now();this._timeouts.forEachBefore(t,e=>{e.callback(),this._timeouts.remove(e)})}setTimeout(t,e){this._timeoutIds++;const n=this.now();return this._timeouts.add({callback:t,id:this._timeoutIds,time:n+e}),this._timeoutIds}clearTimeout(t){return this._timeouts.forEach(e=>{e.id===t&&this._timeouts.remove(e)}),this}clearInterval(t){return this.clearTimeout(t)}setInterval(t,e){const n=++this._timeoutIds,r=()=>{const i=this.now();this._timeouts.add({callback:()=>{t(),r()},id:n,time:i+e})};return r(),n}}class yh extends Ri{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(t,e,n){return{}}createChannelMerger(t){return{}}createChannelSplitter(t){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(t){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(t,e){return{}}createPanner(){return{}}createPeriodicWave(t,e,n){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(t){return{}}createMediaElementSource(t){return{}}createMediaStreamDestination(){return{}}decodeAudioData(t){return Promise.resolve({})}createAudioWorkletNode(t,e){return{}}get rawContext(){return{}}addAudioWorkletModule(t){return lt(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(t,e){return 0}clearTimeout(t){return this}setInterval(t,e){return 0}clearInterval(t){return this}getConstant(t){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(t){}get destination(){return{}}set destination(t){}now(){return 0}immediate(){return 0}}function it(s,t){Ft(t)?t.forEach(e=>it(s,e)):Object.defineProperty(s,t,{enumerable:!0,writable:!1})}function xi(s,t){Ft(t)?t.forEach(e=>xi(s,e)):Object.defineProperty(s,t,{writable:!0})}const $=()=>{};class K extends Qt{constructor(){super(),this.name="ToneAudioBuffer",this.onload=$;const t=L(K.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=t.reverse,this.onload=t.onload,Zt(t.url)?this.load(t.url).catch(t.onerror):t.url&&this.set(t.url)}static getDefaults(){return{onerror:$,onload:$,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:Rt().sampleRate}set(t){return t instanceof K?t.loaded?this._buffer=t.get():t.onload=()=>{this.set(t),this.onload(this)}:this._buffer=t,this._reversed&&this._reverse(),this}get(){return this._buffer}load(t){return lt(this,void 0,void 0,function*(){const e=K.load(t).then(n=>{this.set(n),this.onload(this)});K.downloads.push(e);try{yield e}finally{const n=K.downloads.indexOf(e);K.downloads.splice(n,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(t){const e=Ft(t)&&t[0].length>0,n=e?t.length:1,r=e?t[0].length:t.length,i=Rt(),a=i.createBuffer(n,r,i.sampleRate),o=!e&&n===1?[t]:t;for(let c=0;c<n;c++)a.copyToChannel(o[c],c);return this._buffer=a,this}toMono(t){if(Ht(t))this.fromArray(this.toArray(t));else{let e=new Float32Array(this.length);const n=this.numberOfChannels;for(let r=0;r<n;r++){const i=this.toArray(r);for(let a=0;a<i.length;a++)e[a]+=i[a]}e=e.map(r=>r/n),this.fromArray(e)}return this}toArray(t){if(Ht(t))return this.getChannelData(t);if(this.numberOfChannels===1)return this.toArray(0);{const e=[];for(let n=0;n<this.numberOfChannels;n++)e[n]=this.getChannelData(n);return e}}getChannelData(t){return this._buffer?this._buffer.getChannelData(t):new Float32Array(0)}slice(t,e=this.duration){B(this.loaded,"Buffer is not loaded");const n=Math.floor(t*this.sampleRate),r=Math.floor(e*this.sampleRate);B(n<r,"The start time must be less than the end time");const i=r-n,a=Rt().createBuffer(this.numberOfChannels,i,this.sampleRate);for(let o=0;o<this.numberOfChannels;o++)a.copyToChannel(this.getChannelData(o).subarray(n,r),o);return new K(a)}_reverse(){if(this.loaded)for(let t=0;t<this.numberOfChannels;t++)this.getChannelData(t).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(t){this._reversed!==t&&(this._reversed=t,this._reverse())}static fromArray(t){return new K().fromArray(t)}static fromUrl(t){return lt(this,void 0,void 0,function*(){return yield new K().load(t)})}static load(t){return lt(this,void 0,void 0,function*(){const e=K.baseUrl===""||K.baseUrl.endsWith("/")?K.baseUrl:K.baseUrl+"/",n=yield fetch(e+t);if(!n.ok)throw new Error(`could not load url: ${t}`);const r=yield n.arrayBuffer();return yield Rt().decodeAudioData(r)})}static supportsType(t){const e=t.split("."),n=e[e.length-1];return document.createElement("audio").canPlayType("audio/"+n)!==""}static loaded(){return lt(this,void 0,void 0,function*(){for(yield Promise.resolve();K.downloads.length;)yield K.downloads[0]})}}K.baseUrl="";K.downloads=[];class Is extends on{constructor(){super({clockSource:"offline",context:gn(arguments[0])?arguments[0]:ah(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:gn(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=gn(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(t){return lt(this,void 0,void 0,function*(){let e=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,e++;const n=Math.floor(this.sampleRate/128);t&&e%n===0&&(yield new Promise(r=>setTimeout(r,1)))}})}render(){return lt(this,arguments,void 0,function*(t=!0){yield this.workletsAreReady(),yield this._renderClock(t);const e=yield this._context.startRendering();return new K(e)})}close(){return Promise.resolve()}}const Ni=new yh;let ue=Ni;function Rt(){return ue===Ni&&ch&&vh(new on),ue}function vh(s,t=!1){t&&ue.dispose(),we(s)?ue=new on(s):gn(s)?ue=new Is(s):ue=s}function Th(){return ue.resume()}if(kt&&!kt.TONE_SILENCE_LOGGING){const t=` * Tone.js v${xr} * `;console.log(`%c${t}`,"background: #000; color: #fff")}function wh(s){return Math.pow(10,s/20)}function bh(s){return 20*(Math.log(s)/Math.LN10)}function Oi(s){return Math.pow(2,s/12)}let Wn=440;function Ch(){return Wn}function Ah(s){Wn=s}function he(s){return Math.round(Ei(s))}function Ei(s){return 69+12*Math.log2(s/Wn)}function Mi(s){return Wn*Math.pow(2,(s-69)/12)}class Ds extends Qt{constructor(t,e,n){super(),this.defaultUnits="s",this._val=e,this._units=n,this.context=t,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:t=>this._frequencyToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:t=>this._ticksToUnits(parseInt(t,10)),regexp:/^(\d+)i$/i},m:{method:t=>this._beatsToUnits(parseInt(t,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(t,e)=>{const n=parseInt(t,10),r=e==="."?1.5:1;return n===1?this._beatsToUnits(this._getTimeSignature())*r:this._beatsToUnits(4/n)*r},regexp:/^(\d+)n(\.?)$/i},number:{method:t=>this._expressions[this.defaultUnits].method.call(this,t),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:t=>this._secondsToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:t=>parseInt(t,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:t=>{const e=parseInt(t,10);return this._beatsToUnits(8/(Math.floor(e)*3))},regexp:/^(\d+)t$/i},tr:{method:(t,e,n)=>{let r=0;return t&&t!=="0"&&(r+=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(r+=this._beatsToUnits(parseFloat(e))),n&&n!=="0"&&(r+=this._beatsToUnits(parseFloat(n)/4)),r},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof Ds&&this.fromType(this._val),It(this._val))return this._noArg();if(Zt(this._val)&&It(this._units)){for(const t in this._expressions)if(this._expressions[t].regexp.test(this._val.trim())){this._units=t;break}}else if(de(this._val)){let t=0;for(const e in this._val)if(G(this._val[e])){const n=this._val[e],r=new this.constructor(this.context,e).valueOf()*n;t+=r}return t}if(G(this._units)){const t=this._expressions[this._units],e=this._val.toString().trim().match(t.regexp);return e?t.method.apply(this,e.slice(1)):t.method.call(this,this._val)}else return Zt(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(t){return 1/t}_beatsToUnits(t){return 60/this._getBpm()*t}_secondsToUnits(t){return t}_ticksToUnits(t){return t*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(t){switch(this._units=void 0,this.defaultUnits){case"s":this._val=t.toSeconds();break;case"i":this._val=t.toTicks();break;case"hz":this._val=t.toFrequency();break;case"midi":this._val=t.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class Pt extends Ds{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:t=>this._now()+new this.constructor(this.context,t).valueOf(),regexp:/^\+(.+)/},quantize:{method:t=>{const e=new Pt(this.context,t).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(e))},regexp:/^@(.+)/}})}quantize(t,e=1){const n=new this.constructor(this.context,t).valueOf(),r=this.valueOf(),o=Math.round(r/n)*n-r;return r+o*e}toNotation(){const t=this.toSeconds(),e=["1m"];for(let i=1;i<9;i++){const a=Math.pow(2,i);e.push(a+"n."),e.push(a+"n"),e.push(a+"t")}e.push("0");let n=e[0],r=new Pt(this.context,e[0]).toSeconds();return e.forEach(i=>{const a=new Pt(this.context,i).toSeconds();Math.abs(a-t)<Math.abs(r-t)&&(n=i,r=a)}),n}toBarsBeatsSixteenths(){const t=this._beatsToUnits(1);let e=this.valueOf()/t;e=parseFloat(e.toFixed(4));const n=Math.floor(e/this._getTimeSignature());let r=e%1*4;e=Math.floor(e)%this._getTimeSignature();const i=r.toString();return i.length>3&&(r=parseFloat(parseFloat(i).toFixed(3))),[n,e,r].join(":")}toTicks(){const t=this._beatsToUnits(1);return this.valueOf()/t*this._getPPQ()}toSeconds(){return this.valueOf()}toMidi(){return he(this.toFrequency())}_now(){return this.context.now()}}class xt extends Pt{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return Ch()}static set A4(t){Ah(t)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(t){return this.defaultUnits==="midi"?t:xt.mtof(t)}},note:{regexp:/^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,method(t,e){const r=Sh[t.toLowerCase()]+(parseInt(e,10)+1)*12;return this.defaultUnits==="midi"?r:xt.mtof(r)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(t,e,n){let r=1;return t&&t!=="0"&&(r*=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(r*=this._beatsToUnits(parseFloat(e))),n&&n!=="0"&&(r*=this._beatsToUnits(parseFloat(n)/4)),r}}})}transpose(t){return new xt(this.context,this.valueOf()*Oi(t))}harmonize(t){return t.map(e=>this.transpose(e))}toMidi(){return he(this.valueOf())}toNote(){const t=this.toFrequency(),e=Math.log2(t/xt.A4);let n=Math.round(12*e)+57;const r=Math.floor(n/12);return r<0&&(n+=-12*r),kh[n%12]+r.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.floor(e*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(t){return t}_ticksToUnits(t){return 1/(t*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(t){return 1/super._beatsToUnits(t)}_secondsToUnits(t){return 1/t}static mtof(t){return Mi(t)}static ftom(t){return he(t)}}const Sh={cbbb:-3,cbb:-2,cb:-1,c:0,"c#":1,cx:2,"c##":2,"c###":3,"cx#":3,"c#x":3,dbbb:-1,dbb:0,db:1,d:2,"d#":3,dx:4,"d##":4,"d###":5,"dx#":5,"d#x":5,ebbb:1,ebb:2,eb:3,e:4,"e#":5,ex:6,"e##":6,"e###":7,"ex#":7,"e#x":7,fbbb:2,fbb:3,fb:4,f:5,"f#":6,fx:7,"f##":7,"f###":8,"fx#":8,"f#x":8,gbbb:4,gbb:5,gb:6,g:7,"g#":8,gx:9,"g##":9,"g###":10,"gx#":10,"g#x":10,abbb:6,abb:7,ab:8,a:9,"a#":10,ax:11,"a##":11,"a###":12,"ax#":12,"a#x":12,bbbb:8,bbb:9,bb:10,b:11,"b#":12,bx:13,"b##":13,"b###":14,"bx#":14,"b#x":14},kh=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];class Ue extends Pt{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}class pt extends Qt{constructor(){super();const t=L(pt.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=t.context}static getDefaults(){return{context:Rt()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(t){return rh(t),new Pt(this.context,t).toSeconds()}toFrequency(t){return new xt(this.context,t).toFrequency()}toTicks(t){return new Ue(this.context,t).toTicks()}_getPartialProperties(t){const e=this.get();return Object.keys(e).forEach(n=>{It(t[n])&&delete e[n]}),e}get(){const t=fh(this);return Object.keys(t).forEach(e=>{if(Reflect.has(this,e)){const n=this[e];G(n)&&G(n.value)&&G(n.setValueAtTime)?t[e]=n.value:n instanceof pt?t[e]=n._getPartialProperties(t[e]):Ft(n)||Ht(n)||Zt(n)||wi(n)?t[e]=n:delete t[e]}}),t}set(t){return Object.keys(t).forEach(e=>{Reflect.has(this,e)&&G(this[e])&&(this[e]&&G(this[e].value)&&G(this[e].setValueAtTime)?this[e].value!==t[e]&&(this[e].value=t[e]):this[e]instanceof pt?this[e].set(t[e]):this[e]=t[e])}),this}}class qn extends Dt{constructor(t="stopped"){super(),this.name="StateTimeline",this._initial=t,this.setStateAtTime(this._initial,0)}getValueAtTime(t){const e=this.get(t);return e!==null?e.state:this._initial}setStateAtTime(t,e,n){return se(e,0),this.add(Object.assign({},n,{state:t,time:e})),this}getLastState(t,e){const n=this._search(e);for(let r=n;r>=0;r--){const i=this._timeline[r];if(i.state===t)return i}}getNextState(t,e){const n=this._search(e);if(n!==-1)for(let r=n;r<this._timeline.length;r++){const i=this._timeline[r];if(i.state===t)return i}}}class nt extends pt{constructor(){const t=L(nt.getDefaults(),arguments,["param","units","convert"]);for(super(t),this.name="Param",this.overridden=!1,this._minOutput=1e-7,B(G(t.param)&&(me(t.param)||t.param instanceof nt),"param must be an AudioParam");!me(t.param);)t.param=t.param._param;this._swappable=G(t.swappable)?t.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=t.param,this.input.connect(this._param)):this._param=this.input=t.param,this._events=new Dt(1e3),this._initialValue=this._param.defaultValue,this.units=t.units,this.convert=t.convert,this._minValue=t.minValue,this._maxValue=t.maxValue,G(t.value)&&t.value!==this._toType(this._initialValue)&&this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(pt.getDefaults(),{convert:!0,units:"number"})}get value(){const t=this.now();return this.getValueAtTime(t)}set value(t){this.cancelScheduledValues(this.now()),this.setValueAtTime(t,this.now())}get minValue(){return G(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return G(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(t,e){return this.units===e}_assertRange(t){return G(this.maxValue)&&G(this.minValue)&&se(t,this._fromType(this.minValue),this._fromType(this.maxValue)),t}_fromType(t){return this.convert&&!this.overridden?this._is(t,"time")?this.toSeconds(t):this._is(t,"decibels")?wh(t):this._is(t,"frequency")?this.toFrequency(t):t:this.overridden?0:t}_toType(t){return this.convert&&this.units==="decibels"?bh(t):t}setValueAtTime(t,e){const n=this.toSeconds(e),r=this._fromType(t);return B(isFinite(r)&&isFinite(n),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(r),this.log(this.units,"setValueAtTime",t,n),this._events.add({time:n,type:"setValueAtTime",value:r}),this._param.setValueAtTime(r,n),this}getValueAtTime(t){const e=Math.max(this.toSeconds(t),0),n=this._events.getAfter(e),r=this._events.get(e);let i=this._initialValue;if(r===null)i=this._initialValue;else if(r.type==="setTargetAtTime"&&(n===null||n.type==="setValueAtTime")){const a=this._events.getBefore(r.time);let o;a===null?o=this._initialValue:o=a.value,r.type==="setTargetAtTime"&&(i=this._exponentialApproach(r.time,o,r.value,r.constant,e))}else if(n===null)i=r.value;else if(n.type==="linearRampToValueAtTime"||n.type==="exponentialRampToValueAtTime"){let a=r.value;if(r.type==="setTargetAtTime"){const o=this._events.getBefore(r.time);o===null?a=this._initialValue:a=o.value}n.type==="linearRampToValueAtTime"?i=this._linearInterpolate(r.time,a,n.time,n.value,e):i=this._exponentialInterpolate(r.time,a,n.time,n.value,e)}else i=r.value;return this._toType(i)}setRampPoint(t){t=this.toSeconds(t);let e=this.getValueAtTime(t);return this.cancelAndHoldAtTime(t),this._fromType(e)===0&&(e=this._toType(this._minOutput)),this.setValueAtTime(e,t),this}linearRampToValueAtTime(t,e){const n=this._fromType(t),r=this.toSeconds(e);return B(isFinite(n)&&isFinite(r),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(n),this._events.add({time:r,type:"linearRampToValueAtTime",value:n}),this.log(this.units,"linearRampToValueAtTime",t,r),this._param.linearRampToValueAtTime(n,r),this}exponentialRampToValueAtTime(t,e){let n=this._fromType(t);n=Vt(n,0)?this._minOutput:n,this._assertRange(n);const r=this.toSeconds(e);return B(isFinite(n)&&isFinite(r),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({time:r,type:"exponentialRampToValueAtTime",value:n}),this.log(this.units,"exponentialRampToValueAtTime",t,r),this._param.exponentialRampToValueAtTime(n,r),this}exponentialRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialRampToValueAtTime(t,n+this.toSeconds(e)),this}linearRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.linearRampToValueAtTime(t,n+this.toSeconds(e)),this}targetRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialApproachValueAtTime(t,n,e),this}exponentialApproachValueAtTime(t,e,n){e=this.toSeconds(e),n=this.toSeconds(n);const r=Math.log(n+1)/Math.log(200);return this.setTargetAtTime(t,e,r),this.cancelAndHoldAtTime(e+n*.9),this.linearRampToValueAtTime(t,e+n),this}setTargetAtTime(t,e,n){const r=this._fromType(t);B(isFinite(n)&&n>0,"timeConstant must be a number greater than 0");const i=this.toSeconds(e);return this._assertRange(r),B(isFinite(r)&&isFinite(i),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({constant:n,time:i,type:"setTargetAtTime",value:r}),this.log(this.units,"setTargetAtTime",t,i,n),this._param.setTargetAtTime(r,i,n),this}setValueCurveAtTime(t,e,n,r=1){n=this.toSeconds(n),e=this.toSeconds(e);const i=this._fromType(t[0])*r;this.setValueAtTime(this._toType(i),e);const a=n/(t.length-1);for(let o=1;o<t.length;o++){const c=this._fromType(t[o])*r;this.linearRampToValueAtTime(this._toType(c),e+o*a)}return this}cancelScheduledValues(t){const e=this.toSeconds(t);return B(isFinite(e),`Invalid argument to cancelScheduledValues: ${JSON.stringify(t)}`),this._events.cancel(e),this._param.cancelScheduledValues(e),this.log(this.units,"cancelScheduledValues",e),this}cancelAndHoldAtTime(t){const e=this.toSeconds(t),n=this._fromType(this.getValueAtTime(e));B(isFinite(e),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(t)}`),this.log(this.units,"cancelAndHoldAtTime",e,"value="+n);const r=this._events.get(e),i=this._events.getAfter(e);return r&&Vt(r.time,e)?i?(this._param.cancelScheduledValues(i.time),this._events.cancel(i.time)):(this._param.cancelAndHoldAtTime(e),this._events.cancel(e+this.sampleTime)):i&&(this._param.cancelScheduledValues(i.time),this._events.cancel(i.time),i.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(n),e):i.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(n),e)),this._events.add({time:e,type:"setValueAtTime",value:n}),this._param.setValueAtTime(n,e),this}rampTo(t,e=.1,n){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(t,e,n):this.linearRampTo(t,e,n),this}apply(t){const e=this.context.currentTime;t.setValueAtTime(this.getValueAtTime(e),e);const n=this._events.get(e);if(n&&n.type==="setTargetAtTime"){const r=this._events.getAfter(n.time),i=r?r.time:e+2,a=(i-e)/10;for(let o=e;o<i;o+=a)t.linearRampToValueAtTime(this.getValueAtTime(o),o)}return this._events.forEachAfter(this.context.currentTime,r=>{r.type==="cancelScheduledValues"?t.cancelScheduledValues(r.time):r.type==="setTargetAtTime"?t.setTargetAtTime(r.value,r.time,r.constant):t[r.type](r.value,r.time)}),this}setParam(t){B(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const e=this.input;return e.disconnect(this._param),this.apply(t),this._param=t,e.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(t,e,n,r,i){return n+(e-n)*Math.exp(-(i-t)/r)}_linearInterpolate(t,e,n,r,i){return e+(r-e)*((i-t)/(n-t))}_exponentialInterpolate(t,e,n,r,i){return e*Math.pow(r/e,(i-t)/(n-t))}}class U extends pt{constructor(){super(...arguments),this._internalChannels=[]}get numberOfInputs(){return G(this.input)?me(this.input)||this.input instanceof nt?1:this.input.numberOfInputs:0}get numberOfOutputs(){return G(this.output)?this.output.numberOfOutputs:0}_isAudioNode(t){return G(t)&&(t instanceof U||ne(t))}_getInternalNodes(){const t=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&t.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&t.push(this.output),t}_setChannelProperties(t){this._getInternalNodes().forEach(n=>{n.channelCount=t.channelCount,n.channelCountMode=t.channelCountMode,n.channelInterpretation=t.channelInterpretation})}_getChannelProperties(){const t=this._getInternalNodes();B(t.length>0,"ToneAudioNode does not have any internal nodes");const e=t[0];return{channelCount:e.channelCount,channelCountMode:e.channelCountMode,channelInterpretation:e.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCount:t}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCountMode:t}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelInterpretation:t}))}connect(t,e=0,n=0){return We(this,t,e,n),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return Es("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(t,e=0,n=0){return Rh(this,t,e,n),this}chain(...t){return hs(this,...t),this}fan(...t){return t.forEach(e=>this.connect(e)),this}dispose(){return super.dispose(),G(this.input)&&(this.input instanceof U?this.input.dispose():ne(this.input)&&this.input.disconnect()),G(this.output)&&(this.output instanceof U?this.output.dispose():ne(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function hs(...s){const t=s.shift();s.reduce((e,n)=>(e instanceof U?e.connect(n):ne(e)&&We(e,n),n),t)}function We(s,t,e=0,n=0){for(B(G(s),"Cannot connect from undefined node"),B(G(t),"Cannot connect to undefined node"),(t instanceof U||ne(t))&&B(t.numberOfInputs>0,"Cannot connect to node with no inputs"),B(s.numberOfOutputs>0,"Cannot connect from node with no outputs");t instanceof U||t instanceof nt;)G(t.input)&&(t=t.input);for(;s instanceof U;)G(s.output)&&(s=s.output);me(t)?s.connect(t,e):s.connect(t,e,n)}function Rh(s,t,e=0,n=0){if(G(t))for(;t instanceof U;)t=t.input;for(;!ne(s);)G(s.output)&&(s=s.output);me(t)?s.disconnect(t,e):ne(t)?s.disconnect(t,e,n):s.disconnect()}class _t extends U{constructor(){const t=L(_t.getDefaults(),arguments,["gain","units"]);super(t),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode,this.gain=new nt({context:this.context,convert:t.convert,param:this._gainNode.gain,units:t.units,value:t.gain,minValue:t.minValue,maxValue:t.maxValue}),it(this,"gain")}static getDefaults(){return Object.assign(U.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class xe extends U{constructor(t){super(t),this.onended=$,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new _t({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(e){const n=this.toSeconds(e);return this._startTime!==-1&&n>=this._startTime&&(this._stopTime===-1||n<=this._stopTime)?"started":"stopped"},this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut,this._curve=t.curve,this.onended=t.onended}static getDefaults(){return Object.assign(U.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:$})}_startGain(t,e=1){B(this._startTime===-1,"Source cannot be started more than once");const n=this.toSeconds(this._fadeIn);return this._startTime=t+n,this._startTime=Math.max(this._startTime,this.context.currentTime),n>0?(this._gainNode.gain.setValueAtTime(0,t),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(e,t+n):this._gainNode.gain.exponentialApproachValueAtTime(e,t,n)):this._gainNode.gain.setValueAtTime(e,t),this}stop(t){return this.log("stop",t),this._stopGain(this.toSeconds(t)),this}_stopGain(t){B(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const e=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(t)+e,this._stopTime=Math.max(this._stopTime,this.now()),e>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,e,t):this._gainNode.gain.targetRampTo(0,e,t):(this._gainNode.gain.cancelAndHoldAtTime(t),this._gainNode.gain.setValueAtTime(0,t)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const n=this._curve==="exponential"?e*2:0;this._stopSource(this.now()+n),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==$&&(this.onended(this),this.onended=$,!this.context.isOffline)){const t=()=>this.dispose();typeof requestIdleCallback<"u"?requestIdleCallback(t):setTimeout(t,10)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),B(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.dispose(),this.onended=$,this}}class Vs extends xe{constructor(){const t=L(Vs.getDefaults(),arguments,["offset"]);super(t),this.name="ToneConstantSource",this._source=this.context.createConstantSource(),We(this._source,this._gainNode),this.offset=new nt({context:this.context,convert:t.convert,param:this._source.offset,units:t.units,value:t.offset,minValue:t.minValue,maxValue:t.maxValue})}static getDefaults(){return Object.assign(xe.getDefaults(),{convert:!0,offset:1,units:"number"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._source.start(e),this}_stopSource(t){this._source.stop(t)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class ft extends U{constructor(){const t=L(ft.getDefaults(),arguments,["value","units"]);super(t),this.name="Signal",this.override=!0,this.output=this._constantSource=new Vs({context:this.context,convert:t.convert,offset:t.value,units:t.units,minValue:t.minValue,maxValue:t.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(U.getDefaults(),{convert:!0,units:"number",value:0})}connect(t,e=0,n=0){return Ps(this,t,e,n),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(t,e){return this._param.setValueAtTime(t,e),this}getValueAtTime(t){return this._param.getValueAtTime(t)}setRampPoint(t){return this._param.setRampPoint(t),this}linearRampToValueAtTime(t,e){return this._param.linearRampToValueAtTime(t,e),this}exponentialRampToValueAtTime(t,e){return this._param.exponentialRampToValueAtTime(t,e),this}exponentialRampTo(t,e,n){return this._param.exponentialRampTo(t,e,n),this}linearRampTo(t,e,n){return this._param.linearRampTo(t,e,n),this}targetRampTo(t,e,n){return this._param.targetRampTo(t,e,n),this}exponentialApproachValueAtTime(t,e,n){return this._param.exponentialApproachValueAtTime(t,e,n),this}setTargetAtTime(t,e,n){return this._param.setTargetAtTime(t,e,n),this}setValueCurveAtTime(t,e,n,r){return this._param.setValueCurveAtTime(t,e,n,r),this}cancelScheduledValues(t){return this._param.cancelScheduledValues(t),this}cancelAndHoldAtTime(t){return this._param.cancelAndHoldAtTime(t),this}rampTo(t,e,n){return this._param.rampTo(t,e,n),this}get value(){return this._param.value}set value(t){this._param.value=t}get convert(){return this._param.convert}set convert(t){this._param.convert=t}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(t){this._param.overridden=t}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(t){return this._param.apply(t),this}}function Ps(s,t,e,n){(t instanceof nt||me(t)||t instanceof ft&&t.override)&&(t.cancelScheduledValues(0),t.setValueAtTime(0,0),t instanceof ft&&(t.overridden=!0)),We(s,t,e,n)}class Fs extends nt{constructor(){const t=L(Fs.getDefaults(),arguments,["value"]);super(t),this.name="TickParam",this._events=new Dt(1/0),this._multiplier=1,this._multiplier=t.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(t.value)}),this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(nt.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(t,e,n){e=this.toSeconds(e),this.setRampPoint(e);const r=this._fromType(t),i=this._events.get(e),a=Math.round(Math.max(1/n,1));for(let o=0;o<=a;o++){const c=n*o+e,l=this._exponentialApproach(i.time,i.value,r,n,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}setValueAtTime(t,e){const n=this.toSeconds(e);super.setValueAtTime(t,e);const r=this._events.get(n),i=this._events.previousEvent(r),a=this._getTicksUntilEvent(i,n);return r.ticks=Math.max(a,0),this}linearRampToValueAtTime(t,e){const n=this.toSeconds(e);super.linearRampToValueAtTime(t,e);const r=this._events.get(n),i=this._events.previousEvent(r),a=this._getTicksUntilEvent(i,n);return r.ticks=Math.max(a,0),this}exponentialRampToValueAtTime(t,e){e=this.toSeconds(e);const n=this._fromType(t),r=this._events.get(e),i=Math.round(Math.max((e-r.time)*10,1)),a=(e-r.time)/i;for(let o=0;o<=i;o++){const c=a*o+r.time,l=this._exponentialInterpolate(r.time,r.value,e,n,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}_getTicksUntilEvent(t,e){if(t===null)t={ticks:0,time:0,type:"setValueAtTime",value:0};else if(It(t.ticks)){const a=this._events.previousEvent(t);t.ticks=this._getTicksUntilEvent(a,t.time)}const n=this._fromType(this.getValueAtTime(t.time));let r=this._fromType(this.getValueAtTime(e));const i=this._events.get(e);return i&&i.time===e&&i.type==="setValueAtTime"&&(r=this._fromType(this.getValueAtTime(e-this.sampleTime))),.5*(e-t.time)*(n+r)+t.ticks}getTicksAtTime(t){const e=this.toSeconds(t),n=this._events.get(e);return Math.max(this._getTicksUntilEvent(n,e),0)}getDurationOfTicks(t,e){const n=this.toSeconds(e),r=this.getTicksAtTime(e);return this.getTimeOfTick(r+t)-n}getTimeOfTick(t){const e=this._events.get(t,"ticks"),n=this._events.getAfter(t,"ticks");if(e&&e.ticks===t)return e.time;if(e&&n&&n.type==="linearRampToValueAtTime"&&e.value!==n.value){const r=this._fromType(this.getValueAtTime(e.time)),a=(this._fromType(this.getValueAtTime(n.time))-r)/(n.time-e.time),o=Math.sqrt(Math.pow(r,2)-2*a*(e.ticks-t)),c=(-r+o)/a,l=(-r-o)/a;return(c>0?c:l)+e.time}else return e?e.value===0?1/0:e.time+(t-e.ticks)/e.value:t/this._initialValue}ticksToTime(t,e){return this.getDurationOfTicks(t,e)}timeToTicks(t,e){const n=this.toSeconds(e),r=this.toSeconds(t),i=this.getTicksAtTime(n);return this.getTicksAtTime(n+r)-i}_fromType(t){return this.units==="bpm"&&this.multiplier?1/(60/t/this.multiplier):super._fromType(t)}_toType(t){return this.units==="bpm"&&this.multiplier?t/this.multiplier*60:super._toType(t)}get multiplier(){return this._multiplier}set multiplier(t){const e=this.value;this._multiplier=t,this.cancelScheduledValues(0),this.setValueAtTime(e,0)}}class Ws extends ft{constructor(){const t=L(Ws.getDefaults(),arguments,["value"]);super(t),this.name="TickSignal",this.input=this._param=new Fs({context:this.context,convert:t.convert,multiplier:t.multiplier,param:this._constantSource.offset,units:t.units,value:t.value})}static getDefaults(){return Object.assign(ft.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(t,e){return this._param.ticksToTime(t,e)}timeToTicks(t,e){return this._param.timeToTicks(t,e)}getTimeOfTick(t){return this._param.getTimeOfTick(t)}getDurationOfTicks(t,e){return this._param.getDurationOfTicks(t,e)}getTicksAtTime(t){return this._param.getTicksAtTime(t)}get multiplier(){return this._param.multiplier}set multiplier(t){this._param.multiplier=t}dispose(){return super.dispose(),this._param.dispose(),this}}class qs extends pt{constructor(){const t=L(qs.getDefaults(),arguments,["frequency"]);super(t),this.name="TickSource",this._state=new qn,this._tickOffset=new Dt,this._ticksAtTime=new Dt,this._secondsAtTime=new Dt,this.frequency=new Ws({context:this.context,units:t.units,value:t.frequency}),it(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},pt.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(t,e){const n=this.toSeconds(t);return this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),G(e)&&this.setTicksAtTime(e,n),this._ticksAtTime.cancel(n),this._secondsAtTime.cancel(n)),this}stop(t){const e=this.toSeconds(t);if(this._state.getValueAtTime(e)==="stopped"){const n=this._state.get(e);n&&n.time>0&&(this._tickOffset.cancel(n.time),this._state.cancel(n.time))}return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this.setTicksAtTime(0,e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e)),this}cancel(t){return t=this.toSeconds(t),this._state.cancel(t),this._tickOffset.cancel(t),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t),this}getTicksAtTime(t){const e=this.toSeconds(t),n=this._state.getLastState("stopped",e),r=this._ticksAtTime.get(e),i={state:"paused",time:e};this._state.add(i);let a=r||n,o=r?r.ticks:0,c=null;return this._state.forEachBetween(a.time,e+this.sampleTime,l=>{let u=a.time;const h=this._tickOffset.get(l.time);h&&h.time>=a.time&&(o=h.ticks,u=h.time),a.state==="started"&&l.state!=="started"&&(o+=this.frequency.getTicksAtTime(l.time)-this.frequency.getTicksAtTime(u),l.time!==i.time&&(c={state:l.state,time:l.time,ticks:o})),a=l}),this._state.remove(i),c&&this._ticksAtTime.add(c),o}get ticks(){return this.getTicksAtTime(this.now())}set ticks(t){this.setTicksAtTime(t,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(t){const e=this.now(),n=this.frequency.timeToTicks(t,e);this.setTicksAtTime(n,e)}getSecondsAtTime(t){t=this.toSeconds(t);const e=this._state.getLastState("stopped",t),n={state:"paused",time:t};this._state.add(n);const r=this._secondsAtTime.get(t);let i=r||e,a=r?r.seconds:0,o=null;return this._state.forEachBetween(i.time,t+this.sampleTime,c=>{let l=i.time;const u=this._tickOffset.get(c.time);u&&u.time>=i.time&&(a=u.seconds,l=u.time),i.state==="started"&&c.state!=="started"&&(a+=c.time-l,c.time!==n.time&&(o={state:c.state,time:c.time,seconds:a})),i=c}),this._state.remove(n),o&&this._secondsAtTime.add(o),a}setTicksAtTime(t,e){return e=this.toSeconds(e),this._tickOffset.cancel(e),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(t,e),ticks:t,time:e}),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}getStateAtTime(t){return t=this.toSeconds(t),this._state.getValueAtTime(t)}getTimeOfTick(t,e=this.now()){const n=this._tickOffset.get(e),r=this._state.get(e),i=Math.max(n.time,r.time),a=this.frequency.getTicksAtTime(i)+t-n.ticks;return this.frequency.getTimeOfTick(a)}forEachTickBetween(t,e,n){let r=this._state.get(t);this._state.forEachBetween(t,e,a=>{r&&r.state==="started"&&a.state!=="started"&&this.forEachTickBetween(Math.max(r.time,t),a.time-this.sampleTime,n),r=a});let i=null;if(r&&r.state==="started"){const a=Math.max(r.time,t),o=this.frequency.getTicksAtTime(a),c=this.frequency.getTicksAtTime(r.time),l=o-c;let u=Math.ceil(l)-l;u=Vt(u,1)?0:u;let h=this.frequency.getTimeOfTick(o+u);for(;h<e;){try{n(h,Math.round(this.getTicksAtTime(h)))}catch(p){i=p;break}h+=this.frequency.getDurationOfTicks(1,h)}}if(i)throw i;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this._ticksAtTime.dispose(),this._secondsAtTime.dispose(),this.frequency.dispose(),this}}class Ln extends pt{constructor(){const t=L(Ln.getDefaults(),arguments,["callback","frequency"]);super(t),this.name="Clock",this.callback=$,this._lastUpdate=0,this._state=new qn("stopped"),this._boundLoop=this._loop.bind(this),this.callback=t.callback,this._tickSource=new qs({context:this.context,frequency:t.frequency,units:t.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,it(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(pt.getDefaults(),{callback:$,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(t,e){bi(this.context);const n=this.toSeconds(t);return this.log("start",n),this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),this._tickSource.start(n,e),n<this._lastUpdate&&this.emit("start",n,e)),this}stop(t){const e=this.toSeconds(t);return this.log("stop",e),this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._tickSource.stop(e),e<this._lastUpdate&&this.emit("stop",e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._tickSource.pause(e),e<this._lastUpdate&&this.emit("pause",e)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(t){this._tickSource.ticks=t}get seconds(){return this._tickSource.seconds}set seconds(t){this._tickSource.seconds=t}getSecondsAtTime(t){return this._tickSource.getSecondsAtTime(t)}setTicksAtTime(t,e){return this._tickSource.setTicksAtTime(t,e),this}getTimeOfTick(t,e=this.now()){return this._tickSource.getTimeOfTick(t,e)}getTicksAtTime(t){return this._tickSource.getTicksAtTime(t)}nextTickTime(t,e){const n=this.toSeconds(e),r=this.getTicksAtTime(n);return this._tickSource.getTimeOfTick(r+t,n)}_loop(){const t=this._lastUpdate,e=this.now();this._lastUpdate=e,this.log("loop",t,e),t!==e&&(this._state.forEachBetween(t,e,n=>{switch(n.state){case"started":const r=this._tickSource.getTicksAtTime(n.time);this.emit("start",n.time,r);break;case"stopped":n.time!==0&&this.emit("stop",n.time);break;case"paused":this.emit("pause",n.time);break}}),this._tickSource.forEachTickBetween(t,e,(n,r)=>{this.callback(n,r)}))}getStateAtTime(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}rn.mixin(Ln);class qe extends U{constructor(){const t=L(qe.getDefaults(),arguments,["volume"]);super(t),this.name="Volume",this.input=this.output=new _t({context:this.context,gain:t.volume,units:"decibels"}),this.volume=this.output.gain,it(this,"volume"),this._unmutedVolume=t.volume,this.mute=t.mute}static getDefaults(){return Object.assign(U.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(t){!this.mute&&t?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!t&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class Ls extends U{constructor(){const t=L(Ls.getDefaults(),arguments);super(t),this.name="Destination",this.input=new qe({context:this.context}),this.output=new _t({context:this.context}),this.volume=this.input.volume,hs(this.input,this.output,this.context.rawContext.destination),this.mute=t.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(U.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(t){this.input.mute=t}chain(...t){return this.input.disconnect(),t.unshift(this.input),t.push(this.output),hs(...t),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}Pn(s=>{s.destination=new Ls({context:s})});Fn(s=>{s.destination.dispose()});class xh extends U{constructor(){super(...arguments),this.name="Listener",this.positionX=new nt({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new nt({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new nt({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new nt({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new nt({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new nt({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new nt({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new nt({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new nt({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(U.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}Pn(s=>{s.listener=new xh({context:s})});Fn(s=>{s.listener.dispose()});class Bs extends Qt{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const t=L(Bs.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=t.baseUrl,Object.keys(t.urls).forEach(e=>{this._loadingCount++;const n=t.urls[e];this.add(e,n,this._bufferLoaded.bind(this,t.onload),t.onerror)})}static getDefaults(){return{baseUrl:"",onerror:$,onload:$,urls:{}}}has(t){return this._buffers.has(t.toString())}get(t){return B(this.has(t),`ToneAudioBuffers has no buffer named: ${t}`),this._buffers.get(t.toString())}_bufferLoaded(t){this._loadingCount--,this._loadingCount===0&&t&&t()}get loaded(){return Array.from(this._buffers).every(([t,e])=>e.loaded)}add(t,e,n=$,r=$){return Zt(e)?(this.baseUrl&&e.trim().substring(0,11).toLowerCase()==="data:audio/"&&(this.baseUrl=""),this._buffers.set(t.toString(),new K(this.baseUrl+e,n,r))):this._buffers.set(t.toString(),new K(e,n,r)),this}dispose(){return super.dispose(),this._buffers.forEach(t=>t.dispose()),this._buffers.clear(),this}}class js extends xt{constructor(){super(...arguments),this.name="MidiClass",this.defaultUnits="midi"}_frequencyToUnits(t){return he(super._frequencyToUnits(t))}_ticksToUnits(t){return he(super._ticksToUnits(t))}_beatsToUnits(t){return he(super._beatsToUnits(t))}_secondsToUnits(t){return he(super._secondsToUnits(t))}toMidi(){return this.valueOf()}toFrequency(){return Mi(this.toMidi())}transpose(t){return new js(this.context,this.toMidi()+t)}}function Nh(s,t){return new js(Rt(),s,t)}class Mt extends Ue{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(t){return this._getPPQ()*t}_secondsToUnits(t){return Math.floor(t/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(t){return t}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}class Oh extends pt{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new Dt,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(t,e){return this._events.add({callback:t,time:this.toSeconds(e)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(t){return this._events.cancel(this.toSeconds(t)),this}_drawLoop(){const t=this.context.currentTime;this._events.forEachBefore(t+this.anticipation,e=>{t-e.time<=this.expiration&&e.callback(),this._events.remove(e)}),this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}Pn(s=>{s.draw=new Oh({context:s})});Fn(s=>{s.draw.dispose()});class Eh extends Qt{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(t){B(G(t.time),"Events must have a time property"),B(G(t.duration),"Events must have a duration parameter"),t.time=t.time.valueOf();let e=new Mh(t.time,t.time+t.duration,t);for(this._root===null?this._root=e:this._root.insert(e),this._length++;e!==null;)e.updateHeight(),e.updateMax(),this._rebalance(e),e=e.parent;return this}remove(t){if(this._root!==null){const e=[];this._root.search(t.time,e);for(const n of e)if(n.event===t){this._removeNode(n),this._length--;break}}return this}get length(){return this._length}cancel(t){return this.forEachFrom(t,e=>this.remove(e)),this}_setRoot(t){this._root=t,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(t,e){t.parent!==null?(t.isLeftChild()?t.parent.left=e:t.parent.right=e,this._rebalance(t.parent)):this._setRoot(e)}_removeNode(t){if(t.left===null&&t.right===null)this._replaceNodeInParent(t,null);else if(t.right===null)this._replaceNodeInParent(t,t.left);else if(t.left===null)this._replaceNodeInParent(t,t.right);else{const e=t.getBalance();let n,r=null;if(e>0)if(t.left.right===null)n=t.left,n.right=t.right,r=n;else{for(n=t.left.right;n.right!==null;)n=n.right;n.parent&&(n.parent.right=n.left,r=n.parent,n.left=t.left,n.right=t.right)}else if(t.right.left===null)n=t.right,n.left=t.left,r=n;else{for(n=t.right.left;n.left!==null;)n=n.left;n.parent&&(n.parent.left=n.right,r=n.parent,n.left=t.left,n.right=t.right)}t.parent!==null?t.isLeftChild()?t.parent.left=n:t.parent.right=n:this._setRoot(n),r&&this._rebalance(r)}t.dispose()}_rotateLeft(t){const e=t.parent,n=t.isLeftChild(),r=t.right;r&&(t.right=r.left,r.left=t),e!==null?n?e.left=r:e.right=r:this._setRoot(r)}_rotateRight(t){const e=t.parent,n=t.isLeftChild(),r=t.left;r&&(t.left=r.right,r.right=t),e!==null?n?e.left=r:e.right=r:this._setRoot(r)}_rebalance(t){const e=t.getBalance();e>1&&t.left?t.left.getBalance()<0?this._rotateLeft(t.left):this._rotateRight(t):e<-1&&t.right&&(t.right.getBalance()>0?this._rotateRight(t.right):this._rotateLeft(t))}get(t){if(this._root!==null){const e=[];if(this._root.search(t,e),e.length>0){let n=e[0];for(let r=1;r<e.length;r++)e[r].low>n.low&&(n=e[r]);return n.event}}return null}forEach(t){if(this._root!==null){const e=[];this._root.traverse(n=>e.push(n)),e.forEach(n=>{n.event&&t(n.event)})}return this}forEachAtTime(t,e){if(this._root!==null){const n=[];this._root.search(t,n),n.forEach(r=>{r.event&&e(r.event)})}return this}forEachFrom(t,e){if(this._root!==null){const n=[];this._root.searchAfter(t,n),n.forEach(r=>{r.event&&e(r.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(t=>t.dispose()),this._root=null,this}}class Mh{constructor(t,e,n){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=n,this.low=t,this.high=e,this.max=this.high}insert(t){t.low<=this.low?this.left===null?this.left=t:this.left.insert(t):this.right===null?this.right=t:this.right.insert(t)}search(t,e){t>this.max||(this.left!==null&&this.left.search(t,e),this.low<=t&&this.high>t&&e.push(this),!(this.low>t)&&this.right!==null&&this.right.search(t,e))}searchAfter(t,e){this.low>=t&&(e.push(this),this.left!==null&&this.left.searchAfter(t,e)),this.right!==null&&this.right.searchAfter(t,e)}traverse(t){t(this),this.left!==null&&this.left.traverse(t),this.right!==null&&this.right.traverse(t)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let t=0;return this.left!==null&&this.right!==null?t=this.left.height-this.right.height:this.left!==null?t=this.left.height+1:this.right!==null&&(t=-(this.right.height+1)),t}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(t){this._left=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(t){this._right=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class Ih extends Qt{constructor(t){super(),this.name="TimelineValue",this._timeline=new Dt({memory:10}),this._initialValue=t}set(t,e){return this._timeline.add({value:t,time:e}),this}get(t){const e=this._timeline.get(t);return e?e.value:this._initialValue}}class Ne extends U{constructor(){super(L(Ne.getDefaults(),arguments,["context"]))}connect(t,e=0,n=0){return Ps(this,t,e,n),this}}class an extends Ne{constructor(){const t=L(an.getDefaults(),arguments,["mapping","length"]);super(t),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper,Ft(t.mapping)||t.mapping instanceof Float32Array?this.curve=Float32Array.from(t.mapping):sh(t.mapping)&&this.setMap(t.mapping,t.length)}static getDefaults(){return Object.assign(ft.getDefaults(),{length:1024})}setMap(t,e=1024){const n=new Float32Array(e);for(let r=0,i=e;r<i;r++){const a=r/(i-1)*2-1;n[r]=t(a,r)}return this.curve=n,this}get curve(){return this._shaper.curve}set curve(t){this._shaper.curve=t}get oversample(){return this._shaper.oversample}set oversample(t){const e=["none","2x","4x"].some(n=>n.includes(t));B(e,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class Us extends Ne{constructor(){const t=L(Us.getDefaults(),arguments,["value"]);super(t),this.name="Pow",this._exponentScaler=this.input=this.output=new an({context:this.context,mapping:this._expFunc(t.value),length:8192}),this._exponent=t.value}static getDefaults(){return Object.assign(Ne.getDefaults(),{value:1})}_expFunc(t){return e=>Math.pow(Math.abs(e),t)}get value(){return this._exponent}set value(t){this._exponent=t,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class re{constructor(t,e){this.id=re._eventId++,this._remainderTime=0;const n=Object.assign(re.getDefaults(),e);this.transport=t,this.callback=n.callback,this._once=n.once,this.time=Math.floor(n.time),this._remainderTime=n.time-this.time}static getDefaults(){return{callback:$,once:!1,time:0}}get floatTime(){return this.time+this._remainderTime}invoke(t){if(this.callback){const e=this.transport.bpm.getDurationOfTicks(1,t);this.callback(t+this._remainderTime*e),this._once&&this.transport.clear(this.id)}}dispose(){return this.callback=void 0,this}}re._eventId=0;class zs extends re{constructor(t,e){super(t,e),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const n=Object.assign(zs.getDefaults(),e);this.duration=n.duration,this._interval=n.interval,this._nextTick=n.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.transport.on("ticks",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},re.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(t){this._createEvents(t),super.invoke(t)}_createEvent(){return Rn(this._nextTick,this.floatTime+this.duration)?this.transport.scheduleOnce(this.invoke.bind(this),new Mt(this.context,this._nextTick).toSeconds()):-1}_createEvents(t){Rn(this._nextTick+this._interval,this.floatTime+this.duration)&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new Mt(this.context,this._nextTick).toSeconds()))}_restart(t){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.floatTime;const e=this.transport.getTicksAtTime(t);Re(e,this.time)&&(this._nextTick=this.floatTime+Math.ceil((e-this.floatTime)/this._interval)*this._interval),this._currentId=this._createEvent(),this._nextTick+=this._interval,this._nextId=this._createEvent()}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this.transport.off("ticks",this._boundRestart),this}}class Bn extends pt{constructor(){const t=L(Bn.getDefaults(),arguments);super(t),this.name="Transport",this._loop=new Ih(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new Dt,this._repeatedEvents=new Eh,this._syncedSignals=[],this._swingAmount=0,this._ppq=t.ppq,this._clock=new Ln({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=t.ppq,this.bpm.setValueAtTime(t.bpm,0),it(this,"bpm"),this._timeSignature=t.timeSignature,this._swingTicks=t.ppq/2}static getDefaults(){return Object.assign(pt.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(t,e){if(this._loop.get(t)&&e>=this._loopEnd&&(this.emit("loopEnd",t),this._clock.setTicksAtTime(this._loopStart,t),e=this._loopStart,this.emit("loopStart",t,this._clock.getSecondsAtTime(t)),this.emit("loop",t)),this._swingAmount>0&&e%this._ppq!==0&&e%(this._swingTicks*2)!==0){const n=e%(this._swingTicks*2)/(this._swingTicks*2),r=Math.sin(n*Math.PI)*this._swingAmount;t+=new Mt(this.context,this._swingTicks*2/3).toSeconds()*r}Tr(!0),this._timeline.forEachAtTime(e,n=>n.invoke(t)),Tr(!1)}schedule(t,e){const n=new re(this,{callback:t,time:new Ue(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}scheduleRepeat(t,e,n,r=1/0){const i=new zs(this,{callback:t,duration:new Pt(this.context,r).toTicks(),interval:new Pt(this.context,e).toTicks(),time:new Ue(this.context,n).toTicks()});return this._addEvent(i,this._repeatedEvents)}scheduleOnce(t,e){const n=new re(this,{callback:t,once:!0,time:new Ue(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}clear(t){if(this._scheduledEvents.hasOwnProperty(t)){const e=this._scheduledEvents[t.toString()];e.timeline.remove(e.event),e.event.dispose(),delete this._scheduledEvents[t.toString()]}return this}_addEvent(t,e){return this._scheduledEvents[t.id.toString()]={event:t,timeline:e},e.add(t),t.id}cancel(t=0){const e=this.toTicks(t);return this._timeline.forEachFrom(e,n=>this.clear(n.id)),this._repeatedEvents.forEachFrom(e,n=>this.clear(n.id)),this}_bindClockEvents(){this._clock.on("start",(t,e)=>{e=new Mt(this.context,e).toSeconds(),this.emit("start",t,e)}),this._clock.on("stop",t=>{this.emit("stop",t)}),this._clock.on("pause",t=>{this.emit("pause",t)})}get state(){return this._clock.getStateAtTime(this.now())}start(t,e){this.context.resume();let n;return G(e)&&(n=this.toTicks(e)),this._clock.start(t,n),this}stop(t){return this._clock.stop(t),this}pause(t){return this._clock.pause(t),this}toggle(t){return t=this.toSeconds(t),this._clock.getStateAtTime(t)!=="started"?this.start(t):this.stop(t),this}get timeSignature(){return this._timeSignature}set timeSignature(t){Ft(t)&&(t=t[0]/t[1]*4),this._timeSignature=t}get loopStart(){return new Pt(this.context,this._loopStart,"i").toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t)}get loopEnd(){return new Pt(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t)}get loop(){return this._loop.get(this.now())}set loop(t){this._loop.set(t,this.now())}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get swing(){return this._swingAmount}set swing(t){this._swingAmount=t}get swingSubdivision(){return new Mt(this.context,this._swingTicks).toNotation()}set swingSubdivision(t){this._swingTicks=this.toTicks(t)}get position(){const t=this.now(),e=this._clock.getTicksAtTime(t);return new Mt(this.context,e).toBarsBeatsSixteenths()}set position(t){const e=this.toTicks(t);this.ticks=e}get seconds(){return this._clock.seconds}set seconds(t){const e=this.now(),n=this._clock.frequency.timeToTicks(t,e);this.ticks=n}get progress(){if(this.loop){const t=this.now();return(this._clock.getTicksAtTime(t)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(t){if(this._clock.ticks!==t){const e=this.now();if(this.state==="started"){const n=this._clock.getTicksAtTime(e),r=this._clock.frequency.getDurationOfTicks(Math.ceil(n)-n,e),i=e+r;this.emit("stop",i),this._clock.setTicksAtTime(t,i),this.emit("start",i,this._clock.getSecondsAtTime(i))}else this.emit("ticks",e),this._clock.setTicksAtTime(t,e)}}getTicksAtTime(t){return this._clock.getTicksAtTime(t)}getSecondsAtTime(t){return this._clock.getSecondsAtTime(t)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(t){this._clock.frequency.multiplier=t}nextSubdivision(t){if(t=this.toTicks(t),this.state!=="started")return 0;{const e=this.now(),n=this.getTicksAtTime(e),r=t-n%t;return this._clock.nextTickTime(r,e)}}syncSignal(t,e){const n=this.now();let r=this.bpm,i=1/(60/r.getValueAtTime(n)/this.PPQ),a=[];if(t.units==="time"){const c=.015625/i,l=new _t(c),u=new Us(-1),h=new _t(c);r.chain(l,u,h),r=h,i=1/i,a=[l,u,h]}e||(t.getValueAtTime(n)!==0?e=t.getValueAtTime(n)/i:e=0);const o=new _t(e);return r.connect(o),o.connect(t._param),a.push(o),this._syncedSignals.push({initial:t.value,nodes:a,signal:t}),t.value=0,this}unsyncSignal(t){for(let e=this._syncedSignals.length-1;e>=0;e--){const n=this._syncedSignals[e];n.signal===t&&(n.nodes.forEach(r=>r.dispose()),n.signal.value=n.initial,this._syncedSignals.splice(e,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),xi(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}rn.mixin(Bn);Pn(s=>{s.transport=new Bn({context:s})});Fn(s=>{s.transport.dispose()});class Nt extends U{constructor(t){super(t),this.input=void 0,this._state=new qn("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=$,this._syncedStop=$,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new qe({context:this.context,mute:t.mute,volume:t.volume}),this.volume=this._volume.volume,it(this,"volume"),this.onstop=t.onstop}static getDefaults(){return Object.assign(U.getDefaults(),{mute:!1,onstop:$,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}_clampToCurrentTime(t){return this._synced?t:Math.max(t,this.context.currentTime)}start(t,e,n){let r=It(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(r=this._clampToCurrentTime(r),!this._synced&&this._state.getValueAtTime(r)==="started")B(Re(r,this._state.get(r).time),"Start time must be strictly greater than previous start time"),this._state.cancel(r),this._state.setStateAtTime("started",r),this.log("restart",r),this.restart(r,e,n);else if(this.log("start",r),this._state.setStateAtTime("started",r),this._synced){const i=this._state.get(r);i&&(i.offset=this.toSeconds(pe(e,0)),i.duration=n?this.toSeconds(n):void 0);const a=this.context.transport.schedule(o=>{this._start(o,e,n)},r);this._scheduled.push(a),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>r&&this._syncedStart(this.now(),this.context.transport.seconds)}else bi(this.context),this._start(r,e,n);return this}stop(t){let e=It(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(e=this._clampToCurrentTime(e),this._state.getValueAtTime(e)==="started"||G(this._state.getNextState("started",e))){if(this.log("stop",e),!this._synced)this._stop(e);else{const n=this.context.transport.schedule(this._stop.bind(this),e);this._scheduled.push(n)}this._state.cancel(e),this._state.setStateAtTime("stopped",e)}return this}restart(t,e,n){return t=this.toSeconds(t),this._state.getValueAtTime(t)==="started"&&(this._state.cancel(t),this._restart(t,e,n)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(t,e)=>{if(Re(e,0)){const n=this._state.get(e);if(n&&n.state==="started"&&n.time!==e){const r=e-this.toSeconds(n.time);let i;n.duration&&(i=this.toSeconds(n.duration)-r),this._start(t,this.toSeconds(n.offset)+r,i)}}},this._syncedStop=t=>{const e=this.context.transport.getSecondsAtTime(Math.max(t-this.sampleTime,0));this._state.getValueAtTime(e)==="started"&&this._stop(t)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(t=>this.context.transport.clear(t)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=$,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class jn extends xe{constructor(){const t=L(jn.getDefaults(),arguments,["url","onload"]);super(t),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1,We(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new nt({context:this.context,param:this._source.playbackRate,units:"positive",value:t.playbackRate}),this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this._buffer=new K(t.url,t.onload,t.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(xe.getDefaults(),{url:new K,loop:!1,loopEnd:0,loopStart:0,onload:$,onerror:$,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t}get curve(){return this._curve}set curve(t){this._curve=t}start(t,e,n,r=1){B(this.buffer.loaded,"buffer is either not set or not loaded");const i=this.toSeconds(t);this._startGain(i,r),this.loop?e=pe(e,this.loopStart):e=pe(e,0);let a=Math.max(this.toSeconds(e),0);if(this.loop){const o=this.toSeconds(this.loopEnd)||this.buffer.duration,c=this.toSeconds(this.loopStart),l=o-c;us(a,o)&&(a=(a-c)%l+c),Vt(a,this.buffer.duration)&&(a=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,Rn(a,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(i,a)),G(n)){let o=this.toSeconds(n);o=Math.max(o,0),this.stop(i+o)}return this}_stopSource(t){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(t)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(t){this._source.loopStart=this.toSeconds(t)}get loopEnd(){return this._source.loopEnd}set loopEnd(t){this._source.loopEnd=this.toSeconds(t)}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._source.loop}set loop(t){this._source.loop=t,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}function ye(s,t){return lt(this,void 0,void 0,function*(){const e=t/s.context.sampleRate,n=new Is(1,e,s.context.sampleRate);return new s.constructor(Object.assign(s.get(),{frequency:2/e,detune:0,context:n})).toDestination().start(0),(yield n.render()).getChannelData(0)})}class Gs extends xe{constructor(){const t=L(Gs.getDefaults(),arguments,["frequency","type"]);super(t),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator],We(this._oscillator,this._gainNode),this.type=t.type,this.frequency=new nt({context:this.context,param:this._oscillator.frequency,units:"frequency",value:t.frequency}),this.detune=new nt({context:this.context,param:this._oscillator.detune,units:"cents",value:t.detune}),it(this,["frequency","detune"])}static getDefaults(){return Object.assign(xe.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._oscillator.start(e),this}_stopSource(t){this._oscillator.stop(t)}setPeriodicWave(t){return this._oscillator.setPeriodicWave(t),this}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class ot extends Nt{constructor(){const t=L(ot.getDefaults(),arguments,["frequency","type"]);super(t),this.name="Oscillator",this._oscillator=null,this.frequency=new ft({context:this.context,units:"frequency",value:t.frequency}),it(this,"frequency"),this.detune=new ft({context:this.context,units:"cents",value:t.detune}),it(this,"detune"),this._partials=t.partials,this._partialCount=t.partialCount,this._type=t.type,t.partialCount&&t.type!=="custom"&&(this._type=this.baseType+t.partialCount.toString()),this.phase=t.phase}static getDefaults(){return Object.assign(Nt.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(t){const e=this.toSeconds(t),n=new Gs({context:this.context,onended:()=>this.onstop(this)});this._oscillator=n,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(e)}_stop(t){const e=this.toSeconds(t);this._oscillator&&this._oscillator.stop(e)}_restart(t){const e=this.toSeconds(t);return this.log("restart",e),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(e),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return ot._periodicWaveCache.find(e=>e.phase===this._phase&&ph(e.partials,this._partials));{const t=ot._periodicWaveCache.find(e=>e.type===this._type&&e.phase===this._phase);return this._partialCount=t?t.partialCount:this._partialCount,t}}get type(){return this._type}set type(t){this._type=t;const e=["sine","square","sawtooth","triangle"].indexOf(t)!==-1;if(this._phase===0&&e)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=t);else{const n=this._getCachedPeriodicWave();if(G(n)){const{partials:r,wave:i}=n;this._wave=i,this._partials=r,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[r,i]=this._getRealImaginary(t,this._phase),a=this.context.createPeriodicWave(r,i);this._wave=a,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),ot._periodicWaveCache.push({imag:i,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:r,type:this._type,wave:this._wave}),ot._periodicWaveCache.length>100&&ot._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(t){this.partialCount&&this._type!=="custom"&&t!=="custom"?this.type=t+this.partialCount:this.type=t}get partialCount(){return this._partialCount}set partialCount(t){se(t,0);let e=this._type;const n=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(n&&(e=n[1]),this._type!=="custom")t===0?this.type=e:this.type=e+t.toString();else{const r=new Float32Array(t);this._partials.forEach((i,a)=>r[a]=i),this._partials=Array.from(r),this.type=this._type}}_getRealImaginary(t,e){let r=2048;const i=new Float32Array(r),a=new Float32Array(r);let o=1;if(t==="custom"){if(o=this._partials.length+1,this._partialCount=this._partials.length,r=o,this._partials.length===0)return[i,a]}else{const c=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(t);c?(o=parseInt(c[2],10)+1,this._partialCount=parseInt(c[2],10),t=c[1],o=Math.max(o,2),r=o):this._partialCount=0,this._partials=[]}for(let c=1;c<r;++c){const l=2/(c*Math.PI);let u;switch(t){case"sine":u=c<=o?1:0,this._partials[c-1]=u;break;case"square":u=c&1?2*l:0,this._partials[c-1]=u;break;case"sawtooth":u=l*(c&1?1:-1),this._partials[c-1]=u;break;case"triangle":c&1?u=2*(l*l)*(c-1>>1&1?-1:1):u=0,this._partials[c-1]=u;break;case"custom":u=this._partials[c-1];break;default:throw new TypeError("Oscillator: invalid type: "+t)}u!==0?(i[c]=-u*Math.sin(e*c),a[c]=u*Math.cos(e*c)):(i[c]=0,a[c]=0)}return[i,a]}_inverseFFT(t,e,n){let r=0;const i=t.length;for(let a=0;a<i;a++)r+=t[a]*Math.cos(a*n)+e[a]*Math.sin(a*n);return r}getInitialValue(){const[t,e]=this._getRealImaginary(this._type,0);let n=0;const r=Math.PI*2,i=32;for(let a=0;a<i;a++)n=Math.max(this._inverseFFT(t,e,a/i*r),n);return mh(-this._inverseFFT(t,e,this._phase)/n,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(t){this._phase=t*Math.PI/180,this.type=this._type}asArray(){return lt(this,arguments,void 0,function*(t=1024){return ye(this,t)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}ot._periodicWaveCache=[];class Dh extends Ne{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new an({context:this.context,mapping:t=>(t+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Oe extends ft{constructor(){const t=L(Oe.getDefaults(),arguments,["value"]);super(t),this.name="Multiply",this.override=!1,this._mult=this.input=this.output=new _t({context:this.context,minValue:t.minValue,maxValue:t.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(ft.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class Un extends Nt{constructor(){const t=L(Un.getDefaults(),arguments,["frequency","type","modulationType"]);super(t),this.name="AMOscillator",this._modulationScale=new Dh({context:this.context}),this._modulationNode=new _t({context:this.context}),this._carrier=new ot({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new ot({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new Oe({context:this.context,units:"positive",value:t.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),it(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(ot.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){this._modulator.restart(t),this._carrier.restart(t)}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(){return lt(this,arguments,void 0,function*(t=1024){return ye(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class zn extends Nt{constructor(){const t=L(zn.getDefaults(),arguments,["frequency","type","modulationType"]);super(t),this.name="FMOscillator",this._modulationNode=new _t({context:this.context,gain:0}),this._carrier=new ot({context:this.context,detune:t.detune,frequency:0,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.detune=this._carrier.detune,this.frequency=new ft({context:this.context,units:"frequency",value:t.frequency}),this._modulator=new ot({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new Oe({context:this.context,units:"positive",value:t.harmonicity}),this.modulationIndex=new Oe({context:this.context,units:"positive",value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),it(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(ot.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){return this._modulator.restart(t),this._carrier.restart(t),this}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(){return lt(this,arguments,void 0,function*(t=1024){return ye(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class cn extends Nt{constructor(){const t=L(cn.getDefaults(),arguments,["frequency","width"]);super(t),this.name="PulseOscillator",this._widthGate=new _t({context:this.context,gain:0}),this._thresh=new an({context:this.context,mapping:e=>e<=0?-1:1}),this.width=new ft({context:this.context,units:"audioRange",value:t.width}),this._triangle=new ot({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),it(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(Nt.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(t){t=this.toSeconds(t),this._triangle.start(t),this._widthGate.gain.setValueAtTime(1,t)}_stop(t){t=this.toSeconds(t),this._triangle.stop(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(0,t)}_restart(t){this._triangle.restart(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(1,t)}get phase(){return this._triangle.phase}set phase(t){this._triangle.phase=t}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(t){this._triangle.type=t}asArray(){return lt(this,arguments,void 0,function*(t=1024){return ye(this,t)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class Gn extends Nt{constructor(){const t=L(Gn.getDefaults(),arguments,["frequency","type","spread"]);super(t),this.name="FatOscillator",this._oscillators=[],this.frequency=new ft({context:this.context,units:"frequency",value:t.frequency}),this.detune=new ft({context:this.context,units:"cents",value:t.detune}),this._spread=t.spread,this._type=t.type,this._phase=t.phase,this._partials=t.partials,this._partialCount=t.partialCount,this.count=t.count,it(this,["frequency","detune"])}static getDefaults(){return Object.assign(ot.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(t){t=this.toSeconds(t),this._forEach(e=>e.start(t))}_stop(t){t=this.toSeconds(t),this._forEach(e=>e.stop(t))}_restart(t){this._forEach(e=>e.restart(t))}_forEach(t){for(let e=0;e<this._oscillators.length;e++)t(this._oscillators[e],e)}get type(){return this._type}set type(t){this._type=t,this._forEach(e=>e.type=t)}get spread(){return this._spread}set spread(t){if(this._spread=t,this._oscillators.length>1){const e=-t/2,n=t/(this._oscillators.length-1);this._forEach((r,i)=>r.detune.value=e+n*i)}}get count(){return this._oscillators.length}set count(t){if(se(t,1),this._oscillators.length!==t){this._forEach(e=>e.dispose()),this._oscillators=[];for(let e=0;e<t;e++){const n=new ot({context:this.context,volume:-6-t*1.1,type:this._type,phase:this._phase+e/t*360,partialCount:this._partialCount,onstop:e===0?()=>this.onstop(this):$});this.type==="custom"&&(n.partials=this._partials),this.frequency.connect(n.frequency),this.detune.connect(n.detune),n.detune.overridden=!1,n.connect(this.output),this._oscillators[e]=n}this.spread=this._spread,this.state==="started"&&this._forEach(e=>e.start())}}get phase(){return this._phase}set phase(t){this._phase=t,this._forEach((e,n)=>e.phase=this._phase+n/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(t){this._forEach(e=>e.baseType=t),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this._type="custom",this._forEach(e=>e.partials=t))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(t){this._partialCount=t,this._forEach(e=>e.partialCount=t),this._type=this._oscillators[0].type}asArray(){return lt(this,arguments,void 0,function*(t=1024){return ye(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(t=>t.dispose()),this}}class Yn extends Nt{constructor(){const t=L(Yn.getDefaults(),arguments,["frequency","modulationFrequency"]);super(t),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new Oe({context:this.context,value:2}),this._pulse=new cn({context:this.context,frequency:t.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new ot({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),it(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(Nt.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(t){t=this.toSeconds(t),this._modulator.start(t),this._pulse.start(t)}_stop(t){t=this.toSeconds(t),this._modulator.stop(t),this._pulse.stop(t)}_restart(t){this._modulator.restart(t),this._pulse.restart(t)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(t){this._modulator.phase=t}asArray(){return lt(this,arguments,void 0,function*(t=1024){return ye(this,t)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const br={am:Un,fat:Gn,fm:zn,oscillator:ot,pulse:cn,pwm:Yn};class xn extends Nt{constructor(){const t=L(xn.getDefaults(),arguments,["frequency","type"]);super(t),this.name="OmniOscillator",this.frequency=new ft({context:this.context,units:"frequency",value:t.frequency}),this.detune=new ft({context:this.context,units:"cents",value:t.detune}),it(this,["frequency","detune"]),this.set(t)}static getDefaults(){return Object.assign(ot.getDefaults(),zn.getDefaults(),Un.getDefaults(),Gn.getDefaults(),cn.getDefaults(),Yn.getDefaults())}_start(t){this._oscillator.start(t)}_stop(t){this._oscillator.stop(t)}_restart(t){return this._oscillator.restart(t),this}get type(){let t="";return["am","fm","fat"].some(e=>this._sourceType===e)&&(t=this._sourceType),t+this._oscillator.type}set type(t){t.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(3)):t==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):t==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=t)}get partials(){return this._oscillator.partials}set partials(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=t)}get partialCount(){return this._oscillator.partialCount}set partialCount(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=t)}set(t){return Reflect.has(t,"type")&&t.type&&(this.type=t.type),super.set(t),this}_createNewOscillator(t){if(t!==this._sourceType){this._sourceType=t;const e=br[t],n=this.now();if(this._oscillator){const r=this._oscillator;r.stop(n),this.context.setTimeout(()=>r.dispose(),this.blockTime)}this._oscillator=new e({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(n)}}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t}get sourceType(){return this._sourceType}set sourceType(t){let e="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(e=this._oscillator.type),t==="fm"?this.type="fm"+e:t==="am"?this.type="am"+e:t==="fat"?this.type="fat"+e:t==="oscillator"?this.type=e:t==="pulse"?this.type="pulse":t==="pwm"&&(this.type="pwm")}_getOscType(t,e){return t instanceof br[e]}get baseType(){return this._oscillator.baseType}set baseType(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&t!=="pulse"&&t!=="pwm"&&(this._oscillator.baseType=t)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(t){this._getOscType(this._oscillator,"fat")&&Ht(t)&&(this._oscillator.count=t)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(t){this._getOscType(this._oscillator,"fat")&&Ht(t)&&(this._oscillator.spread=t)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(t){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&Zt(t)&&(this._oscillator.modulationType=t)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(){return lt(this,arguments,void 0,function*(t=1024){return ye(this,t)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}function Ii(s,t=1/0){const e=new WeakMap;return function(n,r){Reflect.defineProperty(n,r,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(i){se(i,s,t),e.set(this,i)}})}}function Jt(s,t=1/0){const e=new WeakMap;return function(n,r){Reflect.defineProperty(n,r,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(i){se(this.toSeconds(i),s,t),e.set(this,i)}})}}class ln extends Nt{constructor(){const t=L(ln.getDefaults(),arguments,["url","onload"]);super(t),this.name="Player",this._activeSources=new Set,this._buffer=new K({onload:this._onload.bind(this,t.onload),onerror:t.onerror,reverse:t.reverse,url:t.url}),this.autostart=t.autostart,this._loop=t.loop,this._loopStart=t.loopStart,this._loopEnd=t.loopEnd,this._playbackRate=t.playbackRate,this.fadeIn=t.fadeIn,this.fadeOut=t.fadeOut}static getDefaults(){return Object.assign(Nt.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:$,onerror:$,playbackRate:1,reverse:!1})}load(t){return lt(this,void 0,void 0,function*(){return yield this._buffer.load(t),this._onload(),this})}_onload(t=$){t(),this.autostart&&this.start()}_onSourceEnd(t){this.onstop(this),this._activeSources.delete(t),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(t,e,n){return super.start(t,e,n),this}_start(t,e,n){this._loop?e=pe(e,this._loopStart):e=pe(e,0);const r=this.toSeconds(e),i=n;n=pe(n,Math.max(this._buffer.duration-r,0));let a=this.toSeconds(n);a=a/this._playbackRate,t=this.toSeconds(t);const o=new jn({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(t+a),this._state.setStateAtTime("stopped",t+a,{implicitEnd:!0})),this._activeSources.add(o),this._loop&&It(i)?o.start(t,r):o.start(t,r,a-this.toSeconds(this.fadeOut))}_stop(t){const e=this.toSeconds(t);this._activeSources.forEach(n=>n.stop(e))}restart(t,e,n){return super.restart(t,e,n),this}_restart(t,e,n){var r;(r=[...this._activeSources].pop())===null||r===void 0||r.stop(t),this._start(t,e,n)}seek(t,e){const n=this.toSeconds(e);if(this._state.getValueAtTime(n)==="started"){const r=this.toSeconds(t);this._stop(n),this._start(n,r)}return this}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this.buffer.loaded&&se(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopStart=t})}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this.buffer.loaded&&se(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopEnd=t})}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._loop}set loop(t){if(this._loop!==t&&(this._loop=t,this._activeSources.forEach(e=>{e.loop=t}),t)){const e=this._state.getNextState("stopped",this.now());e&&this._state.cancel(e.time)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t;const e=this.now(),n=this._state.getNextState("stopped",e);n&&n.implicitEnd&&(this._state.cancel(n.time),this._activeSources.forEach(r=>r.cancelStop())),this._activeSources.forEach(r=>{r.playbackRate.setValueAtTime(t,e)})}get reverse(){return this._buffer.reverse}set reverse(t){this._buffer.reverse=t}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(t=>t.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}Bt([Jt(0)],ln.prototype,"fadeIn",void 0);Bt([Jt(0)],ln.prototype,"fadeOut",void 0);class ae extends U{constructor(){const t=L(ae.getDefaults(),arguments,["attack","decay","sustain","release"]);super(t),this.name="Envelope",this._sig=new ft({context:this.context,value:0}),this.output=this._sig,this.input=void 0,this.attack=t.attack,this.decay=t.decay,this.sustain=t.sustain,this.release=t.release,this.attackCurve=t.attackCurve,this.releaseCurve=t.releaseCurve,this.decayCurve=t.decayCurve}static getDefaults(){return Object.assign(U.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(t,e){if(Zt(t))return t;{let n;for(n in pn)if(pn[n][e]===t)return n;return t}}_setCurve(t,e,n){if(Zt(n)&&Reflect.has(pn,n)){const r=pn[n];de(r)?t!=="_decayCurve"&&(this[t]=r[e]):this[t]=r}else if(Ft(n)&&t!=="_decayCurve")this[t]=n;else throw new Error("Envelope: invalid curve: "+n)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(t){this._setCurve("_attackCurve","In",t)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(t){this._setCurve("_releaseCurve","Out",t)}get decayCurve(){return this._getCurve(this._decayCurve,"Out")}set decayCurve(t){this._setCurve("_decayCurve","Out",t)}triggerAttack(t,e=1){this.log("triggerAttack",t,e),t=this.toSeconds(t);let r=this.toSeconds(this.attack);const i=this.toSeconds(this.decay),a=this.getValueAtTime(t);if(a>0){const o=1/r;r=(1-a)/o}if(r<this.sampleTime)this._sig.cancelScheduledValues(t),this._sig.setValueAtTime(e,t);else if(this._attackCurve==="linear")this._sig.linearRampTo(e,r,t);else if(this._attackCurve==="exponential")this._sig.targetRampTo(e,r,t);else{this._sig.cancelAndHoldAtTime(t);let o=this._attackCurve;for(let c=1;c<o.length;c++)if(o[c-1]<=a&&a<=o[c]){o=this._attackCurve.slice(c),o[0]=a;break}this._sig.setValueCurveAtTime(o,t,r,e)}if(i&&this.sustain<1){const o=e*this.sustain,c=t+r;this.log("decay",c),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(o,i+c):this._sig.exponentialApproachValueAtTime(o,c,i)}return this}triggerRelease(t){this.log("triggerRelease",t),t=this.toSeconds(t);const e=this.getValueAtTime(t);if(e>0){const n=this.toSeconds(this.release);n<this.sampleTime?this._sig.setValueAtTime(0,t):this._releaseCurve==="linear"?this._sig.linearRampTo(0,n,t):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,n,t):(B(Ft(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(t),this._sig.setValueCurveAtTime(this._releaseCurve,t,n,e))}return this}getValueAtTime(t){return this._sig.getValueAtTime(t)}triggerAttackRelease(t,e,n=1){return e=this.toSeconds(e),this.triggerAttack(e,n),this.triggerRelease(e+this.toSeconds(t)),this}cancel(t){return this._sig.cancelScheduledValues(this.toSeconds(t)),this}connect(t,e=0,n=0){return Ps(this,t,e,n),this}asArray(){return lt(this,arguments,void 0,function*(t=1024){const e=t/this.context.sampleRate,n=new Is(1,e,this.context.sampleRate),r=this.toSeconds(this.attack)+this.toSeconds(this.decay),i=r+this.toSeconds(this.release),a=i*.1,o=i+a,c=new this.constructor(Object.assign(this.get(),{attack:e*this.toSeconds(this.attack)/o,decay:e*this.toSeconds(this.decay)/o,release:e*this.toSeconds(this.release)/o,context:n}));return c._sig.toDestination(),c.triggerAttackRelease(e*(r+a)/o,0),(yield n.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}Bt([Jt(0)],ae.prototype,"attack",void 0);Bt([Jt(0)],ae.prototype,"decay",void 0);Bt([Ii(0,1)],ae.prototype,"sustain",void 0);Bt([Jt(0)],ae.prototype,"release",void 0);const pn=(()=>{let t,e;const n=[];for(t=0;t<128;t++)n[t]=Math.sin(t/127*(Math.PI/2));const r=[],i=6.4;for(t=0;t<127;t++){e=t/127;const p=Math.sin(e*(Math.PI*2)*i-Math.PI/2)+1;r[t]=p/10+e*.83}r[127]=1;const a=[],o=5;for(t=0;t<128;t++)a[t]=Math.ceil(t/127*o)/o;const c=[];for(t=0;t<128;t++)e=t/127,c[t]=.5*(1-Math.cos(Math.PI*e));const l=[];for(t=0;t<128;t++){e=t/127;const p=Math.pow(e,3)*4+.2,f=Math.cos(p*Math.PI*2*e);l[t]=Math.abs(f*(1-e))}function u(p){const f=new Array(p.length);for(let d=0;d<p.length;d++)f[d]=1-p[d];return f}function h(p){return p.slice(0).reverse()}return{bounce:{In:u(l),Out:l},cosine:{In:n,Out:h(n)},exponential:"exponential",linear:"linear",ripple:{In:r,Out:u(r)},sine:{In:c,Out:u(c)},step:{In:a,Out:u(a)}}})();class Ee extends U{constructor(){const t=L(Ee.getDefaults(),arguments);super(t),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease,this._syncedRelease=e=>this._original_triggerRelease(e),this._volume=this.output=new qe({context:this.context,volume:t.volume}),this.volume=this._volume.volume,it(this,"volume")}static getDefaults(){return Object.assign(U.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}_syncState(){let t=!1;return this._synced||(this._synced=!0,t=!0),t}_syncMethod(t,e){const n=this["_original_"+t]=this[t];this[t]=(...r)=>{const i=r[e],a=this.context.transport.schedule(o=>{r[e]=o,n.apply(this,r)},i);this._scheduledEvents.push(a)}}unsync(){return this._scheduledEvents.forEach(t=>this.context.transport.clear(t)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease,this.context.transport.off("stop",this._syncedRelease),this.context.transport.off("pause",this._syncedRelease),this.context.transport.off("loopEnd",this._syncedRelease)),this}triggerAttackRelease(t,e,n,r){const i=this.toSeconds(n),a=this.toSeconds(e);return this.triggerAttack(t,i,r),this.triggerRelease(i+a),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class Me extends Ee{constructor(){const t=L(Me.getDefaults(),arguments);super(t),this.portamento=t.portamento,this.onsilence=t.onsilence}static getDefaults(){return Object.assign(Ee.getDefaults(),{detune:0,onsilence:$,portamento:0})}triggerAttack(t,e,n=1){this.log("triggerAttack",t,e,n);const r=this.toSeconds(e);return this._triggerEnvelopeAttack(r,n),this.setNote(t,r),this}triggerRelease(t){this.log("triggerRelease",t);const e=this.toSeconds(t);return this._triggerEnvelopeRelease(e),this}setNote(t,e){const n=this.toSeconds(e),r=t instanceof xt?t.toFrequency():t;if(this.portamento>0&&this.getLevelAtTime(n)>.05){const i=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(r,i,n)}else this.frequency.setValueAtTime(r,n);return this}}Bt([Jt(0)],Me.prototype,"portamento",void 0);class $n extends ae{constructor(){super(L($n.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new _t({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class Nn extends Me{constructor(){const t=L(Nn.getDefaults(),arguments);super(t),this.name="Synth",this.oscillator=new xn(Object.assign({context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)},t.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new $n(Object.assign({context:this.context},t.envelope)),this.oscillator.chain(this.envelope,this.output),it(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(Me.getDefaults(),{envelope:Object.assign(wr(ae.getDefaults(),Object.keys(U.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(wr(xn.getDefaults(),[...Object.keys(Nt.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(t,e){if(this.envelope.triggerAttack(t,e),this.oscillator.start(t),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),r=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+n+r)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class Hn extends Nn{constructor(){const t=L(Hn.getDefaults(),arguments);super(t),this.name="MembraneSynth",this.portamento=0,this.pitchDecay=t.pitchDecay,this.octaves=t.octaves,it(this,["oscillator","envelope"])}static getDefaults(){return Ae(Me.getDefaults(),Nn.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(t,e){const n=this.toSeconds(e),r=this.toFrequency(t instanceof xt?t.toFrequency():t),i=r*this.octaves;return this.oscillator.frequency.setValueAtTime(i,n),this.oscillator.frequency.exponentialRampToValueAtTime(r,n+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}Bt([Ii(0)],Hn.prototype,"octaves",void 0);Bt([Jt(0)],Hn.prototype,"pitchDecay",void 0);const Di=new Set;function Ys(s){Di.add(s)}function Vi(s,t){const e=`registerProcessor("${s}", ${t})`;Di.add(e)}const Vh=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the {@link ToneAudioWorklet}. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;Ys(Vh);const Ph=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;Ys(Ph);const Fh=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;Ys(Fh);const Wh="feedback-comb-filter",qh=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;Vi(Wh,qh);class Zn extends Ee{constructor(){const t=L(Zn.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");super(t),this.name="Sampler",this._activeSources=new Map;const e={};Object.keys(t.urls).forEach(n=>{const r=parseInt(n,10);if(B(dn(n)||Ht(r)&&isFinite(r),`url key is neither a note or midi pitch: ${n}`),dn(n)){const i=new xt(this.context,n).toMidi();e[i]=t.urls[n]}else Ht(r)&&isFinite(r)&&(e[r]=t.urls[r])}),this._buffers=new Bs({urls:e,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.attack=t.attack,this.release=t.release,this.curve=t.curve,this._buffers.loaded&&Promise.resolve().then(t.onload)}static getDefaults(){return Object.assign(Ee.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:$,onerror:$,release:.1,urls:{}})}_findClosest(t){let n=0;for(;n<96;){if(this._buffers.has(t+n))return-n;if(this._buffers.has(t-n))return n;n++}throw new Error(`No available buffers for note: ${t}`)}triggerAttack(t,e,n=1){return this.log("triggerAttack",t,e,n),Array.isArray(t)||(t=[t]),t.forEach(r=>{const i=Ei(new xt(this.context,r).toFrequency()),a=Math.round(i),o=i-a,c=this._findClosest(a),l=a-c,u=this._buffers.get(l),h=Oi(c+o),p=new jn({url:u,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:h}).connect(this.output);p.start(e,0,u.duration/h,n),Ft(this._activeSources.get(a))||this._activeSources.set(a,[]),this._activeSources.get(a).push(p),p.onended=()=>{if(this._activeSources&&this._activeSources.has(a)){const f=this._activeSources.get(a),d=f.indexOf(p);d!==-1&&f.splice(d,1)}}}),this}triggerRelease(t,e){return this.log("triggerRelease",t,e),Array.isArray(t)||(t=[t]),t.forEach(n=>{const r=new xt(this.context,n).toMidi();if(this._activeSources.has(r)&&this._activeSources.get(r).length){const i=this._activeSources.get(r);e=this.toSeconds(e),i.forEach(a=>{a.stop(e)}),this._activeSources.set(r,[])}}),this}releaseAll(t){const e=this.toSeconds(t);return this._activeSources.forEach(n=>{for(;n.length;)n.shift().stop(e)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(t,e,n,r=1){const i=this.toSeconds(n);return this.triggerAttack(t,i,r),Ft(e)?(B(Ft(t),"notes must be an array when duration is array"),t.forEach((a,o)=>{const c=e[Math.min(o,e.length-1)];this.triggerRelease(a,i+this.toSeconds(c))})):this.triggerRelease(t,i+this.toSeconds(e)),this}add(t,e,n){if(B(dn(t)||isFinite(t),`note must be a pitch or midi: ${t}`),dn(t)){const r=new xt(this.context,t).toMidi();this._buffers.add(r,e,n)}else this._buffers.add(t,e,n);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(t=>{t.forEach(e=>e.dispose())}),this._activeSources.clear(),this}}Bt([Jt(0)],Zn.prototype,"attack",void 0);Bt([Jt(0)],Zn.prototype,"release",void 0);class $s extends pt{constructor(){const t=L($s.getDefaults(),arguments,["callback","value"]);super(t),this.name="ToneEvent",this._state=new qn("stopped"),this._startOffset=0,this._loop=t.loop,this.callback=t.callback,this.value=t.value,this._loopStart=this.toTicks(t.loopStart),this._loopEnd=this.toTicks(t.loopEnd),this._playbackRate=t.playbackRate,this._probability=t.probability,this._humanize=t.humanize,this.mute=t.mute,this._playbackRate=t.playbackRate,this._state.increasing=!0,this._rescheduleEvents()}static getDefaults(){return Object.assign(pt.getDefaults(),{callback:$,humanize:!1,loop:!1,loopEnd:"1m",loopStart:0,mute:!1,playbackRate:1,probability:1,value:null})}_rescheduleEvents(t=-1){this._state.forEachFrom(t,e=>{let n;if(e.state==="started"){e.id!==-1&&this.context.transport.clear(e.id);const r=e.time+Math.round(this.startOffset/this._playbackRate);if(this._loop===!0||Ht(this._loop)&&this._loop>1){n=1/0,Ht(this._loop)&&(n=this._loop*this._getLoopDuration());const i=this._state.getAfter(r);i!==null&&(n=Math.min(n,i.time-r)),n!==1/0&&(n=new Mt(this.context,n));const a=new Mt(this.context,this._getLoopDuration());e.id=this.context.transport.scheduleRepeat(this._tick.bind(this),a,new Mt(this.context,r),n)}else e.id=this.context.transport.schedule(this._tick.bind(this),new Mt(this.context,r))}})}get state(){return this._state.getValueAtTime(this.context.transport.ticks)}get startOffset(){return this._startOffset}set startOffset(t){this._startOffset=t}get probability(){return this._probability}set probability(t){this._probability=t}get humanize(){return this._humanize}set humanize(t){this._humanize=t}start(t){const e=this.toTicks(t);return this._state.getValueAtTime(e)==="stopped"&&(this._state.add({id:-1,state:"started",time:e}),this._rescheduleEvents(e)),this}stop(t){this.cancel(t);const e=this.toTicks(t);if(this._state.getValueAtTime(e)==="started"){this._state.setStateAtTime("stopped",e,{id:-1});const n=this._state.getBefore(e);let r=e;n!==null&&(r=n.time),this._rescheduleEvents(r)}return this}cancel(t){t=pe(t,-1/0);const e=this.toTicks(t);return this._state.forEachFrom(e,n=>{this.context.transport.clear(n.id)}),this._state.cancel(e),this}_tick(t){const e=this.context.transport.getTicksAtTime(t);if(!this.mute&&this._state.getValueAtTime(e)==="started"){if(this.probability<1&&Math.random()>this.probability)return;if(this.humanize){let n=.02;wi(this.humanize)||(n=this.toSeconds(this.humanize)),t+=(Math.random()*2-1)*n}this.callback(t,this.value)}}_getLoopDuration(){return(this._loopEnd-this._loopStart)/this._playbackRate}get loop(){return this._loop}set loop(t){this._loop=t,this._rescheduleEvents()}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._rescheduleEvents()}get loopEnd(){return new Mt(this.context,this._loopEnd).toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t),this._loop&&this._rescheduleEvents()}get loopStart(){return new Mt(this.context,this._loopStart).toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t),this._loop&&this._rescheduleEvents()}get progress(){if(this._loop){const t=this.context.transport.ticks,e=this._state.get(t);if(e!==null&&e.state==="started"){const n=this._getLoopDuration();return(t-e.time)%n/n}else return 0}else return 0}dispose(){return super.dispose(),this.cancel(),this._state.dispose(),this}}class Hs extends pt{constructor(){const t=L(Hs.getDefaults(),arguments,["callback","interval"]);super(t),this.name="Loop",this._event=new $s({context:this.context,callback:this._tick.bind(this),loop:!0,loopEnd:t.interval,playbackRate:t.playbackRate,probability:t.probability,humanize:t.humanize}),this.callback=t.callback,this.iterations=t.iterations}static getDefaults(){return Object.assign(pt.getDefaults(),{interval:"4n",callback:$,playbackRate:1,iterations:1/0,probability:1,mute:!1,humanize:!1})}start(t){return this._event.start(t),this}stop(t){return this._event.stop(t),this}cancel(t){return this._event.cancel(t),this}_tick(t){this.callback(t)}get state(){return this._event.state}get progress(){return this._event.progress}get interval(){return this._event.loopEnd}set interval(t){this._event.loopEnd=t}get playbackRate(){return this._event.playbackRate}set playbackRate(t){this._event.playbackRate=t}get humanize(){return this._event.humanize}set humanize(t){this._event.humanize=t}get probability(){return this._event.probability}set probability(t){this._event.probability=t}get mute(){return this._event.mute}set mute(t){this._event.mute=t}get iterations(){return this._event.loop===!0?1/0:this._event.loop}set iterations(t){t===1/0?this._event.loop=!0:this._event.loop=t}dispose(){return super.dispose(),this._event.dispose(),this}}class Zs extends U{constructor(){const t=L(Zs.getDefaults(),arguments,["pan"]);super(t),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner,this.pan=new nt({context:this.context,param:this._panner.pan,value:t.pan,minValue:-1,maxValue:1}),this._panner.channelCount=t.channelCount,this._panner.channelCountMode="explicit",it(this,"pan")}static getDefaults(){return Object.assign(U.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}const Lh="bit-crusher",Bh=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;Vi(Lh,Bh);class ct extends U{constructor(){const t=L(ct.getDefaults(),arguments,["solo"]);super(t),this.name="Solo",this.input=this.output=new _t({context:this.context}),ct._allSolos.has(this.context)||ct._allSolos.set(this.context,new Set),ct._allSolos.get(this.context).add(this),this.solo=t.solo}static getDefaults(){return Object.assign(U.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(t){t?this._addSolo():this._removeSolo(),ct._allSolos.get(this.context).forEach(e=>e._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){ct._soloed.has(this.context)||ct._soloed.set(this.context,new Set),ct._soloed.get(this.context).add(this)}_removeSolo(){ct._soloed.has(this.context)&&ct._soloed.get(this.context).delete(this)}_isSoloed(){return ct._soloed.has(this.context)&&ct._soloed.get(this.context).has(this)}_noSolos(){return!ct._soloed.has(this.context)||ct._soloed.has(this.context)&&ct._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),ct._allSolos.get(this.context).delete(this),this._removeSolo(),this}}ct._allSolos=new Map;ct._soloed=new Map;class Xs extends U{constructor(){const t=L(Xs.getDefaults(),arguments,["pan","volume"]);super(t),this.name="PanVol",this._panner=this.input=new Zs({context:this.context,pan:t.pan,channelCount:t.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new qe({context:this.context,volume:t.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=t.mute,it(this,["pan","volume"])}static getDefaults(){return Object.assign(U.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class Ce extends U{constructor(){const t=L(Ce.getDefaults(),arguments,["volume","pan"]);super(t),this.name="Channel",this._solo=this.input=new ct({solo:t.solo,context:this.context}),this._panVol=this.output=new Xs({context:this.context,pan:t.pan,volume:t.volume,mute:t.mute,channelCount:t.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),it(this,["pan","volume"])}static getDefaults(){return Object.assign(U.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(t){this._solo.solo=t}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(t){this._panVol.mute=t}_getBus(t){return Ce.buses.has(t)||Ce.buses.set(t,new _t({context:this.context})),Ce.buses.get(t)}send(t,e=0){const n=this._getBus(t),r=new _t({context:this.context,units:"decibels",gain:e});return this.connect(r),r.connect(n),r}receive(t){return this._getBus(t).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}Ce.buses=new Map;Rt().transport;function jh(){return Rt().transport}Rt().destination;Rt().destination;Rt().listener;Rt().draw;Rt();class Pi{constructor(t){this.pos=t}display(t,e,n,r=1){const i=(this.pos.x+.5)*e,a=(this.pos.y+.5)*n;e*=r,n*=r;const o=i-e*.5,c=a-n*.5;t.fillRect(o,c,e,n)}}class ze extends Pi{constructor({head:t,pos:e,midinote:n}){super(e),this.head=t??this,this.head===this&&(this.willPlay=!0),this.midinote=n??ds(60,72),this.ampEnv=new $n({attack:.001,decay:0,sustain:1,release:.05}).toDestination(),this.osc=new ot(Nh(this.midinote).toFrequency(),"sine").connect(this.ampEnv).start()}moveAbs(t,e){this.previousCell&&this.previousCell.moveAbs(this.pos,e),this.direction=e.moduloCoords({x:t.x-this.pos.x,y:t.y-this.pos.y}),this.pos=t}moveRel(t,e){const n=t.getCoordSum(this.pos,e);this.moveAbs(n,t)}digest(t,e){const n=this.previousCell;n?n.digest(this.stomachContents,e):this.stomachContents&&this.grow(e),this.stomachContents=t,this.stomachContents&&(this.play(this.head.audiotime),this.stomachContents.play(this.head.audiotime))}grow(t){const{midinote:e}=this.stomachContents,n=this.previousCell,r=n?n.pos:t.getCoordSum(this.pos,{x:this.direction.x*-1,y:this.direction.y*-1}),i=new ze({head:this.head,pos:r,midinote:e});this.previousCell=i,i.play(this.head.audiotime)}sequenceStep(){const t=this.willPlay,e=this.previousCell;e&&e.sequenceStep(),t&&this.stomachContents===void 0&&this.play(this.head.audiotime),(e??this.head).willPlay=t}display(t,e,n){const r=Math.pow(this.ampEnv.value,.1),i=$i(r,.5,1)*255;t.fillStyle=`rgb(${i} ${i} ${i})`;const a=this.stomachContents?1.2:1;super.display(t,e,n,a)}play(t){this.ampEnv.triggerAttackRelease(.05,t)}destroy(){this.previousCell&&this.previousCell.destroy(),this.osc.dispose(),this.ampEnv.dispose()}}class Cr{constructor(t,e,n){Et(this,"_direction",{x:0,y:-1});Et(this,"directionQueue",[]);this.grid=n,this.head=new ze({pos:{x:t,y:e}})}set direction({x:t=0,y:e=0}){const n=this.directionQueue[this.directionQueue.length-1]??this._direction,r=Math.abs(t-n.x),i=Math.abs(e-n.y);r+i!==0&&(r<2&&i<2||this.length===1)&&this.directionQueue.push({x:t,y:e})}get cells(){const t=[this.head];let e=this.head;for(;e.previousCell;)e=e.previousCell,t.push(e);return t}get length(){return this.cells.length}step(t){this.head.audiotime=t,this.move();const e=this.grid.getItemAtPos(this.head.pos);this.eat(e)}eat(t){if(!t)return this.head.digest(t,this.grid);if(t instanceof ze)return this.die();const{midinote:e}=t;this.head.digest(new ze({midinote:e}),this.grid),t&&t.beEaten()}die(){document.dispatchEvent(new Event("snakeDied")),this.head.destroy()}move(){this._direction=this.directionQueue.shift()??this._direction,this.head.moveRel(this.grid,this._direction)}display(t){const e=this.grid.cellW,n=this.grid.cellH;this.cells.forEach(r=>r.display(t,e,n))}}class Uh extends Pi{constructor(t,e){super(t),this.remove=e,this.midinote=ds(60,72)}display(t,e,n){t.fillStyle="white",super.display(t,e,n)}beEaten(){this.remove(),document.dispatchEvent(new Event("foodEaten"))}}class zh{constructor(t){Et(this,"cols",32);Et(this,"rows",24);Et(this,"items",new Set);Et(this,"stepN",-1);this.ctx=t,this.snake=new Cr(this.cols/2,this.rows/2,this),this.makeFood(),document.addEventListener("foodEaten",()=>this.onFoodEaten()),document.addEventListener("snakeDied",()=>this.snake=new Cr(this.cols/2,this.rows/2,this))}update(t){this.snake.step(t),++this.stepN%2===0&&this.snake.head.sequenceStep()}display(){this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height);const t=this.cellW,e=this.cellH;this.snake.display(this.ctx),this.items.forEach(n=>{n.display(this.ctx,t,e)})}getCoordSum({x:t,y:e},{x:n=0,y:r=0}){return this.moduloCoords({x:t+n,y:e+r})}moduloCoords({x:t,y:e}){return{x:tr(t,this.cols),y:tr(e,this.rows)}}get cellW(){return this.ctx.canvas.width/this.cols}get cellH(){return this.ctx.canvas.height/this.rows}getFilledPositions(){const t=new Set;return this.snake.cells.forEach(e=>t.add(e.pos)),this.items.forEach(e=>t.add(e.pos)),t}getAvailablePositions(){const t=this.getFilledPositions(),e=new Set(Array.from(t).map(({x:r,y:i})=>`x${r}y${i}`)),n=new Set;for(let r=0;r<this.rows;r++)for(let i=0;i<this.cols;i++)e.has(`x${i}y${r}`)||n.add({x:i,y:r});return n}getRandomEmptyPos(){return Ge(Array.from(this.getAvailablePositions()))}getItemAtPos({x:t,y:e}){return[...this.items].concat(this.snake.cells.slice(1)).find(n=>n.pos.x===t&&n.pos.y===e)}makeFood(){const t=()=>this.items.delete(e),e=new Uh(this.getRandomEmptyPos(),t);this.items.add(e)}onFoodEaten(){this.makeFood()}}class Gh{constructor(){Et(this,"instruments",new Set)}addInstrument(t){this.instruments.add(t)}async start(t){await Th(),new Hs(e=>{this.instruments.forEach(n=>n.step(e)),t(e)},.1).start(0),jh().start()}}class Yh{constructor(t=[]){Et(this,"steps",[]);Et(this,"currentIndex",-1);this.steps=t}step(){return this.steps.length===0?this.currentIndex=void 0:(this.currentIndex=(this.currentIndex+1)%this.steps.length,this.currentStep)}get currentStep(){if(this.currentIndex!==void 0)return this.steps[this.currentIndex]}}const $h="https://raw.githubusercontent.com/geikha/tidal-drum-machines/main/machines/",Hh=["RolandTR808/rolandtr808-bd/BD0000.WAV","RolandTR808/rolandtr808-bd/BD0010.WAV","RolandTR808/rolandtr808-bd/BD0025.WAV","RolandTR808/rolandtr808-bd/BD0050.WAV","RolandTR808/rolandtr808-bd/BD0075.WAV","RolandTR808/rolandtr808-bd/BD1000.WAV","RolandTR808/rolandtr808-bd/BD1010.WAV","RolandTR808/rolandtr808-bd/BD1025.WAV","RolandTR808/rolandtr808-bd/BD1050.WAV","RolandTR808/rolandtr808-bd/BD1075.WAV","RolandTR808/rolandtr808-bd/BD2500.WAV","RolandTR808/rolandtr808-bd/BD2510.WAV","RolandTR808/rolandtr808-bd/BD2525.WAV","RolandTR808/rolandtr808-bd/BD2550.WAV","RolandTR808/rolandtr808-bd/BD2575.WAV","RolandTR808/rolandtr808-bd/BD5000.WAV","RolandTR808/rolandtr808-bd/BD5010.WAV","RolandTR808/rolandtr808-bd/BD5025.WAV","RolandTR808/rolandtr808-bd/BD5050.WAV","RolandTR808/rolandtr808-bd/BD5075.WAV","RolandTR808/rolandtr808-bd/BD7500.WAV","RolandTR808/rolandtr808-bd/BD7510.WAV","RolandTR808/rolandtr808-bd/BD7525.WAV","RolandTR808/rolandtr808-bd/BD7550.WAV","RolandTR808/rolandtr808-bd/BD7575.WAV"],Zh=["RolandTR808/rolandtr808-cb/CB.WAV","RolandTR808/rolandtr808-cb/Cowbell.wav"],Xh=["RolandTR808/rolandtr808-cp/cp0.wav","RolandTR808/rolandtr808-cp/cp1.wav","RolandTR808/rolandtr808-cp/cp2.wav","RolandTR808/rolandtr808-cp/cp3.wav","RolandTR808/rolandtr808-cp/cp4.WAV"],Qh=["RolandTR808/rolandtr808-cr/CY0000.WAV","RolandTR808/rolandtr808-cr/CY0010.WAV","RolandTR808/rolandtr808-cr/CY0025.WAV","RolandTR808/rolandtr808-cr/CY0050.WAV","RolandTR808/rolandtr808-cr/CY0075.WAV","RolandTR808/rolandtr808-cr/CY1000.WAV","RolandTR808/rolandtr808-cr/CY1010.WAV","RolandTR808/rolandtr808-cr/CY1025.WAV","RolandTR808/rolandtr808-cr/CY1050.WAV","RolandTR808/rolandtr808-cr/CY1075.WAV","RolandTR808/rolandtr808-cr/CY2500.WAV","RolandTR808/rolandtr808-cr/CY2510.WAV","RolandTR808/rolandtr808-cr/CY2525.WAV","RolandTR808/rolandtr808-cr/CY2550.WAV","RolandTR808/rolandtr808-cr/CY2575.WAV","RolandTR808/rolandtr808-cr/CY5000.WAV","RolandTR808/rolandtr808-cr/CY5010.WAV","RolandTR808/rolandtr808-cr/CY5025.WAV","RolandTR808/rolandtr808-cr/CY5050.WAV","RolandTR808/rolandtr808-cr/CY5075.WAV","RolandTR808/rolandtr808-cr/CY7500.WAV","RolandTR808/rolandtr808-cr/CY7510.WAV","RolandTR808/rolandtr808-cr/CY7525.WAV","RolandTR808/rolandtr808-cr/CY7550.WAV","RolandTR808/rolandtr808-cr/CY7575.WAV"],Jh=["RolandTR808/rolandtr808-hh/CH.WAV"],Kh=["RolandTR808/rolandtr808-ht/HT00.WAV","RolandTR808/rolandtr808-ht/HT10.WAV","RolandTR808/rolandtr808-ht/HT25.WAV","RolandTR808/rolandtr808-ht/HT50.WAV","RolandTR808/rolandtr808-ht/HT75.WAV"],td=["RolandTR808/rolandtr808-lt/LT00.WAV","RolandTR808/rolandtr808-lt/LT10.WAV","RolandTR808/rolandtr808-lt/LT25.WAV","RolandTR808/rolandtr808-lt/LT50.WAV","RolandTR808/rolandtr808-lt/LT75.WAV"],ed=["RolandTR808/rolandtr808-mt/MT00.WAV","RolandTR808/rolandtr808-mt/MT10.WAV","RolandTR808/rolandtr808-mt/MT25.WAV","RolandTR808/rolandtr808-mt/MT50.WAV","RolandTR808/rolandtr808-mt/MT75.WAV"],nd=["RolandTR808/rolandtr808-oh/OH00.WAV","RolandTR808/rolandtr808-oh/OH10.WAV","RolandTR808/rolandtr808-oh/OH25.WAV","RolandTR808/rolandtr808-oh/OH50.WAV","RolandTR808/rolandtr808-oh/OH75.WAV"],sd=["RolandTR808/rolandtr808-perc/CL.WAV","RolandTR808/rolandtr808-perc/HC00.WAV","RolandTR808/rolandtr808-perc/HC10.WAV","RolandTR808/rolandtr808-perc/HC25.WAV","RolandTR808/rolandtr808-perc/HC50.WAV","RolandTR808/rolandtr808-perc/HC75.WAV","RolandTR808/rolandtr808-perc/LC00.WAV","RolandTR808/rolandtr808-perc/LC10.WAV","RolandTR808/rolandtr808-perc/LC25.WAV","RolandTR808/rolandtr808-perc/LC50.WAV","RolandTR808/rolandtr808-perc/LC75.WAV","RolandTR808/rolandtr808-perc/MC00.WAV","RolandTR808/rolandtr808-perc/MC10.WAV","RolandTR808/rolandtr808-perc/MC25.WAV","RolandTR808/rolandtr808-perc/MC50.WAV","RolandTR808/rolandtr808-perc/MC75.WAV"],rd=["RolandTR808/rolandtr808-rim/RS.WAV"],id=["RolandTR808/rolandtr808-sd/SD0000.WAV","RolandTR808/rolandtr808-sd/SD0010.WAV","RolandTR808/rolandtr808-sd/SD0025.WAV","RolandTR808/rolandtr808-sd/SD0050.WAV","RolandTR808/rolandtr808-sd/SD0075.WAV","RolandTR808/rolandtr808-sd/SD1000.WAV","RolandTR808/rolandtr808-sd/SD1010.WAV","RolandTR808/rolandtr808-sd/SD1025.WAV","RolandTR808/rolandtr808-sd/SD1050.WAV","RolandTR808/rolandtr808-sd/SD1075.WAV","RolandTR808/rolandtr808-sd/SD2500.WAV","RolandTR808/rolandtr808-sd/SD2510.WAV","RolandTR808/rolandtr808-sd/SD2525.WAV","RolandTR808/rolandtr808-sd/SD2550.WAV","RolandTR808/rolandtr808-sd/SD2575.WAV","RolandTR808/rolandtr808-sd/SD5000.WAV","RolandTR808/rolandtr808-sd/SD5010.WAV","RolandTR808/rolandtr808-sd/SD5025.WAV","RolandTR808/rolandtr808-sd/SD5050.WAV","RolandTR808/rolandtr808-sd/SD5075.WAV","RolandTR808/rolandtr808-sd/SD7500.WAV","RolandTR808/rolandtr808-sd/SD7510.WAV","RolandTR808/rolandtr808-sd/SD7525.WAV","RolandTR808/rolandtr808-sd/SD7550.WAV","RolandTR808/rolandtr808-sd/SD7575.WAV"],od=["RolandTR808/rolandtr808-sh/Cabasa.wav","RolandTR808/rolandtr808-sh/MA.WAV"],Ar={_base:$h,RolandTR808_bd:Hh,RolandTR808_cb:Zh,RolandTR808_cp:Xh,RolandTR808_cr:Qh,RolandTR808_hh:Jh,RolandTR808_ht:Kh,RolandTR808_lt:td,RolandTR808_mt:ed,RolandTR808_oh:nd,RolandTR808_perc:sd,RolandTR808_rim:rd,RolandTR808_sd:id,RolandTR808_sh:od};class Ze{constructor(t){Et(this,"bank","RolandTR808");this._sequence=new Yh,this.type=t,this.player=new ln().toDestination(),this.chooseSample()}chooseSample(){const t=Ge(Ar[[this.bank,Ge(this.type)].join("_")]),e=Ar._base+t;this.player.load(e)}set sequence(t){this._sequence.steps=t.reduce((e,n)=>(e.push(n,0),e),[])}step(t){this._sequence.step()&&this.player.start(t)}}Et(Ze,"type",{BASS:["bd","lt"],MID:["cp","sd","ht"]});function ad(s,t,{signal:e}){const n=setInterval(()=>{if(e.aborted)return clearInterval(n);s()},t);return e.addEventListener("abort",()=>clearInterval(n)),n}function Fi(s){const t=new AbortController,e=t.signal;return s.classList.add("clicked"),s.click(),e.addEventListener("abort",()=>s.classList.remove("clicked")),ad(()=>s.click(),100,{signal:e}),s.addEventListener("pointerup",()=>t.abort(),{signal:e}),s.addEventListener("pointerleave",()=>t.abort(),{signal:e}),t}function cd(s){const t=document.getElementById("directional-buttons"),e={};[...t.children].forEach(n=>{n.id!=="circle"&&(n.addEventListener("click",r=>{r.isTrusted||s[n.dataset.action].action()}),n.addEventListener("pointerdown",()=>Fi(n)),e[n.dataset.startTurn]={action:s[n.dataset.action],button:n})}),ld(t,t.querySelector("#circle"),e)}let ts,fn,Sr,mn,es,Be;function ld(s,t,e){document.addEventListener("pointerdown",n=>{const r=matchMedia("(pointer:coarse)").matches;if(n.target!==t&&!(r&&n.target===s))return;const{x:i,y:a,width:o,height:c}=s.getBoundingClientRect();mn=t.getBoundingClientRect().height,fn={x:i+o/2,y:a+c/2},Sr=Math.pow((c-mn)/2,2);const{clientX:l,clientY:u}=n;ts={x:l-fn.x-mn/2,y:u-fn.y-mn/2}}),document.addEventListener("pointermove",n=>{if(ts===void 0)return;const{x:r,y:i}=fn,{clientX:a,clientY:o}=n,c=a-r,l=o-i,u=Math.min(c*c+l*l,Sr),h=Math.sqrt(u),p=Math.atan2(l,c),[f,d]=Hi(h,p);t.style.translate=`${f}px ${d}px`;const m=12;let _;if(h<=m)_=void 0;else{const y=(p/Math.PI+2.25)%2/2,b=Math.floor(y*4)/4;_=e[b]}es!==_&&(es!==void 0&&Be.abort(),es=_,_!==void 0&&(Be=Fi(_.button)))}),document.addEventListener("pointerup",()=>{Be==null||Be.abort(),ts=void 0,t.style.translate=""})}const ud=document.getElementById("app"),hd=ud.getContext("2d"),Xn=new zh(hd);let je=Xn.snake;function Wi(){Xn.display(),requestAnimationFrame(Wi)}requestAnimationFrame(Wi);function dd(s){Xn.update(s)}const Qs=new Gh;function qi(){const s=Ge([5,7,8,9,10,11]),t=Jn(s,5,12,{skip:6}),e=er(Jn(s,Math.min(s-3,3),s-1),s),n=er(Jn(t,Math.min(t-3,3),t-1),t);Js.sequence=e,Ks.sequence=n}const Js=new Ze(Ze.type.BASS),Ks=new Ze(Ze.type.MID);qi();Qs.addInstrument(Js);Qs.addInstrument(Ks);document.addEventListener("snakeDied",()=>{qi(),Js.chooseSample(),Ks.chooseSample(),setTimeout(()=>je=Xn.snake,10)});const kr=document.querySelector("#start-btn");kr.addEventListener("click",()=>{Qs.start(s=>dd(s)),kr.remove()},{once:!0});const Li={STEER_UP:{key:"ArrowUp",action:()=>je.direction={y:-1}},STEER_RIGHT:{key:"ArrowRight",action:()=>je.direction={x:1}},STEER_DOWN:{key:"ArrowDown",action:()=>je.direction={y:1}},STEER_LEFT:{key:"ArrowLeft",action:()=>je.direction={x:-1}}};cd(Li);document.addEventListener("keydown",s=>{[...Object.entries(Li)].forEach(([t,e])=>{e.key===s.key&&(s.preventDefault(),e.action())})});
